{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Drush is a command line shell and Unix scripting interface for Drupal. Drush core ships with lots of useful commands and generators. Similarly, it runs update.php, executes SQL queries, runs content  migrations, and misc utilities like cron or cache rebuild. Drush can be extended by 3rd party commandfiles.</p> <p> </p>"},{"location":"#resources","title":"Resources","text":"<ul> <li>Installing and Upgrading</li> <li>Commands and Generators</li> <li>API Documentation</li> <li>Drush packages available via Composer</li> <li>A list of modules that include Drush integration</li> <li>Drush expects all participants to abide by the Drupal Code of Conduct.</li> <li>Drush 8 is no longer recommended, but here are its docs.</li> </ul>"},{"location":"#support","title":"Support","text":"<ul> <li>Post support requests to Drupal Answers. Tag question with drush.</li> <li>Report bugs and request features in the GitHub Drush Issue Queue.</li> <li>Use pull requests (PRs) to contribute to Drush. Guidelines.</li> </ul>"},{"location":"#faq","title":"FAQ","text":""},{"location":"#what-does-drush-stand-for","title":"What does Drush stand for?","text":"<p>A: The Drupal Shell.</p>"},{"location":"#how-do-i-pronounce-drush","title":"How do I pronounce Drush?","text":"<p>Some people pronounce the dru with a long 'u' like Drupal. Fidelity points go to them, but they are in the minority. Most pronounce Drush so that it rhymes with hush, rush, flush, etc. This is the preferred pronunciation.</p>"},{"location":"#credits","title":"Credits","text":"<ul> <li>Maintained by Moshe Weitzman with much help from the folks listed at https://github.com/orgs/drush-ops/people.</li> <li>Originally developed by Arto Bendiken for Drupal 4.7.</li> <li>Redesigned by Franz Heinzmann in May 2007 for Drupal 5.</li> <li>Thanks to JetBrains for supporting this project and open source software.</li> </ul>"},{"location":"bootstrap/","title":"The Drush Bootstrap Process","text":"<p>When preparing to run a command, Drush works by bootstrapping the Drupal environment in very much the same way that is done during a normal page request from the web server, so most Drush commands run in the context of a fully-initialized website.</p> <p>For efficiency and convenience, some Drush commands can work without first bootstrapping a Drupal site, or by only partially bootstrapping a site. This is faster than a full bootstrap. It is also a matter of convenience, because some commands are useful even when you don't have a working Drupal site.</p> <p>Commands may specify their bootstrap level with via an attribute or an annotation. Commands supplied by Drupal modules are always <code>full</code>.</p> PHP8 AttributeAnnotation <pre><code>use Drush\\Attributes as CLI;\n\n#[CLI\\Bootstrap(level: DrupalBootLevels::NONE)]\npublic function fetch($search = null, $options = ['image-viewer' =&gt; 'open', 'google-custom-search-api-key' =&gt; 'AIza']) {\n    $this-&gt;doFetch($search, $options);\n}\n</code></pre> <pre><code>/**\n * @bootstrap none\n*/\npublic function fetch($search = null, $options = ['image-viewer' =&gt; 'open', 'google-custom-search-api-key' =&gt; 'AIza']) {\n    $this-&gt;doFetch($search, $options);\n}\n</code></pre> <p>Prior to bootstrapping, Drush goes through the preflight process, where the following things occur:</p> <p>Preflight</p> <ol> <li>Commandline arguments are parsed.</li> <li>Configuration files are read.</li> <li>The site-alias included on the commandline is loaded if present.</li> <li>The local selected site is determined, if any.</li> <li>Dependency injection is done.</li> <li>Global commandfiles are loaded. Commandfiles that ship with modules are loaded later, during <code>bootstrap @full</code>. </li> <li>The command is dispatched via the Symfony Console component.</li> </ol> <p>Bootstrapping is done from a Symfony Console command hook. The different bootstrap levels are described below.</p>"},{"location":"bootstrap/#none","title":"none","text":"<p>Only run Drush preflight, without considering Drupal at all. Any code that operates on the Drush installation, and not specifically any Drupal directory, should bootstrap to this phase. This Attribute and value may also be used on a command class when it wants to load before Drupal bootstrap is started. Commands that ship inside Drupal modules always bootstrap to full, regardless of none value.</p>"},{"location":"bootstrap/#root","title":"root","text":"<p>Set up and test for a valid Drupal root. The root is usually discovered via the Composer Runtime API, looking for the path of the__drupal/core__ package. Any code that interacts with an entire Drupal installation, and not a specific site on the Drupal installation should use this bootstrap phase.</p>"},{"location":"bootstrap/#site","title":"site","text":"<p>Set up a Drupal site directory and the correct environment variables to allow Drupal to find the configuration file. If no site is specified with the --uri options, Drush will assume the site is 'default', which mimics Drupal's behaviour.  Note that it is necessary to specify a full URI, e.g. --uri=http://example.com, in order for certain Drush commands and Drupal modules to behave correctly. See the Drush configuration for more information. Any code that needs to modify or interact with a specific Drupal site's settings.php file should bootstrap to this phase.</p>"},{"location":"bootstrap/#configuration","title":"configuration","text":"<p>Load the settings from the Drupal sites directory. This phase is analogous to the DRUPAL_BOOTSTRAP_CONFIGURATION bootstrap phase in Drupal itself, and this is also the first step where Drupal specific code is included. This phase is commonly used for code that interacts with the Drupal install API, as both install.php and update.php start at this phase.</p>"},{"location":"bootstrap/#database","title":"database","text":"<p>Connect to the Drupal database using the database credentials loaded during the previous bootstrap phase. This phase is analogous to the DRUPAL_BOOTSTRAP_DATABASE bootstrap phase in Drupal. Any code that needs to interact with the Drupal database API needs to be bootstrapped to at least this phase.</p>"},{"location":"bootstrap/#full","title":"full","text":"<p>Fully initialize Drupal. This is analogous to the DRUPAL_BOOTSTRAP_FULL bootstrap phase in Drupal. Any code that interacts with the general Drupal API should be bootstrapped to this phase.</p>"},{"location":"bootstrap/#max","title":"max","text":"<p>This is not an actual bootstrap phase. Commands that use the \"max\" bootstrap level will cause Drush to bootstrap as far as possible, and then run the command regardless of the bootstrap phase that was reached. This is useful for Drush commands that work without a bootstrapped site, but that provide additional information or capabilities in the presence of a bootstrapped site. For example, <code>drush status</code> will show progressively more information the farther the site bootstraps.</p>"},{"location":"commands/","title":"Creating Custom Commands","text":"<p>Tip</p> <ol> <li>Drush 13 expects commandfiles to use the AutowireTrait to inject Drupal and Drush dependencies. Prior versions used a drush.services.yml file which is now deprecated and will be removed in Drush 14.</li> <li>Drush 12 expects all commandfiles in the <code>&lt;module-name&gt;/src/Drush/&lt;Commands|Generators&gt;</code> directory. The <code>Drush</code> subdirectory is a new requirement.</li> </ol> <p>Creating a new Drush command is easy. Follow the steps below.</p> <ol> <li>Run <code>drush generate drush:command-file</code>.</li> <li>Drush will prompt for the machine name of the module that should own the file. The module selected must already exist and be enabled. Use <code>drush generate module</code> to create a new module.</li> <li>Drush will then report that it created a commandfile. Edit as needed.</li> <li>Use the classes for the core Drush commands at /src/Commands as inspiration and documentation.</li> <li>You may inject dependencies into a command instance.</li> <li>Write PHPUnit tests based on Drush Test Traits.</li> </ol>"},{"location":"commands/#attributes-or-annotations","title":"Attributes or Annotations","text":"<p>The following are both valid ways to declare a command:</p> PHP8 AttributesAnnotations <pre><code>use Drush\\Attributes as CLI;\n\n/**\n * Retrieve and display xkcd cartoons (attribute variant).\n */\n#[CLI\\Command(name: 'xkcd:fetch-attributes', aliases: ['xkcd-attributes'])]\n#[CLI\\Argument(name: 'search', description: 'Optional argument to retrieve the cartoons matching an index, keyword, or \"random\".')]\n#[CLI\\Option(name: 'image-viewer', description: 'Command to use to view images (e.g. xv, firefox).', suggestedValues: ['open', 'xv', 'firefox'])]\n#[CLI\\Option(name: 'google-custom-search-api-key', description: 'Google Custom Search API Key')]\n#[CLI\\Usage(name: 'drush xkcd', description: 'Retrieve and display the latest cartoon')]\n#[CLI\\Usage(name: 'drush xkcd sandwich', description: 'Retrieve and display cartoons about sandwiches.')]\npublic function fetch($search = null, $options = ['image-viewer' =&gt; 'open', 'google-custom-search-api-key' =&gt; 'AIza']) {\n    $this-&gt;doFetch($search, $options);\n}\n</code></pre> <pre><code>/**\n * @command xkcd:fetch\n * @param $search Optional argument to retrieve the cartoons matching an index number, keyword, or \"random\".\n * @option image-viewer Command to use to view images (e.g. xv, firefox).\n * @option google-custom-search-api-key Google Custom Search API Key.\n * @usage drush xkcd\n *   Retrieve and display the latest cartoon.\n * @usage drush xkcd sandwich\n *   Retrieve and display cartoons about sandwiches.\n * @aliases xkcd\n*/\npublic function fetch($search = null, $options = ['image-viewer' =&gt; 'open', 'google-custom-search-api-key' =&gt; 'AIza']) {\n    $this-&gt;doFetch($search, $options);\n}\n</code></pre> <ul> <li>A commandfile that will only be used on PHP8+ should use PHP Attributes instead of Annotations.</li> <li>See Attributes provided by Drush core. Custom code can supply additional Attribute classes, which may then be added to any command. For example see InteractConfigName which is used by ConfigCommands.</li> </ul>"},{"location":"commands/#altering-command-info","title":"Altering Command Info","text":"<p>Drush command info (annotations/attributes) can be altered from other modules. This is done by creating and registering command info alterers. Alterers are classes that are able to intercept and manipulate an existing command annotation.</p> <p>In the module that wants to alter a command info, add a class that:</p> <ol> <li>The class namespace, relative to base namespace, should be <code>Drupal\\&lt;module-name&gt;\\Drush\\CommandInfoAlterers</code> and the class file should be located under the <code>src/Drush/CommandInfoAlterers</code> directory.</li> <li>The filename must have a name like FooCommandInfoAlterer.php. The prefix <code>Foo</code> can be whatever string you want. The file must end in <code>CommandInfoAlterer.php</code>.</li> <li>The class must implement the <code>\\Consolidation\\AnnotatedCommand\\CommandInfoAltererInterface</code>.</li> <li>Implement the alteration logic in the <code>alterCommandInfo()</code> method.</li> <li>Along with the alter code, it's strongly recommended to log a debug message explaining what exactly was altered. This makes things easier on others who may need to debug the interaction of the alter code with other modules. Also it's a good practice to inject the the logger in the class constructor.</li> </ol> <p>For an example, see WootCommandInfoAlterer provided by the testing 'woot' module.</p>"},{"location":"commands/#symfony-console-commands","title":"Symfony Console Commands","text":"<p>Drush lists and runs Symfony Console commands, in addition to more typical annotated commands. See GreetCommands as an example. Note that these commands must conform to the usual class name and class namespace requirements. You might need to extend the Console class if you can't rename and move it.</p>"},{"location":"commands/#auto-discovered-commands-psr4","title":"Auto-discovered commands (PSR4)","text":"<p>Such commands are auto-discovered by their class PSR4 namespace and class/file name suffix. Drush will auto-discover commands if:</p> <ul> <li>The commands class is PSR4 auto-loadable.</li> <li>The commands class namespace, relative to base namespace, is <code>Drush\\Commands</code>. For instance, if a Drush command provider third party library maps this PSR4 autoload entry:   <pre><code>\"autoload\": {\n\"psr-4\": {\n\"My\\\\Custom\\\\Library\\\\\": \"src\"\n}\n}\n</code></pre>   then the Drush global commands class namespace should be <code>My\\Custom\\Library\\Drush\\Commands</code> and the class file should be located under the <code>src/Drush/Commands</code> directory.</li> <li>The class and file name ends with <code>*DrushCommands</code>, e.g. <code>FooDrushCommands</code>.</li> </ul> <p>Auto-discovered commandfiles should declare their Drush version compatibility via a <code>conflict</code> directive. For example, a Composer-managed site-wide command that works with both Drush 11 and Drush 12 might contain something similar to the following in its composer.json file: <pre><code>    \"conflict\": {\n\"drush/drush\": \"&lt;11.0\",\n}\n</code></pre> Using <code>require</code> in place of <code>conflict</code> is not recommended.</p> <p>Symlinked packages</p> <p>While it is good practice to make your custom commands into a Composer package, please beware that symlinked packages (by using the composer repository type Path) will not be discovered by Drush. When in development, it is recommended to specify your package's path in your <code>drush.yml</code> to have quick access to your commands.</p>"},{"location":"commands/#site-wide-commands","title":"Site-wide Commands","text":"<p>Commandfiles that are installed in a Drupal site and are not bundled inside a Drupal module are called site-wide commandfiles. Site-wide commands may either be added directly to the Drupal site's repository (e.g. for site-specific policy files), or via <code>composer require</code>. See the examples/Commands folder for examples. In general, it's preferable to use modules to carry your Drush commands.</p> <p>Here are some examples of valid commandfile names and namespaces:</p> <ol> <li>Simple<ul> <li>Filename: $PROJECT_ROOT/drush/Commands/ExampleCommands.php</li> <li>Namespace: Drush\\Commands</li> </ul> </li> <li>Nested in a subdirectory committed to the site's repository<ul> <li>Filename: $PROJECT_ROOT/drush/Commands/example/ExampleCommands.php</li> <li>Namespace: Drush\\Commands\\example</li> </ul> </li> <li>Nested in a subdirectory installed via a Composer package<ul> <li>Filename: $PROJECT_ROOT/drush/Commands/contrib/dev_modules/ExampleCommands.php</li> <li>Namespace: Drush\\Commands\\dev_modules</li> </ul> </li> </ol> <p>Note: Make sure you do not include <code>src</code> in the path to your command. Your command may not be discovered and have additional problems.</p> <p>If a commandfile is added via a Composer package, then it may declare any dependencies that it may need in its composer.json file. Site-wide commandfiles that are committed directly to a site's repository only have access to the dependencies already available in the site. </p> <p>A site-wide commandfile should have tests that run with each (major) version of Drush that is supported. You may model your test suite after the example drush extension project.</p>"},{"location":"commands/#global-commands-discovered-by-configuration","title":"Global commands discovered by configuration","text":"<p>Deprecation</p> <p>Configuration discovery has been deprecated and will be removed in a future version of Drush. It is recommended that you avoid global Drush commands, and favor site-wide or PSR4 discovered commandfiles instead. If you really need commands that are not part of any Drupal site, consider making a stand-alone script or custom .phar instead. See ahoy, Robo and g1a/starter as potential starting points.</p> <p>Global commandfiles discoverable by configuration are not supported by default; in order to enable them, you must configure your <code>drush.yml</code> configuration file to add an <code>include</code> search location.</p> <p>For example:</p> <p><pre><code>drush:\npaths:\ninclude:\n- '${env.home}/.drush/commands'\n</code></pre> With this configuration in place, global commands may be placed as described in the Site-Wide Drush Commands section above. Global commandfiles may not declare any dependencies of their own; they may only use those dependencies already available via the autoloader.</p> <p>Tip</p> <ol> <li>The filename must be have a name like Commands/ExampleCommands.php</li> <li>The prefix <code>Example</code> can be whatever string you want.</li> <li>The file must end in <code>Commands.php</code><ol> <li>The directory above <code>Commands</code> must be one of:<ol> <li>A Folder listed in the 'include' option. Include may be provided via config or via CLI.</li> <li>../drush, /drush or /sites/all/drush. These paths are relative to Drupal root.</li> </ol> </li> </ol> </li> </ol>"},{"location":"commands/#xdebug","title":"Xdebug","text":"<p>Drush disables Xdebug by default. This improves performance substantially, because developers are often debugging something other than Drush and they still need to clear caches, import config, etc. There are two equivalent ways to override Drush's disabling of Xdebug:</p> <ul> <li>Pass the <code>--xdebug</code> global option.</li> <li>Set an environment variable: <code>DRUSH_ALLOW_XDEBUG=1 drush [command]</code></li> </ul>"},{"location":"config-exporting/","title":"Exporting and Importing Configuration","text":"<p>Drush provides commands to export, pull, and import Drupal configuration files.</p>"},{"location":"config-exporting/#simple-value-changes","title":"Simple - value changes","text":"<p>It is not necessary to alter configuration values to  make simple value changes to configuration variables, as this may be done by the configuration override system.</p> <p>The configuration override system allows you to change configuration values for a given instance of a site (e.g. the development server) by setting configuration variables in the site's settings.php file. For example, to change the name of a local development site: <pre><code>$config['system.site']['name'] = 'Local Install of Awesome Widgets, Inc.';\n</code></pre> Note that the configuration override system is a Drupal feature, not a Drush feature. It should be the preferred method for changing configuration values on a per-environment basis; however, it does not work for some things, such as enabling and disabling modules.</p>"},{"location":"config-exporting/#advanced-variation-by-environment","title":"Advanced - variation by environment","text":"<ul> <li>Drupal supports excluding development modules from enabling on higher environments.</li> <li>See Config Split module for more advanced needs.</li> </ul>"},{"location":"cron/","title":"Running Drupal cron tasks from Drush","text":"<p>Drupal cron tasks are often set up to be run via a wget/curl call to cron.php; this same task can also be accomplished via the cron command, which circumvents the need to provide a web server interface to cron.</p>"},{"location":"cron/#quick-start","title":"Quick start","text":"<p>If you just want to get started quickly, here is a crontab entry that will run cron once every hour at ten minutes after the hour:</p> <pre><code>10 * * * * cd [DOCROOT] &amp;&amp; /usr/bin/env PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin COLUMNS=72 ../vendor/bin/drush --uri=your.drupalsite.org --quiet maint:status &amp;&amp; /usr/bin/env PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin COLUMNS=72 ../vendor/bin/drush --uri=your.drupalsite.org --quiet cron\n</code></pre> <p>You should set up crontab to run your cron tasks as the same user that runs the web server; for example, if you run your web server as the user www-data:</p> <pre><code>sudo crontab -u www-data -e\n</code></pre> <p>You might need to edit the crontab entry shown above slightly for your particular setup; for example, if you have installed Drush to some directory other than /usr/local/drush, then you will need to adjust the path to drush appropriately. We'll break down the meaning of each section of the crontab entry in the documentation that continues below.</p>"},{"location":"cron/#setting-the-schedule","title":"Setting the schedule","text":"<p>See <code>man 5 crontab</code> for information on how to format the information in a crontab entry. In the example above, the schedule for the crontab is set by the string <code>10 * * * *</code>. These fields are the minute, hour, day of month, month and day of week; <code>*</code> means essentially 'all values', so <code>10 * * * *</code> will run any time the minute == 10 (once every hour).</p>"},{"location":"cron/#setting-the-path","title":"Setting the PATH","text":"<p>We use /usr/bin/env to run Drush so that we can set up some necessary environment variables that Drush needs to execute. By default, cron will run each command with an empty PATH, which would not work well with Drush. To find out what your PATH needs to be, just type:</p> <pre><code>echo $PATH\n</code></pre> <p>Take the value that is output and place it into your crontab entry in the place of the one shown above. You can remove any entry that is known to not be of interest to Drush (e.g. /usr/games), or is only useful in a graphic environment (e.g. /usr/X11/bin).</p>"},{"location":"cron/#setting-columns","title":"Setting COLUMNS","text":"<p>When running Drush in a terminal, the number of columns will be automatically determined by Drush by way of the tput command, which queries the active terminal to determine what the width of the screen is. When running Drush from cron, there will not be any terminal set, and the call to tput will produce an error message. Spurious error messages are undesirable, as cron is often configured to send email whenever any output is produced, so it is important to make an effort to insure that successful runs of cron complete with no output.</p> <p>In some cases, Drush is smart enough to recognize that there is no terminal -- if the terminal value is empty or \"dumb\", for example. However, there are some \"non-terminal\" values that Drush does not recognize, such as \"unknown.\" If you manually set <code>COLUMNS</code>, then Drush will respect your setting and will not attempt to call tput.</p>"},{"location":"cron/#using-quiet","title":"Using --quiet","text":"<p>By default, Drush will print a success message when the run of cron is completed. The --quiet flag will suppress these and other progress messages, again avoiding an unnecessary email message.</p>"},{"location":"cron/#specifying-the-drupal-site-to-run","title":"Specifying the Drupal site to run","text":"<p>The Drupal root is derived from which <code>drush</code> you call. The Drupal docroot is usually discovered via the Composer Runtime API, looking for the path of the__drupal/core__ package. Use the --uri to control which multisite to target within the docroot (if applicable).</p>"},{"location":"cron/#avoiding-maintenance-mode","title":"Avoiding Maintenance mode","text":"<p>The call to maint:status checks to see if the site is in maintenance mode. If yes, cron will not run and the command returns a failure. It is not safe to run cron while the site is in maintenance. See https://drupal.slack.com/archives/C45SW3FLM/p1675287662331809.</p>"},{"location":"dependency-injection/","title":"Dependency Injection","text":"<p>Drush command files obtain references to the resources they need through a technique called dependency injection. When using this programing paradigm, a class by convention will never use the <code>new</code> operator to instantiate dependencies. Instead, it will store the other objects it needs in  class variables, and provide a way for other code to assign an object to that variable.</p> <p>Tip</p> <p>Drush 11 and prior required dependency injection via a drush.services.yml file. This approach is deprecated in Drush 12+ and removed in Drush 13.</p>"},{"location":"dependency-injection/#autowire","title":"Autowire","text":"<p> 12.5+</p> <p>Command files may inject Drush and Drupal services by adding the AutowireTrait to the class (example: PmCommands). This enables your Constructor parameter type hints determine the the injected service. When a type hint is insufficient, an #[Autowire] Attribute on the constructor property (with service: named argument) directs AutoWireTrait to the right service (example: FieldDefinitionCommands).</p> <p>If your command is not found by Drush, add the <code>-vvv</code> option for debug info about any service instantiation errors. If Autowire is still insufficient, a commandfile may implement its own <code>create()</code> method (see below).</p>"},{"location":"dependency-injection/#create-method","title":"create() method","text":"<p> 11.6+</p> <p>Command files not using Autowire may inject services by adding a create() method to the commandfile. The passed in Container is a League container with a delegate to the Drupal container. Note that the type hint should be to <code>Psr\\Container\\ContainerInterface</code> not <code>Symfony\\Component\\DependencyInjection\\ContainerInterface</code>. A create() method and constructor will look something like this: <pre><code>class WootStaticFactoryCommands extends DrushCommands\n{\n    protected $configFactory;\n\n    protected function __construct($configFactory)\n    {\n        $this-&gt;configFactory = $configFactory;\n    }\n\n    public static function create(Psr\\Container\\ContainerInterface $container): self\n    {\n        return new static($container-&gt;get('config.factory'));\n    }\n</code></pre> See the Drupal Documentation for details on how to inject Drupal services into your command file. This approach mimics Drupal's blocks, forms, and controllers.</p>"},{"location":"dependency-injection/#createearly-method","title":"createEarly() method","text":"<p> 12.0+</p> <p>Drush 12 supported a <code>createEarly()</code> method. This is deprecated and instead put a <code>#[CLI\\Bootstrap(DrupalBootLevels::NONE)]</code> Attribute on the command class and inject dependencies via the usual <code>__construct()</code> and AutowireTrait. </p> <p>Note also that Drush commands packaged with Drupal modules are not discovered until after Drupal bootstraps, and therefore cannot use <code>createEarly()</code>. This mechanism is only usable by PSR-4 discovered commands packaged with Composer projects that are not Drupal modules.</p>"},{"location":"dependency-injection/#inflection","title":"Inflection","text":"<p>A command class may implement the following interfaces. When doing so, implement the corresponding trait to satisfy the interface.</p> <ul> <li>CustomEventAwareInterface: Allows command files to define and fire custom events that other command files can hook. Example: CacheCommands</li> <li>StdinAwareInterface: Read from standard input. This class contains facilities to redirect stdin to instead read from a file, e.g. in response to an option or argument value. Example: CacheCommands</li> </ul>"},{"location":"deploycommand/","title":"Deploy","text":"<p> 10.3+</p> <p>The deploy command standardizes how Drupal deployments work. The intent is your  deployment script updates the codebase for the target site and then this command  performs the following:</p> <pre><code>drush updatedb\ndrush config:import\ndrush cache:rebuild\ndrush deploy:hook\n</code></pre>"},{"location":"deploycommand/#authoring-update-functions","title":"Authoring update functions","text":"<p>Below are the 3 types of update functions run by this command, in order. Choose the most appropriate for your need. </p> Function Drupal API Purpose HOOK_update_n() Not allowed Low level changes. HOOK_post_update_NAME() Allowed Runs before config is imported. HOOK_deploy_NAME() Allowed Runs after config is imported."},{"location":"deploycommand/#configuration","title":"Configuration","text":"<p>If you need to customize this command, you should use Drush configuration for the  subcommands listed above (e.g. updatedb, config:import, etc.).</p>"},{"location":"generators/","title":"Overview","text":"<p>Tip</p> <p>Drush 11 and prior required generators to define a drush.services.yml file. This is no longer used with Drush 12+ generators. See docs for injecting dependencies.</p> <p>Generators jump start your coding by building all the boring boilerplate code for you. After running the generate command, you have a guide for where to insert your custom logic.</p> <p>Drush's generators reuse classes provided by the excellent Drupal Code Generator project. See its Commands directory for inspiration.</p>"},{"location":"generators/#writing-custom-generators","title":"Writing Custom Generators","text":"<p>Drupal modules may supply their own Generators, just like they can supply Commands.</p> <p>Creating a new Drush generator is easy. Follow the steps below.</p> <ol> <li>Run <code>drush generate drush:generator</code>.</li> <li>Drush will prompt for the machine name of the module that should own the files. The module selected must already exist and be enabled. Use <code>drush generate module</code> to create a new module.</li> <li>Drush will then report that it created a generator (PHP class and twig file). Edit as needed.</li> <li>Similar to ExampleGenerator, implement your custom logic in the generate() method.</li> <li>You may inject dependencies from Drupal or Drush.</li> </ol>"},{"location":"generators/#auto-discovered-generators-psr4","title":"Auto-discovered Generators (PSR4)","text":"<p>Generators that don't ship inside Drupal modules are called global generators. For example see CustomDrushGenerator. In general, it is better to use modules to carry your generators. If you still prefer using a global generator, please note:</p> <ol> <li>The generator class should be PSR4 auto-loadable.</li> <li>The generator class namespace, relative to base namespace, should be <code>Drush\\Generators</code>. For instance, if a Drush generator provider third party library maps this PSR4 autoload entry:    <pre><code>\"autoload\": {\n\"psr-4\": {\n\"My\\\\Custom\\\\Library\\\\\": \"src\"\n}\n}\n</code></pre>    then the Drush global generator class namespace should be <code>My\\Custom\\Library\\Drush\\Generators</code> and the class file should be located under the <code>src/Drush/Generators</code> directory.</li> <li>The filename must have a name like FooGenerator.php. The prefix <code>Foo</code> can be whatever string you want. The file must end in <code>Generator.php</code>.</li> </ol>"},{"location":"generators/#site-wide-generators","title":"Site-wide Generators","text":"<p>Sitewide generators (as opposed to auto-discovered PSR4) have a namespace that starts with <code>\\Drush\\Generators</code>, the directory above Generators must be one of:     1.  A Folder listed in the --include option. include may be provided via config or via CLI.     1.  <code>../drush</code>, <code>/drush</code> or <code>/sites/all/drush</code>. These paths are relative to Drupal root.</p>"},{"location":"hooks/","title":"Hooks","text":""},{"location":"hooks/#core-hooks","title":"Core Hooks","text":"<p>All commandfiles may implement methods that are called by Drush at various times in the request cycle. To implement one, add a <code>#[CLI\\Hook(type: HookManager::ARGUMENT_VALIDATOR, target: 'pm:install')]</code> (for example) to the top of your method. The class constants for hooks are located in HookManager. </p> <ul> <li>Documentation about available hooks.</li> <li>To see how core commands implement a hook, you can search the Drush source code.</li> </ul>"},{"location":"hooks/#custom-hooks","title":"Custom Hooks","text":"<p>Drush commands can define custom events that other command files can hook. You can find examples in CacheCommands and SanitizeCommands</p> <p>First, the command must implement CustomEventAwareInterface and use CustomEventAwareTrait, as described in the dependency injection documentation.</p> <p>Then, the command may ask the provided hook manager to return a list of handlers with a certain attribute. In the example below, the <code>my-event</code> label is used: <pre><code>    /**\n     * This command uses a custom event 'my-event' to collect data.  Note that\n     * the event handlers will not be found unless the hook manager is\n     * injected into this command handler object via `setHookManager()`\n     * (defined in CustomEventAwareTrait).\n     */\n    #[CLI\\Command(name: 'example:command')]  \n    public function exampleCommand()\n    {\n        $myEventHandlers = $this-&gt;getCustomEventHandlers('my-event');\n        $result = [];\n        foreach ($myEventHandlers as $handler) {\n            $result[] = $handler();\n        }\n        sort($result);\n        return implode(',', $result);\n    }\n</code></pre></p> <p>Other commandfiles may provide implementations via a PHP8 Attribute or an Annotation.</p> PHP8 AttributesAnnotations <pre><code>/**\n * #[CLI\\Hook(type: HookManager::ON_EVENT, target: 'my-event')]\n */\npublic function hookOne()\n{\n    return 'one';\n}\n</code></pre> <pre><code>/**\n * @hook on-event my-event\n */\npublic function hookOne()\n{\n    return 'one';\n}\n</code></pre>"},{"location":"install/","title":"Install","text":"<p>Tip</p> <p>Drush only supports one install method. It requires that your Drupal site be built with Composer and Drush be listed as a dependency. </p> <p>See the Drush 8 or Drush 9 docs for installing prior versions of Drush.</p> <ol> <li>Composer. It is required that Drupal sites be built using Composer, with Drush listed as a dependency. See recommended-project (Drush must be added). If your Composer project doesn't yet depend on Drush, run <code>composer require drush/drush</code> to add it.</li> <li>Execution. Change to the project root, and call Drush via <code>vendor/bin/drush</code>. To simplify things, add <code>./vendor/bin</code> to your <code>$PATH</code>, allowing you to call Drush via <code>drush</code> from the project root. If you have only one Drupal codebase on your system, you may put <code>/path/to/vendor/bin</code> in your <code>$PATH</code>; now you can call Drush from everywhere, without having to change to project root.</li> <li>Completion. Optional. Append to .bashrc or equivalent for ZSH or Fish shell. Run <code>drush completion --help</code> for more details.  </li> <li>Multiple Codebases. Optional. If using the bash shell, consider installing the fd project, a small set of scripts that make it easier to switch between different project directories quickly, with type completion.</li> </ol> <p>Note</p> <ul> <li>See Usage for details on using Drush. </li> <li>To use a non-default PHP, edit ~/.bashrc so that the desired PHP is in front of your $PATH. If that is not desirable, you can change your PATH for just one request: <code>PATH=/path/to/php:$PATH</code> drush status ...`</li> <li>To use a custom php.ini for Drush requests, see this comment. </li> <li>See our guide on porting commandfiles from Drush 8 to later versions. Also note that alias and config files use a new .yml format in Drush 10+.</li> </ul>"},{"location":"install/#drupal-compatibility","title":"Drupal Compatibility","text":"Drush Version   PHP Version  End Of Life   Drupal versions  7 8 9 10 11  Drush 13   8.3+   TBD  \u2713 10.2+ \u2705  Drush 12   8.1+   TBD  \u2705  Drush 11   7.4+   Nov 2023  \u2713 \u2713  Drush 10   7.1+ (not 8)   Jan 2022  \u2713 \u2713  Drush 9   5.6+   May 2020  \u2713  Drush 8   5.4.5+   Jan 2025  \u2705 \u2713\ufe0f  Drush 7   5.3.0+   Jul 2017  \u2713  Drush 6   5.3.0+   Dec 2015  \u2713  Drush 5   5.2.0+   May 2015  \u2713 Legend \u2705 Supported and recommended \u2713 Compatible but no longer supported"},{"location":"io/","title":"Input / Output","text":"<ul> <li>The Input object holds information about the request such option and argument values. You may need to this information when coding a hook implementation. You don't need this object in your command callback method since these values are passed as parameters.</li> <li>The Output object is rarely needed. Instead, return an object that gets formatted via the Output Formatter system. If you want to send additional output, use the io system (see below).</li> </ul>"},{"location":"io/#the-io-system","title":"The io() system","text":"<ul> <li>If you need to ask the user a question, or print non-object content, use the io() system. </li> <li>A command callback gets access via <code>$this-&gt;io()</code>.</li> <li>The main methods for gathering user input are <code>$this-&gt;io()-&gt;select()</code> and <code>$this-&gt;io()-&gt;confirm()</code>. See Laravel Prompts for other methods.</li> <li>You may use any of the methods described in the Symfony Style docs.</li> </ul>"},{"location":"migrate/","title":"Defining and running migrations","text":"<p> 10.4+</p> <p>The Migrate API delivers services for migrating data from a source system to Drupal. This API is provided by the core <code>migrate</code> module. In order to migrate data to Drupal, you'll need to create migrations for each type of destination data.</p> <p>These commands are an alternative to https://www.drupal.org/project/migrate_tools. Don't use that module if you use these commands.</p>"},{"location":"migrate/#defining-migrations","title":"Defining migrations","text":"<p>Learn how to create migrations from the Drupal official documentation:</p> <ul> <li>Migrate API overview: https://www.drupal.org/docs/8/api/migrate-api/migrate-api-overview</li> <li>Drupal API: https://api.drupal.org/api/drupal/core%21modules%21migrate%21migrate.api.php/group/migration</li> </ul>"},{"location":"migrate/#running-migrations","title":"Running migrations","text":"<p>Drush provides a set of commands that allows to run migration operations such as importing, checking the current status of migrations, rolling-back migrations, stopping an ongoing migration, etc. Such commands are available only when the <code>migrate</code> module is enabled. In order the get a full list of migrate commands, type:</p> <pre><code>drush --filter=migrate\n</code></pre> <p>To get help on each command run drush with the command name as parameter and the <code>--help</code> option. For example next command will show details about the migrate:import Drush command:</p> <pre><code>drush migrate:import --help\n</code></pre>"},{"location":"output-formats-filters/","title":"Output Formats, Fields and Filters","text":"<p>Drush utilizes a powerful formatting and filtering system that provides the user with a lot of control over how output from various commands is rendered.</p> <ul> <li>Output formats may be used to select the data type used to print the output. For example, many commands allow the user to select between a human-readable table, or various machine-parsable formats such as yaml and json.</li> <li>Output fields may be used to select and order the data columns.</li> <li>Output filters may be used to limit which data rows are printed based on logical expressions.</li> </ul>"},{"location":"output-formats-filters/#output-formats","title":"Output Formats","text":"<p>The <code>--format</code> option may be used to select the data format used to print the output of a command. Most commands that produce informative output about some object or system can transform their data into different formats. For example, the version command may be printed in a human-readable table (the default), or in a json array: <pre><code>$ drush version\n Drush version : 10.3.1\n$ drush version --format=json\n{\n\"drush-version\": \"10.3.1\"\n}\n</code></pre> The available output formats are shown in the <code>help</code> for each command: <pre><code>$ drush help version\nShow drush version.\n\nOptions:\n --format=&lt;json&gt;    Select output format. Available: json, string, var_export, yaml. Default is key-value.\n</code></pre></p>"},{"location":"output-formats-filters/#output-fields","title":"Output Fields","text":"<p>If you wish to limit the number of columns produced by a command, use the <code>--fields</code> option. List the field names in the order they should be displayed: <pre><code>$ drush views:list --fields=machine-name,status\n+-------------------+----------+\n| Machine name      | Status   |\n+-------------------+----------+\n| block_content     | Enabled  |\n| comment           | Enabled  |\n| comments_recent   | Enabled  |\n| content           | Enabled  |\n| content_recent    | Enabled  |\n| files             | Enabled  |\n| frontpage         | Enabled  |\n| taxonomy_term     | Enabled  |\n| user_admin_people | Enabled  |\n| watchdog          | Enabled  |\n| who_s_new         | Enabled  |\n| who_s_online      | Enabled  |\n| archive           | Disabled |\n| glossary          | Disabled |\n+-------------------+----------+\n</code></pre> The available field names are shown in the <code>help</code> text: <pre><code>$ drush help views:list\nGet a list of all views in the system.\n\nOptions:\n  --fields=FIELDS   Available fields: Machine name (machine-name),     Name (label), Description (description), Status    (status), Tag (tag) [default:                      \"machine-name,label,description,status\"]           </code></pre> Fields may be named either using their human-readable name, or via their machine name.</p> <p>Note also that some commands do not display all of their available data columns by default. To show all available fields, use <code>--fields=*</code></p> <p>There is also a singular form <code>--field</code> available. If this form is used, it will also force the output format to <code>string</code>. <pre><code>$ drush views:list --field=machine-name \nblock_content\ncomment\ncomments_recent\ncontent\ncontent_recent\nfiles\nfrontpage\ntaxonomy_term\nuser_admin_people\nwatchdog\nwho_s_new\nwho_s_online\narchive\nglossary\n</code></pre></p>"},{"location":"output-formats-filters/#output-filters","title":"Output Filters","text":"<p>A number of Drush commands that output tabular data support a <code>--filter</code> option that allows rows from the output to be selected with simple logic expressions.</p> <p>In its simplest form, the <code>--filter</code> option takes a string that indicates the value to filter by in the command's default filter field. For example, the role:list command specifies <code>perms</code> as its default filter; the output of the <code>role:list</code> command may be limited to only those roles that have a specified permission: <pre><code>$ drush role:list --filter='post comments'\nauthenticated:\n  label: 'Authenticated user'\nperms:\n    - 'access comments'\n- 'access content'\n- 'access shortcuts'\n- 'access site-wide contact form'\n- 'access user contact forms'\n- 'post comments'\n- 'search content'\n- 'skip comment approval'\n- 'use text format basic_html'\n</code></pre> Note that not all commands have a default filter field.</p> <p>Other fields in the output may be searched by using a simple expression in the <code>--filter</code> term. For example, to list only the enabled extensions with the <code>pm:list</code> command, you could run: <pre><code>$ drush pm:list --filter='status=enabled'\n</code></pre> To search for fields that contain a string using the operator <code>*=</code>, or match a regular expression with the <code>~=</code> operator. For example, to find all views whose machine name contains the word content: <pre><code>drush views:list --filter='machine-name*=content'\n</code></pre> To use a regular expression to find any core requirement notice whose title contains either php or gd <pre><code>drush core:requirements --filter='title~=#(php|gd)#i'\n</code></pre> Finally, filter expressions may also use logical-and (<code>&amp;&amp;</code>) or logical-or (<code>||</code>) operations to separate multiple terms.  Parenthesis are not supported. For example, to search both the <code>title</code> and <code>severity</code> fields in the <code>core:requirements</code> command: <pre><code>drush core:requirements --filter='title~=#(php|gd)#i&amp;&amp;severity=warning'\n</code></pre></p> <p>The <code>=</code> and <code>*=</code> operators always use case-insensitive comparisons. The <code>~=</code> operator is case-sensitive, unless the <code>i</code> PCRE modifier is used, as shown in the previous example.</p>"},{"location":"output-formats-filters/#comparison-of-filters-with-grep","title":"Comparison of Filters with Grep","text":"<p>Using the <code>--filter</code> feature is similar to using <code>grep</code>. The main difference is that the filter feature does a semantic search, which is to say that it explicitly compares against the data in specific fields. In comparison, the <code>grep</code> command does a line-based search.</p> <p>Show only results where the severity is warning:</p> <p><code>drush core:requirements --filter='severity=warning'</code></p> <p>Show only lines that contain the string warning (either in the severity field, or somewhere else on the line):</p> <p><code>drush core:requirements | grep -i warning</code></p> <p>The table below compares and contrasts the two ways of searching.</p> Feature --filter grep Regular expressions Yes, with <code>~=</code> Yes Word-wrapped field data Searched correctly Might cause false negative Search just one field Yes Might get false positives Search multiple fields Yes, with <code>||</code>/<code>&amp;&amp;</code> Yes (line-based searching) Searching hides header No Yes (unless it matches)"},{"location":"repl/","title":"REPL (a custom shell for Drupal)","text":"<p>The php:cli command is interactive PHP REPL with your bootstrapped site (remote or local). It\u2019s a Drupal code playground. You can do quick code experimentation, grab some data, or run Drush commands. This can also help with debugging certain issues. See this blog post for an introduction. Run <code>help</code> for a list of commands.</p> <p>Any global PsySH configuration is loaded by Drush. If you prefer a config file that is specific to the project (and can be checked in with other source code), set the environment variable <code>PSYSH_CONFIG=&lt;/path/to/config-file&gt;</code>. This file then takes precedence over any global file.</p> <p>Entity classes are available without their namespace. For example, Node::load() works instead of Drupal\\Node\\entity\\Noad::load().</p>"},{"location":"site-alias-manager/","title":"Site Alias Manager","text":"<p>The Site Alias Manager (SAM) service is used to retrieve information about one or all of the site aliases for the current installation.</p> <ul> <li>An informative example is the browse command</li> <li>A commandfile gets usually access to the SAM via autowire. The type hint to use is SiteAliasManagerInterface</li> <li>If an alias was used for the current request, it is available via <code>$this-&gt;siteAliasManager-&gt;getself()</code>.</li> <li>The SAM generally deals in SiteAlias objects. That is how any given site alias is represented. See its methods for determining things like whether the alias points to a local host or remote host.</li> <li>Site alias docs.</li> <li>Dynamically alter site aliases.</li> <li>The SAM is also available for as a standalone Composer project. More information available in the README there.</li> </ul>"},{"location":"site-aliases/","title":"Site aliases","text":""},{"location":"site-aliases/#basic-usage","title":"Basic usage","text":"<p>In its most basic form, the Drush site alias feature provides a way for teams to share short names that refer to the live and staging sites (usually remote) for a given Drupal site.</p> <p>Add an alias file called <code>$PROJECT/drush/sites/self.site.yml</code>, where <code>$PROJECT</code> is the project root (location of composer.json file). The site alias file should be named <code>self.site.yml</code> because this name is special, and is used to define the different environments (usually remote) of the current Drupal site.</p> <p>The contents of the alias file should look something like the example below:</p> <pre><code># File: self.site.yml\nlive:\n  host: server.domain.com\n  user: www-admin\n  root: /other/path/to/live/drupal\n  uri: http://example.com\nstage:\n  host: server.domain.com\n  user: www-admin\n  root: /other/path/to/stage/drupal\n  uri: http://stage.example.com\n</code></pre> <p>The top-level element names (<code>live</code> and <code>stage</code> in the example above) are used to identify the different environments available for this site. These may be used on the command line to select a different target environment to operate on by prepending an <code>@</code> character, e.g. <code>@live</code> or <code>@stage</code>.</p> <p>Following these steps, a cache:rebuild on the live environment would be: <pre><code>  $ drush @live cache:rebuild\n</code></pre></p> <p>All of the available aliases for a site's environments may be listed via: <pre><code>  $ drush site:alias @self\n</code></pre></p> <p>The elements of a site alias are:</p> <ul> <li>host: The fully-qualified domain name of the remote system   hosting the Drupal instance. The <code>host</code> option   must be omitted for local sites, as this option controls various   operations, such as whether or not rsync parameters are for local or   remote machines, and so on.</li> <li>user: The username to log in as when using ssh or docker. If each user    has to use own username, you can create an environment variable which holds    the value, and reference via ${env.PROJECT_SSH_USER} (for example). Or you may    omit the <code>user</code> item and specify a user in the <code>~/.ssh/config</code> file.</li> <li>root: The Drupal root; must not be specified as a relative path.</li> <li>uri: The value of --uri should always be the same as   when the site is being accessed from a web browser (e.g. http://example.com)</li> </ul> <p>Drush typically uses ssh to run commands on remote systems; all team members should install ssh keys on the target servers (e.g. via <code>ssh-add</code>).</p>"},{"location":"site-aliases/#advanced-usage","title":"Advanced usage","text":"<p>It is also possible to create site alias files that reference other sites on the same local system. Site alias files for other local sites are usually stored in the directory <code>~/.drush/sites</code>; however, Drush does not search this location for alias files by default. To use this location, you must add the path in your Drush configuration file. For example, to re-add both of the default user alias path from Drush 8, put the following in your <code>~/.drush/drush.yml</code> configuration file:</p> <pre><code>drush:\n  paths:\n    alias-path:\n      - '${env.HOME}/.drush/sites'\n      - /etc/drush/sites\n</code></pre> <p>A canonical alias named example that points to a local Drupal site named at http://example.com like this:</p> <pre><code># File: example.site.yml\ndev:\n  root: /path/to/drupal\n  uri: http://example.com\n</code></pre> <p>Note that the first part of the filename (in this case example defines the name of the site alias, and the top-level key dev defines the name of the environment.</p> <p>With these definitions in place, it is possible to run commands targeting the dev environment of the target site via: <pre><code>  $ drush @example.dev status\n</code></pre> This command is equivalent to the longer form: <pre><code>  $ drush --root=/path/to/drupal --uri=http://example.com status\n</code></pre> See Additional Site Alias Options for more information.</p>"},{"location":"site-aliases/#altering-aliases","title":"Altering aliases:","text":"<p>See examples/Commands/SiteAliasAlterCommands.php for an example.</p>"},{"location":"site-aliases/#site-specifications","title":"Site specifications:","text":"<p>When a site alias name is provided on the command line, a site specification may be used instead. A site specification is a site alias that is not saved on the filesystem but instead is provided directly e.g. <code>drush user@server/path/to/drupal#uri core:status</code>. See example site specifications.</p>"},{"location":"site-aliases/#environment-variables","title":"Environment variables","text":"<p>Site aliases may reference environment variables, just like any Drush config file. For example, <code>${env.PROJECT_SSH_USER}</code> will be replaced by the value of the <code>PROJECT_SSH_USER</code> environment value.</p> <p>SSH site aliases may set environment variables via the <code>env-vars</code> key. See below.</p>"},{"location":"site-aliases/#additional-site-alias-options","title":"Additional Site Alias Options","text":"<p>Aliases are commonly used to define short names for local or remote Drupal installations; however, an alias is really nothing more than a collection of options.</p> <ul> <li>docker: When specified, Drush executes via <code>docker-compose</code> exec rather than <code>ssh</code>.<ul> <li>service: the name of the container to run on.</li> <li>exec:<ul> <li>options: Options for the exec subcommand.</li> </ul> </li> </ul> </li> <li>kubectl When specified, Drush executes via <code>kubectl</code> exec rather than <code>ssh</code>.<ul> <li>namespace The namespace to execute the command in.</li> <li>resource The k8s object to execute the command on.</li> <li>container The container in the resource to execute the command on.</li> </ul> </li> <li>os: The operating system of the remote server.  Valid values   are Windows and Linux. Set this value for all remote   aliases where the remote's OS differs from the local. This is especially relevant   for the sql:sync command.</li> <li>ssh: Contains settings used to control how ssh commands are generated   when running remote commands.<ul> <li>options: Contains additional commandline options for the <code>ssh</code> command   itself, e.g. <code>-p 100</code></li> <li>tty: Usually, Drush will decide whether or not to create a tty (via   the <code>ssh --t</code> option) based on whether the local Drush command is running   interactively or not. To force Drush to always or never create a tty,   set the <code>ssh.tty</code> option to true or false, respectively.</li> </ul> </li> <li>paths: An array of aliases for common rsync targets. Relative aliases are always taken from the Drupal root.<ul> <li>files: Path to files directory. This will be looked up if not specified.</li> <li>drush-script: Path to the remote Drush command.</li> </ul> </li> <li>command: These options will only be set if the alias is used with the specified command.  In the advanced example below, the option <code>--no-dump</code> will be selected whenever the <code>@stage</code> alias is used in any of the following ways:<ul> <li><code>drush @stage sql-sync @self @live</code></li> <li><code>drush sql-sync @stage @live</code></li> <li><code>drush sql-sync @live @stage</code></li> </ul> </li> <li>env-vars: An array of key / value pairs that will be set as environment variables.</li> </ul> <p>Complex example:</p> <pre><code># File: remote.site.yml\nlive:\n  host: server.domain.com\n  user: www-admin\n  root: /other/path/to/drupal\n  uri: http://example.com\n  ssh:\n    options: '-p 100'\n  paths:\n    drush-script: '/path/to/drush'\n  env-vars:\n    PATH: /bin:/usr/bin:/home/www-admin/.composer/vendor/bin\n    DRUPAL_ENV: live\n  command:\n    site:\n      install:\n        options:\n          admin-password: 'secret-secret'\n</code></pre>"},{"location":"site-aliases/#site-alias-files-for-service-providers","title":"Site Alias Files for Service Providers","text":"<p>There are a number of service providers that manage Drupal sites as a service. Drush allows service providers to create collections of site alias files to reference all of the sites available to a single user. In order to do this, a new location must be defined in your Drush configuration file:</p> <pre><code>drush:\n  paths:\n    alias-path:\n      - '${env.HOME}/.drush/sites/provider-name'\n</code></pre> <p>Site aliases stored in this directory may then be referenced by its full alias name, including its location, e.g.: <pre><code>  $ drush @provider-name.example.dev\n</code></pre> Such alias files may still be referenced by their shorter name, e.g. <code>@example.dev</code>. Note that it is necessary to individually list every location where site alias files may be stored; Drush never does recursive (deep) directory searches for alias files.</p> <p>The <code>site:alias</code> command may also be used to list all of the sites and environments in a given location, e.g.: <pre><code>  $ drush site:alias @provider-name\n</code></pre> Add the option <code>--format=list</code> to show only the names of each site and environment without also showing the values in each alias record.</p>"},{"location":"site-aliases/#wildcard-aliases-for-service-providers","title":"Wildcard Aliases for Service Providers","text":"<p>Some service providers that manage Drupal sites allow customers to create multiple \"environments\" for a site. It is common for these providers to also have a feature to automatically create Drush aliases for all of a user's sites. Rather than write one record for every environment in that site, it is also possible to write a single wildcard alias that represents all possible environments. This is possible if the contents of each environment alias are identical save for the name of the environment in one or more values. The variable <code>${env-name}</code> will be substituted with the environment name wherever it appears.</p> <p>Example wildcard record:</p> <pre><code># File: remote-example.site.yml\n'*':\n  host: ${env-name}.server.domain.com\n  user: www-admin\n  root: /path/to/${env-name}\n  uri: http://${env-name}.remote-example.com\n</code></pre> <p>With a wildcard record, any environment name may be used, and will always match. This is not desirable in instances where the specified environment does not exist (e.g. if the user made a typo). An alias alter hook in a policy file may be used to catch these mistakes and report an error. See SiteAliasAlterCommands for an example on how to do this.</p>"},{"location":"site-aliases/#docker-compose","title":"Docker Compose","text":"<p>The example below shows drush calling into a Docker hosted site. See the https://github.com/consolidation/site-alias and https://github.com/consolidation/site-process projects for more developer information about transports. </p> <p>An example appears below. Edit to suit:</p> <pre><code># File: mysite.site.yml\nlocal:\nThis environment is an example of the DockerCompose transport.\n  docker:\n    service: drupal\n    exec:\n      options: --user USER\nstage:\n  uri: http://stage.example.com\n  root: /path/to/remote/drupal/root\n  host: mystagingserver.myisp.com\n  user: publisher\n  os: Linux\n  paths:\n   - files: sites/mydrupalsite.com/files\n   - custom: /my/custom/path\n  command:\n    sql:\n      sync:\n        options:\n          no-dump: true\ndev:\n  root: /path/to/docroot\n  uri: https://dev.example.com\n</code></pre>"},{"location":"site-aliases/#kubernetes","title":"Kubernetes","text":"<p>Drush provides transport for running drush commands on your Kubernetes cluster via kubectl. See an example and options below.</p> <pre><code>prod: \n  kubectl:\n    namespace: 'my-drupal-namespace'\n    resource: 'pods/my-drupal-pod' \n    container: 'drupal'\n</code></pre>"},{"location":"site-aliases/#key-options","title":"Key options","text":"<ul> <li>namespace: The namespace where your Drupal deployment resides.</li> <li>resource:  Kubernetes resource type (usually 'pods').</li> <li>container: The specific container within the pod where Drupal runs.</li> <li>kubeconfig: The kubeconfig file to use for authentication.</li> <li>entrypoint: The command to use as the container entrypoint.</li> </ul>"},{"location":"site-aliases/#example-of-rsync-with-exclude-paths","title":"Example of rsync with exclude-paths","text":"<p>Note that most options typically passed to rsync via <code>drush rsync</code> are \"passthrough options\", which is to say they appear after the <code>--</code> separator on the command line. Passthrough options are actually arguments, and it is not possible to set default arguments in an alias record. The <code>drush rsync</code> command does support two options, <code>--mode</code> and <code>--exclude-paths</code>, which are interpreted directly by Drush. Default values for these options may be specified in an alias record, as shown below.</p> <pre><code>dev:\n  root: /path/to/docroot\n  uri: https://dev.example.com\n  command:\n    core:\n      rsync:\n        options:\n          mode: rlptz\n          exclude-paths: 'css:imagecache:ctools:js:tmp:php:styles'\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>Drush can be run in your shell by typing <code>drush</code> from within your project root directory or anywhere within Drupal.</p> <pre><code>$ drush [options] &lt;command&gt; [argument1] [argument2]\n</code></pre> <p>Use the help command to get a list of available options and commands:</p> <pre><code>$ drush help pm:list\n</code></pre> <p>For even more documentation, use the topic command:</p> <pre><code>$ drush topic\n</code></pre>"},{"location":"usage/#using-the-uri-option","title":"Using the --uri option.","text":"<p>For multi-site installations, use a site alias or the --uri option to target a particular site.</p> <pre><code>$ drush --uri=http://example.com pm:install\n</code></pre>"},{"location":"usage/#site-aliases","title":"Site Aliases","text":"<p>Drush lets you run commands on a remote server. Once defined, aliases can be referenced with the @ nomenclature, i.e.</p> <pre><code># Run pending updates on staging site.\n$ drush @staging updatedb\n# Synchronize staging files to production\n$ drush rsync @staging:%files/ @live:%files\n# Synchronize database from production to local, excluding the cache table\n$ drush sql:sync --structure-tables-key=custom @live @self\n</code></pre> <p>See Site aliases for more information.</p>"},{"location":"using-drush-configuration/","title":"Drush Configuration","text":"<p>Drush configuration is useful to cut down on typing out lengthy and repetitive command line options, and to avoid mistakes.</p>"},{"location":"using-drush-configuration/#directories-and-discovery","title":"Directories and Discovery","text":"<p>drush.yml files are discovered as below, in order of precedence:</p> <ol> <li>Drupal site folder (e.g. <code>sites/{example.com}/drush.yml</code>).</li> <li><code>sites/all/drush</code>, <code>WEBROOT/drush</code>, or <code>PROJECTROOT/drush</code>.</li> <li>In any location, as specified by the <code>--config</code> option.</li> <li>User's .drush folder (i.e. <code>~/.drush/drush.yml</code>).</li> <li>System-wide configuration folder (e.g. <code>/etc/drush/drush.yml</code> or <code>C:\\ProgramData\\Drush\\drush.yml</code>).</li> </ol> <p>If a configuration file is found in any of the above locations, it will be loaded and merged with other configuration files in the search list. Run <code>drush status --fields=drush-conf</code>  to see all discovered config files.</p>"},{"location":"using-drush-configuration/#environment-variables","title":"Environment variables","text":"<p>Your Drush config file may reference environment variables using a syntax like <code>${env.HOME}</code>. For example see the <code>drush.paths</code> examples below.</p> <p>An alternative way to populate Drush configuration is to define environment variables that correspond to config keys. For example, to populate the <code>options.uri</code> config item, create an environment variable <code>DRUSH_OPTIONS_URI=http://example.com</code>. As you can see, variable names should be uppercased, prefixed with <code>DRUSH_</code>, and periods replaced with underscores.</p>"},{"location":"using-drush-configuration/#config-examples","title":"Config examples","text":""},{"location":"using-drush-configuration/#specify-config-files-to-load","title":"Specify config files to load","text":"<pre><code>drush:\n  paths:\n    config:\n      # Load any personal config files. Is silently skipped if not found. Filename must be drush.yml\n      - ${env.HOME}/.drush/config/drush.yml\n</code></pre> <ul> <li>The value may be path to a file, or to a directory containing drush.yml file(s).</li> <li>View discovered config paths: <code>drush status --fields=drush-conf --format=yaml</code></li> </ul>"},{"location":"using-drush-configuration/#specify-folders-to-search-for-drush-command-files","title":"Specify folders to search for Drush command files.","text":"<p>These locations are always merged with include paths defined on the command line or in other configuration files.  On the command line, paths may be separated by a colon <code>:</code> on Unix-based systems or a semi-colon <code>;</code> on Windows, or multiple <code>--include</code> options may be provided. Drush 8 and earlier did a deep search in <code>~/.drush</code> and <code>/usr/share/drush/commands</code> when loading command files, so we mimic that here as an example.</p> <pre><code>drush:\n  include:\n    - '${env.HOME}/.drush/commands'\n    - /usr/share/drush/commands\n</code></pre> <ul> <li>View all loaded commands: <code>drush list</code></li> </ul>"},{"location":"using-drush-configuration/#specify-the-folders-to-search-for-drush-alias-files-siteyml","title":"Specify the folders to search for Drush alias files (*.site.yml).","text":"<p>These locations are always merged with alias paths defined on the command line  or in other configuration files.  On the command line, paths may be  separated by a colon <code>:</code> on Unix-based systems or a semi-colon <code>;</code> on  Windows, or multiple <code>--alias-path</code> options may be provided. Note that  Drush 8 and earlier did a deep search in <code>~/.drush</code> and <code>/etc/drush</code> when  loading alias files. <pre><code>drush:\n  paths:\n    alias-path:\n      - '${env.HOME}/.drush/sites'\n      - /etc/drush/sites\n</code></pre> - View all loaded site aliases: <code>drush site:alias</code></p>"},{"location":"using-drush-configuration/#backup-directory","title":"Backup directory","text":"<p>Specify a folder where Drush should store backup files, including temporary sql dump files created during sql:sync. If unspecified, defaults to <code>$HOME/drush-backups</code>. <pre><code>drush:\n  paths:\n    backup-dir: /tmp/drush-backups\n</code></pre></p>"},{"location":"using-drush-configuration/#global-options","title":"Global options","text":"<pre><code>options:\n  # Specify the base_url that should be used when generating links.\n  uri: 'http://example.com/subdir'\n\n  # Specify your Drupal core base directory (useful if you use symlinks).\n  root: '/home/USER/workspace/drupal'\n\n  # Enable verbose mode.\n  verbose: true\n</code></pre>"},{"location":"using-drush-configuration/#command-specific-options","title":"Command-specific options","text":"<pre><code>command:\n  sql:\n    cli:\n      options:\n        # Enable auto-complete in MySQL.\n        extra: \"--auto-rehash\"\n    dump:\n      options:\n        # Omit cache and similar tables (including during a sql:sync).\n        structure-tables-key: common\n  php:\n    script:\n      options:\n        # Additional folders to search for scripts.\n        script-path: 'sites/all/scripts:profiles/myprofile/scripts'\n  core:\n    rsync:\n      options:\n        # Ensure all rsync commands use verbose output.\n        verbose: true\n\n  site:\n    install:\n      options:\n        # Set a predetermined username and password when using site:install.\n        account-name: 'alice'\n        account-pass: 'secret'\n</code></pre>"},{"location":"using-drush-configuration/#non-options","title":"Non-options","text":"<pre><code>sql:\n  # An explicit list of tables which should be included in sql-dump and sql-sync.\n  tables:\n    common:\n      - user\n      - permissions\n      - role_permissions\n      - role\n  # List of tables whose *data* is skipped by the 'sql-dump' and 'sql-sync'\n  # commands when the \"--structure-tables-key=common\" option is provided.\n  # You may add specific tables to the existing array or add a new element.\n  structure-tables:\n    common:\n      - cache\n      - 'cache_*'\n      - history\n      - 'search_*'\n      - 'sessions'\n      - 'watchdog'\n  # List of tables to be omitted entirely from SQL dumps made by the 'sql-dump'\n  # and 'sql-sync' commands when the \"--skip-tables-key=common\" option is\n  # provided on the command line.  This is useful if your database contains\n  # non-Drupal tables used by some other application or during a migration for\n  # example.  You may add new tables to the existing array or add a new element.\n  skip-tables:\n    common:\n      - 'migration_*'\n\nssh:\n  # Specify options to pass to ssh.  The default is to prohibit\n  # password authentication, and is included here, so you may add additional\n  # parameters without losing the default configuration.\n  options: '-o PasswordAuthentication=no'\n  # This string is valid for Bash shell. Override in case you need something different. See https://github.com/drush-ops/drush/issues/3816.\n  pipefail: 'set -o pipefail; '\n\nnotify:\n  # Notify when command takes more than 30 seconds.\n  duration: 30\n  # Specify a command to run. Defaults to Notification Center (OSX) or libnotify (Linux)\n  cmd: /path/to/program\n  # See https://github.com/drush-ops/drush/blob/13.x/src/Commands/core/NotifyCommands.php for more settings.\n\nxh:\n  # Start profiling via xhprof/tideways and show a link to the run report.\n  link: http://xhprof.local\n  # See https://github.com/drush-ops/drush/blob/13.x/src/Commands/core/XhprofCommands.php for more settings.\n  profile-builtins: true\n  profile-cpu: false\n  profile-memory: false\n</code></pre>"},{"location":"using-drush-configuration/#misc","title":"Misc","text":"<ul> <li>If you are authoring a commandfile and wish to access the user's configuration, see Command Authoring.</li> <li>Setting boolean options broke with Symfony 3. This will be fixed   in a future release.  </li> <li>Version-specific configuration. Limit the version of Drush that will load a configuration file by placing the Drush major version number in the filename, e.g. <code>drush10.yml</code>.</li> <li>The Drush configuration system has been factored out of Drush and shared with the world at https://github.com/consolidation/config. Feel free to use it for your projects. Lots more usage information is there.</li> </ul>"},{"location":"commands/all/","title":"All commands","text":"<p>Tip</p> <p>Press the / key to Search for a command. Or use your browser's Find in Page feature.</p> <ul> <li>archive:dump</li> <li>browse</li> <li>completion</li> <li>drupal:directory</li> <li>generate</li> <li>help</li> <li>jn:get</li> <li>list</li> <li>mk:docs</li> <li>recipe</li> <li>runserver</li> <li>version</li> <li>cache:clear</li> <li>cache:get</li> <li>cache:rebuild</li> <li>cache:set</li> <li>cache:tags</li> <li>config:delete</li> <li>config:edit</li> <li>config:export</li> <li>config:get</li> <li>config:import</li> <li>config:pull</li> <li>config:set</li> <li>config:status</li> <li>core:cron</li> <li>core:edit</li> <li>core:requirements</li> <li>core:route</li> <li>core:rsync</li> <li>core:status</li> <li>core:topic</li> <li>deploy</li> <li>deploy:hook</li> <li>deploy:hook-status</li> <li>deploy:mark-complete</li> <li>entity:create</li> <li>entity:delete</li> <li>entity:save</li> <li>field:base-info</li> <li>field:base-override-create</li> <li>field:create</li> <li>field:delete</li> <li>field:formatters</li> <li>field:info</li> <li>field:types</li> <li>field:widgets</li> <li>image:derive</li> <li>image:flush</li> <li>locale:check</li> <li>locale:clear-status</li> <li>locale:export</li> <li>locale:import</li> <li>locale:import-all</li> <li>locale:update</li> <li>maint:get</li> <li>maint:set</li> <li>maint:status</li> <li>migrate:fields-source</li> <li>migrate:import</li> <li>migrate:messages</li> <li>migrate:reset-status</li> <li>migrate:rollback</li> <li>migrate:status</li> <li>migrate:stop</li> <li>php:cli</li> <li>php:eval</li> <li>php:script</li> <li>pm:install</li> <li>pm:list</li> <li>pm:uninstall</li> <li>queue:delete</li> <li>queue:list</li> <li>queue:run</li> <li>role:create</li> <li>role:delete</li> <li>role:list</li> <li>role:perm:add</li> <li>role:perm:remove</li> <li>site:alias</li> <li>site:install</li> <li>site:set</li> <li>site:ssh</li> <li>sql:cli</li> <li>sql:connect</li> <li>sql:create</li> <li>sql:drop</li> <li>sql:dump</li> <li>sql:query</li> <li>sql:sanitize</li> <li>sql:sync</li> <li>state:delete</li> <li>state:get</li> <li>state:set</li> <li>theme:install</li> <li>theme:uninstall</li> <li>twig:compile</li> <li>twig:debug</li> <li>twig:unused</li> <li>updatedb</li> <li>updatedb:status</li> <li>user:block</li> <li>user:cancel</li> <li>user:create</li> <li>user:information</li> <li>user:login</li> <li>user:password</li> <li>user:role:add</li> <li>user:role:remove</li> <li>user:unblock</li> <li>views:dev</li> <li>views:disable</li> <li>views:enable</li> <li>views:execute</li> <li>views:list</li> <li>watchdog:delete</li> <li>watchdog:list</li> <li>watchdog:show</li> <li>watchdog:show-one</li> <li>watchdog:tail</li> <li>yaml:get:value</li> <li>yaml:lint</li> <li>yaml:unset:key</li> <li>yaml:update:key</li> <li>yaml:update:value</li> </ul>"},{"location":"commands/archive_dump/","title":"archive:dump","text":"<p>Backup your code, files, and database into a single file.</p> <p>The following paths would be excluded from a code archive:</p> <ul> <li>.git</li> <li>vendor</li> <li>[docroot]/sites/@/settings.@.php</li> <li>Drupal files directory</li> <li>Composer packages installed paths (<code>composer info --path --format=json</code>)</li> </ul> <p>The following directories would be excluded from a file archive:</p> <ul> <li>css</li> <li>js</li> <li>styles</li> <li>php</li> </ul>"},{"location":"commands/archive_dump/#examples","title":"Examples","text":"<ul> <li><code>drush archive:dump</code>. Create a site archive file in a temporary directory containing code, database and Drupal files.</li> <li><code>drush archive:dump --destination=/path/to/archive.tar.gz</code>. Create /path/to/archive.tar.gz file containing code, database and Drupal files.</li> <li><code>drush archive:dump --destination=/path/to/archive.tar.gz --overwrite</code>. Create (or overwrite if exists) /path/to/archive.tar.gz file containing code, database and Drupal files.</li> <li><code>drush archive:dump --code --destination=/path/to/archive.tar.gz</code>. Create /path/to/archive.tar.gz file containing the code only.</li> <li><code>drush archive:dump --exclude-code-paths=foo_bar.txt,web/sites/.+/settings.php --destination=/path/to/archive.tar.gz</code>. Create /path/to/archive.tar.gz file containing code, database and Drupal files but excluding foo_bar.txt file and settings.php files if found in web/sites/* subdirectories.</li> <li><code>drush archive:dump --extra-dump=--no-data --destination=/path/to/archive.tar.gz</code>. Create /path/to/archive.tar.gz file and pass extra option to mysqldump command.</li> <li><code>drush archive:dump --files --destination=/path/to/archive.tar.gz</code>. Create /path/to/archive.tar.gz file containing the Drupal files only.</li> <li><code>drush archive:dump --database --destination=/path/to/archive.tar.gz</code>. Create /path/to/archive.tar.gz archive file containing the database dump only.</li> </ul>"},{"location":"commands/archive_dump/#options","title":"Options","text":"<ul> <li> --code. Archive codebase.</li> <li> --files. Archive Drupal files.</li> <li> --db. Archive database SQL dump.</li> <li> --destination=DESTINATION. The full path and filename in which the archive should be stored. Any relative path will be calculated from Drupal root (usually web for drupal/recommended-project projects). If omitted, it will be saved to the configured temp directory.</li> <li> --overwrite. Overwrite destination file if exists.</li> <li> --description=DESCRIPTION. Describe the archive contents.</li> <li> --tags=TAGS. Add tags to the archive manifest. Delimit several by commas.</li> <li> --generator=GENERATOR. The generator name to store in the MANIFEST.yml file. The default is \"Drush archive-dump\".</li> <li> --generatorversion=GENERATORVERSION. The generator version number to store in the MANIFEST file. The default is Drush version.</li> <li> --exclude-code-paths=EXCLUDE-CODE-PATHS. Comma-separated list of paths (or regular expressions matching paths) to exclude from the code archive.</li> <li> --extra-dump=EXTRA-DUMP. Add custom arguments/options to the dumping of the database (e.g. mysqldump command).</li> <li> --convert-symlinks. Replace all symlinks with copies of the files/directories that they point to. Default is to only convert symlinks that point outside the project root.</li> <li> --skip-tables-key=SKIP-TABLES-KEY. A key in the $skip_tables array. @see Site aliases</li> <li> --structure-tables-key=STRUCTURE-TABLES-KEY. A key in the $structure_tables array. @see Site aliases</li> <li> --tables-key=TABLES-KEY. A key in the $tables array.</li> <li> --skip-tables-list=SKIP-TABLES-LIST. A comma-separated list of tables to exclude completely.</li> <li> --structure-tables-list=STRUCTURE-TABLES-LIST. A comma-separated list of tables to include for structure, but not data.</li> <li> --tables-list=TABLES-LIST. A comma-separated list of tables to transfer.</li> <li> --database[=DATABASE]. The DB connection key if using multiple connections in settings.php. [default: default]</li> <li> --db-url=DB-URL. A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname</li> <li> --target[=TARGET]. The name of a target within the specified database connection. [default: default]</li> <li> --show-passwords. Show password on the CLI. Useful for debugging.</li> </ul>"},{"location":"commands/archive_dump/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/archive_dump/#aliases","title":"Aliases","text":"<ul> <li>ard</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/browse/","title":"browse","text":"<p>Display a link to a given path or open link in a browser.</p>"},{"location":"commands/browse/#examples","title":"Examples","text":"<ul> <li><code>drush browse</code>. Open default web browser (if configured or detected) to the site front page.</li> <li><code>drush browse node/1</code>. Open web browser to the path node/1.</li> <li><code>drush @example.prod browse</code>. Open a browser to the web site specified in a site alias.</li> </ul>"},{"location":"commands/browse/#arguments","title":"Arguments","text":"<ul> <li>[path]. Path to open. If omitted, the site front page will be opened.</li> </ul>"},{"location":"commands/browse/#options","title":"Options","text":"<ul> <li> --browser[=BROWSER]. Open the URL in the default browser. Use --no-browser to avoid opening a browser. [default: 1]</li> <li> --redirect-port=REDIRECT-PORT. The port that the web server is redirected to (e.g. when running within a Vagrant environment).</li> <li> --no-browser. Negate --browser option.</li> </ul>"},{"location":"commands/browse/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/cache_clear/","title":"cache:clear","text":"<p>Clear a specific cache, or all Drupal caches.</p>"},{"location":"commands/cache_clear/#examples","title":"Examples","text":"<ul> <li><code>drush cc bin</code>. Choose a bin to clear.</li> <li><code>drush cc bin entity,bootstrap</code>. Clear the entity and bootstrap cache bins.</li> </ul>"},{"location":"commands/cache_clear/#arguments","title":"Arguments","text":"<ul> <li>type. The particular cache to clear. Omit this argument to choose from available types.</li> <li>[args].... Additional arguments as might be expected (e.g. bin name).</li> </ul>"},{"location":"commands/cache_clear/#options","title":"Options","text":"<ul> <li> --cache-clear[=CACHE-CLEAR]. Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: 1]</li> <li> --no-cache-clear. Negate --cache-clear option.</li> </ul>"},{"location":"commands/cache_clear/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/cache_clear/#aliases","title":"Aliases","text":"<ul> <li>cc</li> <li>cache-clear</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/cache_get/","title":"cache:get","text":"<p>Fetch a cached object and display it.</p>"},{"location":"commands/cache_get/#examples","title":"Examples","text":"<ul> <li><code>drush cache:get hook_info bootstrap</code>. Display the data for the cache id \"hook_info\" from the \"bootstrap\" bin.</li> <li><code>drush cache:get update_available_releases update</code>. Display the data for the cache id \"update_available_releases\" from the \"update\" bin.</li> </ul>"},{"location":"commands/cache_get/#arguments","title":"Arguments","text":"<ul> <li>cid. The id of the object to fetch.</li> <li>[bin]. The cache bin to fetch from.</li> </ul>"},{"location":"commands/cache_get/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: json]</li> <li> --fields=FIELDS. Available fields: Cache ID (cid), Data (data), Created (created), Expire (expire), Tags (tags), Checksum (checksum), Valid (valid)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/cache_get/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/cache_get/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/cache_get/#aliases","title":"Aliases","text":"<ul> <li>cg</li> <li>cache-get</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/cache_rebuild/","title":"cache:rebuild","text":"<p>Rebuild all caches.</p> <p>This is a copy of core/rebuild.php.</p>"},{"location":"commands/cache_rebuild/#options","title":"Options","text":"<ul> <li> --cache-clear[=CACHE-CLEAR]. Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: 1]</li> <li> --no-cache-clear. Negate --cache-clear option.</li> </ul>"},{"location":"commands/cache_rebuild/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/cache_rebuild/#aliases","title":"Aliases","text":"<ul> <li>cr</li> <li>rebuild</li> <li>cache-rebuild</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/cache_set/","title":"cache:set","text":"<p>Cache an object expressed in JSON or var_export() format.</p>"},{"location":"commands/cache_set/#arguments","title":"Arguments","text":"<ul> <li>cid. id of the object to set.</li> <li>data. The object to set in the cache. Use - to read the object from STDIN.</li> <li>[bin]. The cache bin to store the object in.</li> <li>[expire]. 'CACHE_PERMANENT', or a Unix timestamp.</li> <li>[tags]. A comma delimited list of cache tags.</li> </ul>"},{"location":"commands/cache_set/#options","title":"Options","text":"<ul> <li> --input-format[=INPUT-FORMAT]. The format of value. Use json for complex values. [default: string]</li> <li> --cache-get. If the object is the result a previous fetch from the cache, only store the value in the 'data' property of the object in the cache.</li> </ul>"},{"location":"commands/cache_set/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/cache_set/#aliases","title":"Aliases","text":"<ul> <li>cs</li> <li>cache-set</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/cache_tags/","title":"cache:tags","text":"<p>Invalidate by cache tags.</p>"},{"location":"commands/cache_tags/#examples","title":"Examples","text":"<ul> <li><code>drush cache:tag node:12,user:4</code>. Purge content associated with two cache tags.</li> </ul>"},{"location":"commands/cache_tags/#arguments","title":"Arguments","text":"<ul> <li>tags. A comma delimited list of cache tags to clear.</li> </ul>"},{"location":"commands/cache_tags/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/cache_tags/#aliases","title":"Aliases","text":"<ul> <li>ct</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/completion/","title":"completion","text":"<p>Dump the shell completion script</p> <p>The *%command.name% command dumps the shell completion script required to use shell autocompletion (currently, bash, fish, zsh completion are supported).</p>"},{"location":"commands/completion/#static-installation","title":"Static installation <p>Dump the script to a global completion file and restart your shell:</p> <pre><code>*%command.full_name%  | sudo tee /etc/bash_completion.d/drush.php\n</code></pre> <p>Or dump the script to a local file and source it:</p> <pre><code>*%command.full_name%  &gt; completion.sh\n\n&lt;comment&gt;# source the file whenever you use the project\n*source completion.sh\n\n&lt;comment&gt;# or add this line at the end of your \"~/.bashrc\" file:\n*source /path/to/completion.sh\n</code></pre>","text":""},{"location":"commands/completion/#dynamic-installation","title":"Dynamic installation <p>Add this to the end of your shell configuration file (e.g. *\"~/.bashrc\"):</p> <pre><code>*eval \"$(/home/runner/work/drush/drush/drush.php completion )\"\n</code></pre>","text":""},{"location":"commands/completion/#arguments","title":"Arguments","text":"<ul> <li>[shell]. The shell type (e.g. \"bash\"), the value of the \"$SHELL\" env var will be used if this is not given</li> </ul>"},{"location":"commands/completion/#options","title":"Options","text":"<ul> <li> --debug. Tail the completion debug log</li> </ul>"},{"location":"commands/completion/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/config_delete/","title":"config:delete","text":"<p>Delete a configuration key, or a whole object(s).</p>"},{"location":"commands/config_delete/#examples","title":"Examples","text":"<ul> <li><code>drush config:delete system.site,system.rss</code>. Delete the system.site and system.rss config objects.</li> <li><code>drush config:delete system.site page.front</code>. Delete the 'page.front' key from the system.site object.</li> </ul>"},{"location":"commands/config_delete/#arguments","title":"Arguments","text":"<ul> <li>config_name. The config object name(s). Delimit multiple with commas.</li> <li>[key]. A config key to clear, May not be used with multiple config names.</li> </ul>"},{"location":"commands/config_delete/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/config_delete/#aliases","title":"Aliases","text":"<ul> <li>cdel</li> <li>config-delete</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/config_edit/","title":"config:edit","text":"<p>Open a config file in a text editor. Edits are imported after closing editor.</p>"},{"location":"commands/config_edit/#examples","title":"Examples","text":"<ul> <li><code>drush config:edit image.style.large</code>. Edit the image style configurations.</li> <li><code>drush config:edit</code>. Choose a config file to edit.</li> <li><code>drush --bg config-edit image.style.large</code>. Return to shell prompt as soon as the editor window opens.</li> </ul>"},{"location":"commands/config_edit/#arguments","title":"Arguments","text":"<ul> <li>config_name. The config object name, for example system.site.</li> </ul>"},{"location":"commands/config_edit/#options","title":"Options","text":"<ul> <li> --editor=EDITOR. A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}}.</li> <li> --bg. Launch editor in background process.</li> </ul>"},{"location":"commands/config_edit/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/config_edit/#aliases","title":"Aliases","text":"<ul> <li>cedit</li> <li>config-edit</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/config_export/","title":"config:export","text":"<p>Export Drupal configuration to a directory.</p>"},{"location":"commands/config_export/#examples","title":"Examples","text":"<ul> <li><code>drush config:export</code>. Export configuration files to the site's config directory.</li> <li><code>drush config:export --destination</code>. Export configuration; Save files in a backup directory named config-export.</li> </ul>"},{"location":"commands/config_export/#options","title":"Options","text":"<ul> <li> --add. Run <code>git add -p</code> after exporting. This lets you choose which config changes to sync for commit.</li> <li> --commit. Run <code>git add -A</code> and <code>git commit</code> after exporting.  This commits everything that was exported without prompting.</li> <li> --message=MESSAGE. Commit comment for the exported configuration.  Optional; may only be used with --commit.</li> <li> --destination[=DESTINATION]. An arbitrary directory that should receive the exported files. A backup directory is used when no value is provided.</li> <li> --diff. Show preview as a diff, instead of a change list.</li> <li> --format[=FORMAT]. </li> </ul>"},{"location":"commands/config_export/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/config_export/#aliases","title":"Aliases","text":"<ul> <li>cex</li> <li>config-export</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/config_get/","title":"config:get","text":"<p>Display a config value, or a whole configuration object.</p>"},{"location":"commands/config_get/#examples","title":"Examples","text":"<ul> <li><code>drush config:get system.site</code>. Displays the system.site config.</li> <li><code>drush config:get system.site page.front</code>. Gets system.site:page.front value.</li> </ul>"},{"location":"commands/config_get/#arguments","title":"Arguments","text":"<ul> <li>config_name. The config object name, for example system.site.</li> <li>[key]. The config key, for example page.front. Optional.</li> </ul>"},{"location":"commands/config_get/#options","title":"Options","text":"<ul> <li> --format[=FORMAT].  [default: yaml]</li> <li> --source[=SOURCE]. The config storage source to read. [default: active]</li> <li> --include-overridden. Apply module and settings.php overrides to values.</li> </ul>"},{"location":"commands/config_get/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/config_get/#aliases","title":"Aliases","text":"<ul> <li>cget</li> <li>config-get</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/config_import/","title":"config:import","text":"<p>Import config from the config directory.</p>"},{"location":"commands/config_import/#examples","title":"Examples","text":"<ul> <li><code>drush config:import</code>. Update Drupal's configuration so it matches the contents of the config directory.</li> <li><code>drush config:import --partial --source=/app/config</code>. Import from the /app/config directory which typically contains one or a few yaml files.</li> <li><code>cat tmp.yml | drush config:set --input-format=yaml user.mail ? -</code>. Update the user.mail config object in its entirety.</li> </ul>"},{"location":"commands/config_import/#options","title":"Options","text":"<ul> <li> --source=SOURCE. An arbitrary directory that holds the configuration files.</li> <li> --partial. Allows for partial config imports from the source directory. Only updates and new configs will be processed with this flag (missing configs will not be deleted). No config transformation happens.</li> <li> --diff. Show preview as a diff.</li> </ul>"},{"location":"commands/config_import/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/config_import/#topics","title":"Topics","text":"<ul> <li>Deploy command for Drupal. (docs:deploy)</li> </ul>"},{"location":"commands/config_import/#aliases","title":"Aliases","text":"<ul> <li>cim</li> <li>config-import</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/config_pull/","title":"config:pull","text":"<p>Export and transfer config from one environment to another.</p>"},{"location":"commands/config_pull/#examples","title":"Examples","text":"<ul> <li><code>drush config:pull @prod @stage</code>. Export config from @prod and transfer to @stage.</li> <li><code>drush config:pull @prod @self:../config/sync</code>. Export config and transfer to a custom directory. Relative paths are calculated from Drupal root.</li> </ul>"},{"location":"commands/config_pull/#arguments","title":"Arguments","text":"<ul> <li>source. A site-alias or the name of a subdirectory within /sites whose config you want to copy from.</li> <li>destination. A site-alias or the name of a subdirectory within /sites whose config you want to replace.</li> </ul>"},{"location":"commands/config_pull/#options","title":"Options","text":"<ul> <li> --safe. Validate that there are no git uncommitted changes before proceeding</li> <li> --runner[=RUNNER]. Where to run the rsync command; defaults to the local site. Can also be source or destination.</li> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: null]</li> <li> --fields=FIELDS. Available fields: Path (path)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/config_pull/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/config_pull/#topics","title":"Topics","text":"<ul> <li>Creating site aliases for running Drush on remote sites. (docs:aliases)</li> <li>Drupal config export instructions, including customizing config by environment. (docs:config:exporting)</li> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/config_pull/#aliases","title":"Aliases","text":"<ul> <li>cpull</li> <li>config-pull</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/config_set/","title":"config:set","text":"<p>Save a config value directly. Does not perform a config import.</p>"},{"location":"commands/config_set/#examples","title":"Examples","text":"<ul> <li><code>drush config:set system.site name MySite</code>. Sets a value for the key name of system.site config object.</li> <li><code>drush config:set system.site page.front /path/to/page</code>. Sets the given URL path as value for the config item with key page.front of system.site config object.</li> <li><code>drush config:set system.site '[]'</code>. Sets the given key to an empty array.</li> <li><code>drush config:set system.site 'NULL'</code>. Sets the given key to NULL.</li> <li><code>drush config:set --input-format=yaml user.role.authenticated permissions [foo,bar]</code>. Use a sequence as value for the key permissions of user.role.authenticated config object.</li> <li><code>drush config:set --input-format=yaml system.site page {403: '403', front: home}</code>. Use a mapping as value for the key page of system.site config object.</li> <li><code>drush config:set --input-format=yaml user.role.authenticated ? \"{label: 'Auth user', weight: 5}\"</code>. Update two top level keys (label, weight) in the system.site config object.</li> <li><code>cat tmp.yml | drush config:set --input-format=yaml user.mail ? -</code>. Update the user.mail config object in its entirety.</li> </ul>"},{"location":"commands/config_set/#arguments","title":"Arguments","text":"<ul> <li>config_name. The config object name, for example system.site.</li> <li>key. The config key, for example page.front. Use ? if you are updating multiple top-level keys.</li> <li>value. The value to assign to the config key. Use - to read from Stdin.</li> </ul>"},{"location":"commands/config_set/#options","title":"Options","text":"<ul> <li> --input-format[=INPUT-FORMAT]. Format to parse the object. Recognized values: string, yaml. Since JSON is a subset of YAML, $value may be in JSON format. [default: string]</li> </ul>"},{"location":"commands/config_set/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/config_set/#aliases","title":"Aliases","text":"<ul> <li>cset</li> <li>config-set</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/config_status/","title":"config:status","text":"<p>Display status of configuration (differences between the filesystem and database).</p>"},{"location":"commands/config_status/#examples","title":"Examples","text":"<ul> <li><code>drush config:status</code>. Display configuration items that need to be synchronized.</li> <li><code>drush config:status --state=Identical</code>. Display configuration items that are in default state.</li> <li><code>drush config:status --state='Only in sync dir' --prefix=node.type.</code>. Display all content types that would be created in active storage on configuration import.</li> <li><code>drush config:status --state=Any --format=list</code>. List all config names.</li> <li><code>drush config:status 2&gt;&amp;1 | grep \"No differences\"</code>. Check there are no differences between database and exported config. Useful for CI.</li> </ul>"},{"location":"commands/config_status/#options","title":"Options","text":"<ul> <li> --state[=STATE]. A comma-separated list of states to filter results. [default: Only in DB,Only in sync dir,Different]</li> <li> --prefix=PREFIX. The config prefix. For example, system. No prefix will return all names in the system.</li> <li> --format=FORMAT. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Name (name), State (state)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/config_status/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/config_status/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/config_status/#aliases","title":"Aliases","text":"<ul> <li>cst</li> <li>config-status</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/core_cron/","title":"core:cron","text":"<p>Run all cron hooks in all active modules for specified site.</p> <p>Consider using <code>drush maint:status &amp;&amp; drush core:cron</code> to avoid cache poisoning during maintenance mode.</p>"},{"location":"commands/core_cron/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/core_cron/#topics","title":"Topics","text":"<ul> <li>Crontab instructions for running your Drupal cron tasks via <code>drush cron</code>. (docs:cron)</li> </ul>"},{"location":"commands/core_cron/#aliases","title":"Aliases","text":"<ul> <li>cron</li> <li>core-cron</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/core_edit/","title":"core:edit","text":"<p>Edit drush.yml, site alias, and Drupal settings.php files.</p>"},{"location":"commands/core_edit/#examples","title":"Examples","text":"<ul> <li><code>drush core:edit</code>. Pick from a list of config/alias/settings files. Open selected in editor.</li> <li><code>drush --bg core-config</code>. Return to shell prompt as soon as the editor window opens.</li> <li><code>drush core:edit etc</code>. Edit the global configuration file.</li> <li><code>drush core:edit demo.alia</code>. Edit a particular alias file.</li> <li><code>drush core:edit sett</code>. Edit settings.php for the current Drupal site.</li> <li><code>drush core:edit --choice=2</code>. Edit the second file in the choice list.</li> </ul>"},{"location":"commands/core_edit/#arguments","title":"Arguments","text":"<ul> <li>[filter]. A substring for filtering the list of files. Omit this argument to choose from loaded files.</li> </ul>"},{"location":"commands/core_edit/#options","title":"Options","text":"<ul> <li> --editor=EDITOR. A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}}.</li> <li> --bg. Launch editor in background process.</li> </ul>"},{"location":"commands/core_edit/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/core_edit/#aliases","title":"Aliases","text":"<ul> <li>conf</li> <li>config</li> <li>core-edit</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/core_requirements/","title":"core:requirements","text":"<p>Information about things that may be wrong in your Drupal installation.</p>"},{"location":"commands/core_requirements/#examples","title":"Examples","text":"<ul> <li><code>drush core:requirements</code>. Show all status lines from the Status Report admin page.</li> <li><code>drush core:requirements --severity=2</code>. Show only the red lines from the Status Report admin page.</li> </ul>"},{"location":"commands/core_requirements/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --severity[=SEVERITY]. Only show status report messages with a severity greater than or equal to the specified value. [default: -1]</li> <li> --ignore[=IGNORE]. Comma-separated list of requirements to remove from output. Run with --format=yaml to see key values to use.</li> <li> --fields=FIELDS. Available fields: Title (title), Severity (severity), SID (sid), Description (description), Summary (value)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/core_requirements/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/core_requirements/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/core_requirements/#aliases","title":"Aliases","text":"<ul> <li>status-report</li> <li>rq</li> <li>core-requirements</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/core_route/","title":"core:route","text":"<p> 10.5+</p> <p>View information about all routes or one route.</p>"},{"location":"commands/core_route/#examples","title":"Examples","text":"<ul> <li><code>drush route</code>. View all routes.</li> <li><code>drush route --name=update.status</code>. View details about the update.status route.</li> <li><code>drush route --path=/user/1</code>. View details about the entity.user.canonical route.</li> <li><code>drush route --url=https://example.com/node/1</code>. View details about the entity.node.canonical route.</li> </ul>"},{"location":"commands/core_route/#options","title":"Options","text":"<ul> <li> --name=NAME. A route name.</li> <li> --path=PATH. An internal path or URL.</li> <li> --format[=FORMAT].  [default: yaml]</li> </ul>"},{"location":"commands/core_route/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/core_route/#aliases","title":"Aliases","text":"<ul> <li>route</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/core_rsync/","title":"core:rsync","text":"<p>Rsync Drupal code or files to/from another server using ssh.</p>"},{"location":"commands/core_rsync/#examples","title":"Examples","text":"<ul> <li><code>drush rsync @dev @stage</code>. Rsync Drupal root from Drush alias dev to the alias stage.</li> <li><code>drush rsync ./ @stage:%files/img</code>. Rsync all files in the current directory to the imgdirectory in the file storage folder on the Drush alias stage.</li> <li><code>drush rsync @live:%private @stage:%private</code>. Rsync private files from live to stage.</li> <li><code>drush rsync @dev @stage -- --exclude=*.sql --delete</code>. Rsync Drupal root from the Drush alias dev to the alias stage, excluding all .sql files and delete all files on the destination that are no longer on the source.</li> <li><code>drush rsync @dev @stage --ssh-options=\"-o StrictHostKeyChecking=no\" -- --delete</code>. Customize how rsync connects with remote host via SSH. rsync options like --delete are placed after a --.</li> </ul>"},{"location":"commands/core_rsync/#arguments","title":"Arguments","text":"<ul> <li>source. A site alias and optional path. See rsync documentation and Site aliases.</li> <li>target. A site alias and optional path. See rsync documentation and Site aliases.</li> <li>[extra].... Additional parameters after the ssh statement.</li> </ul>"},{"location":"commands/core_rsync/#options","title":"Options","text":"<ul> <li> --exclude-paths=EXCLUDE-PATHS. List of paths to exclude, seperated by : (Unix-based systems) or ; (Windows).</li> <li> --include-paths=INCLUDE-PATHS. List of paths to include, seperated by : (Unix-based systems) or ; (Windows).</li> <li> --mode[=MODE]. The unary flags to pass to rsync; --mode=rultz implies rsync -rultz.  Default is -akz. [default: akz]</li> <li> --ssh-options=SSH-OPTIONS. A string appended to ssh command during rsync, sql-sync, etc.</li> </ul>"},{"location":"commands/core_rsync/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/core_rsync/#topics","title":"Topics","text":"<ul> <li>Creating site aliases for running Drush on remote sites. (docs:aliases)</li> </ul>"},{"location":"commands/core_rsync/#aliases","title":"Aliases","text":"<ul> <li>rsync</li> <li>core-rsync</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/core_status/","title":"core:status","text":"<p>An overview of the environment - Drush and Drupal.</p>"},{"location":"commands/core_status/#examples","title":"Examples","text":"<ul> <li><code>drush core-status --field=files</code>. Emit just one field, not all the default fields.</li> <li><code>drush core-status --fields=*</code>. Emit all fields, not just the default ones.</li> </ul>"},{"location":"commands/core_status/#options","title":"Options","text":"<ul> <li> --project=PROJECT. A comma delimited list of projects. Their paths will be added to path-aliases section.</li> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Drupal version (drupal-version), Site URI (uri), DB driver (db-driver), DB hostname (db-hostname), DB port (db-port), DB username (db-username), DB password (db-password), DB name (db-name), Database (db-status), Drupal bootstrap (bootstrap), Default theme (theme), Admin theme (admin-theme), PHP binary (php-bin), PHP config (php-conf), PHP OS (php-os), PHP version (php-version), Drush script (drush-script), Drush version (drush-version), Drush temp (drush-temp), Drush configs (drush-conf), Drush aliases (drush-alias-files), Alias search paths (alias-searchpaths), Install profile (install-profile), Drupal root (root), Drupal Settings (drupal-settings-file), Site path (site-path), Site path (site), Themes path (themes), Modules path (modules), Files, Public (files), Files, Private (private), Files, Temp (temp), Drupal config (config-sync), Files, Public (files-path), Files, Temp (temp-path), Other paths (%paths)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/core_status/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/core_status/#topics","title":"Topics","text":"<ul> <li>README.md (docs:readme)</li> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/core_status/#aliases","title":"Aliases","text":"<ul> <li>status</li> <li>st</li> <li>core-status</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/core_topic/","title":"core:topic","text":"<p>Read detailed documentation on a given topic.</p>"},{"location":"commands/core_topic/#examples","title":"Examples","text":"<ul> <li><code>drush topic</code>. Pick from all available topics.</li> <li><code>drush topic docs-repl</code>. Show documentation for the Drush interactive shell</li> <li><code>drush docs:r</code>. Filter topics for those starting with 'docs-r'.</li> </ul>"},{"location":"commands/core_topic/#arguments","title":"Arguments","text":"<ul> <li>topic_name. The name of the topic you wish to view. If omitted, list all topic descriptions (and names in parenthesis).</li> </ul>"},{"location":"commands/core_topic/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/core_topic/#topics","title":"Topics","text":"<ul> <li>README.md (docs:readme)</li> </ul>"},{"location":"commands/core_topic/#aliases","title":"Aliases","text":"<ul> <li>topic</li> <li>core-topic</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/deploy/","title":"deploy","text":"<p> 10.3+</p> <p>Run several commands after performing a code deployment.</p>"},{"location":"commands/deploy/#examples","title":"Examples","text":"<ul> <li><code>drush deploy -v -y</code>. Run updates with verbose logging and accept all prompts.</li> </ul>"},{"location":"commands/deploy/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/deploy/#topics","title":"Topics","text":"<ul> <li>Deploy command for Drupal. (docs:deploy)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/deploy_hook-status/","title":"deploy:hook-status","text":"<p>Prints information about pending deploy update hooks.</p>"},{"location":"commands/deploy_hook-status/#examples","title":"Examples","text":"<ul> <li><code>drush deploy:hook-status</code>. Prints information about pending deploy hooks.</li> </ul>"},{"location":"commands/deploy_hook-status/#options","title":"Options","text":"<ul> <li> --format=FORMAT. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Module (module), Hook (hook), Description (description)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/deploy_hook-status/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/deploy_hook-status/#topics","title":"Topics","text":"<ul> <li>Deploy command for Drupal. (docs:deploy)</li> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/deploy_hook/","title":"deploy:hook","text":"<p> 10.3+</p> <p>Run pending deploy update hooks.</p>"},{"location":"commands/deploy_hook/#examples","title":"Examples","text":"<ul> <li><code>drush deploy:hook</code>. Run pending deploy hooks.</li> </ul>"},{"location":"commands/deploy_hook/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/deploy_hook/#topics","title":"Topics","text":"<ul> <li>Deploy command for Drupal. (docs:deploy)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/deploy_mark-complete/","title":"deploy:mark-complete","text":"<p> 10.6.1+</p> <p>Mark all deploy hooks as having run.</p>"},{"location":"commands/deploy_mark-complete/#examples","title":"Examples","text":"<ul> <li><code>drush deploy:mark-complete</code>. Skip all pending deploy hooks and mark them as complete.</li> </ul>"},{"location":"commands/deploy_mark-complete/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/deploy_mark-complete/#topics","title":"Topics","text":"<ul> <li>Deploy command for Drupal. (docs:deploy)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/drupal_directory/","title":"drupal:directory","text":"<p>Return the filesystem path for modules/themes and other key folders.</p>"},{"location":"commands/drupal_directory/#examples","title":"Examples","text":"<ul> <li><code>cd $(drush dd devel)</code>. Navigate into the devel module directory</li> <li><code>cd $(drush dd)</code>. Navigate to the root of your Drupal site</li> <li><code>cd $(drush dd files)</code>. Navigate to the files directory.</li> <li><code>drush dd @alias:%files</code>. Print the path to the files directory on the site @alias.</li> <li><code>edit $(drush dd devel)/devel.module</code>. Open devel module in your editor</li> </ul>"},{"location":"commands/drupal_directory/#arguments","title":"Arguments","text":"<ul> <li>[target]. A module/theme name, or special names like root, files, private, or an alias:path string such as @alias:%files.</li> </ul>"},{"location":"commands/drupal_directory/#options","title":"Options","text":"<ul> <li> --local-only. Reject any target that specifies a remote site.</li> </ul>"},{"location":"commands/drupal_directory/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/drupal_directory/#aliases","title":"Aliases","text":"<ul> <li>dd</li> <li>drupal-directory</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/entity_create/","title":"entity:create","text":"<p> 12.5+</p> <p>Create a content entity after prompting for field values.</p> <p>When entering field values, one may submit an incomplete document and any entity violations will be helpfully reported at the top of the document. enter skip as a value in order to skip validation for that field. Timestamp values may be expressed via any string recognized by strtotime()</p>"},{"location":"commands/entity_create/#examples","title":"Examples","text":"<ul> <li><code>drush entity:create node article --validate=0</code>. Create an article entity and skip validation entirely.</li> <li><code>drush entity:create node article --skip-fields=field_media_image,field_tags</code>. Create an article omitting two fields.</li> <li><code>drush entity:create user user --editor=nano</code>. Create a user using the Nano text editor.</li> </ul>"},{"location":"commands/entity_create/#arguments","title":"Arguments","text":"<ul> <li>entity_type. An entity type name.</li> <li>bundle. A bundle name</li> </ul>"},{"location":"commands/entity_create/#options","title":"Options","text":"<ul> <li> --validate[=VALIDATE]. Validate the entity before saving. [default: 1]</li> <li> --uid=UID. The entity author ID. Also used by permission checks (e.g. content moderation)</li> <li> --skip-fields=SKIP-FIELDS. A list of field names that skip both data entry and validation. Delimit fields by comma</li> <li> --editor=EDITOR. A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}}.</li> <li> --bg. Launch editor in background process.</li> <li> --no-validate. Negate --validate option.</li> </ul>"},{"location":"commands/entity_create/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/entity_create/#aliases","title":"Aliases","text":"<ul> <li>econ</li> <li>entity-create</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/entity_delete/","title":"entity:delete","text":"<p>Delete content entities.</p> <p>To delete configuration entities, see config:delete command.</p>"},{"location":"commands/entity_delete/#examples","title":"Examples","text":"<ul> <li><code>drush entity:delete node --bundle=article</code>. Delete all article entities.</li> <li><code>drush entity:delete shortcut</code>. Delete all shortcut entities.</li> <li><code>drush entity:delete node 22,24</code>. Delete nodes 22 and 24.</li> <li><code>drush entity:delete user</code>. Delete all users except uid=1.</li> <li><code>drush entity:delete node --exclude=9,14,81</code>. Delete all nodes except node 9, 14 and 81.</li> <li><code>drush entity:delete node --chunks=5</code>. Delete all node entities in groups of 5.</li> <li><code>drush entity:delete node --limit=500</code>. Delete 500 node entities.</li> </ul>"},{"location":"commands/entity_delete/#arguments","title":"Arguments","text":"<ul> <li>entity_type. An entity machine name.</li> <li>[ids]. A comma delimited list of Ids.</li> </ul>"},{"location":"commands/entity_delete/#options","title":"Options","text":"<ul> <li> --bundle=BUNDLE. Restrict deletion to the specified bundle. Ignored when ids is specified.</li> <li> --exclude=EXCLUDE. Exclude certain entities from deletion. Ignored when ids is specified.</li> <li> --chunks[=CHUNKS]. Specify how many entities will be deleted in the same step. [default: 50]</li> <li> --limit[=LIMIT]. Limit on the number of entities to delete.</li> </ul>"},{"location":"commands/entity_delete/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/entity_delete/#aliases","title":"Aliases","text":"<ul> <li>edel</li> <li>entity-delete</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/entity_save/","title":"entity:save","text":"<p> 11.0+</p> <p>Re-save entities, and publish/unpublish is specified.</p> <p>If passing in a file with an ID in each line, append a comma to each row.</p>"},{"location":"commands/entity_save/#examples","title":"Examples","text":"<ul> <li><code>drush entity:save node --bundle=article</code>. Re-save all article entities.</li> <li><code>drush entity:save shortcut --unpublish --state=draft</code>. Unpublish and transition all shortcut entities.</li> <li><code>drush entity:save node 22,24</code>. Re-save nodes 22 and 24.</li> <li><code>cat /path/to/ids.csv | drush entity:save node -</code>. Re-save the nodes whose Ids are listed in ids.csv.</li> <li><code>drush entity:save node --exclude=9,14,81</code>. Re-save all nodes except node 9, 14 and 81.</li> <li><code>drush entity:save user</code>. Re-save all users.</li> <li><code>drush entity:save node --chunks=5</code>. Re-save all node entities in steps of 5.</li> </ul>"},{"location":"commands/entity_save/#arguments","title":"Arguments","text":"<ul> <li>entity_type. An entity machine name.</li> <li>[ids]. A comma delimited list of Ids. The list is read from Stdin if a value of - is provided for this option.</li> </ul>"},{"location":"commands/entity_save/#options","title":"Options","text":"<ul> <li> --bundle=BUNDLE. Restrict to the specified bundle. Ignored when ids is specified.</li> <li> --exclude=EXCLUDE. Exclude certain entities. Ignored when ids is specified.</li> <li> --chunks[=CHUNKS]. Define how many entities will be loaded in the same step. [default: 50]</li> <li> --publish. Publish entities as they are saved. </li> <li> --unpublish. Unpublish entities as they are saved.</li> <li> --state=STATE. Transition entities to the specified Content Moderation state. Do not pass --publish or --unpublish since the transition state determines handles publishing.</li> </ul>"},{"location":"commands/entity_save/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/entity_save/#aliases","title":"Aliases","text":"<ul> <li>esav</li> <li>entity-save</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/field_base-info/","title":"field:base-info","text":"<p> 11.0+</p> <p>List all base fields of an entity type</p>"},{"location":"commands/field_base-info/#examples","title":"Examples","text":"<ul> <li><code>field:base-info taxonomy_term</code>. List all base fields.</li> <li><code>field:base-info</code>. List all base fields and fill in the remaining information through prompts.</li> </ul>"},{"location":"commands/field_base-info/#arguments","title":"Arguments","text":"<ul> <li>[entityType]. The machine name of the entity type.</li> </ul>"},{"location":"commands/field_base-info/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --show-machine-names. Show machine names instead of labels in option lists.</li> <li> --fields=FIELDS. Available fields: Label (label), Description (description), Field name (field_name), Field type (field_type), Required (required), Translatable (translatable), Cardinality (cardinality), Default value (default_value), Default value callback (default_value_callback), Allowed values (allowed_values), Allowed values function (allowed_values_function), Selection handler (handler), Target bundles (target_bundles)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/field_base-info/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/field_base-info/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/field_base-info/#aliases","title":"Aliases","text":"<ul> <li>field-base-info</li> <li>fbi</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/field_base-override-create/","title":"field:base-override-create","text":"<p> 11.0+</p> <p>Create a new base field override</p>"},{"location":"commands/field_base-override-create/#examples","title":"Examples","text":"<ul> <li><code>field:base-override-create</code>. Create a base field override by answering the prompts.</li> <li><code>field:base-override-create taxonomy_term tag</code>. Create a base field override and fill in the remaining information through prompts.</li> <li><code>field:base-override-create taxonomy_term tag --field-name=name --field-label=Label --is-required=1</code>. Create a base field override in a completely non-interactive way.</li> </ul>"},{"location":"commands/field_base-override-create/#arguments","title":"Arguments","text":"<ul> <li>[entityType]. The machine name of the entity type.</li> <li>[bundle]. The machine name of the bundle.</li> </ul>"},{"location":"commands/field_base-override-create/#options","title":"Options","text":"<ul> <li> --field-name=FIELD-NAME. A unique machine-readable name containing letters, numbers, and underscores.</li> <li> --field-label=FIELD-LABEL. The field label</li> <li> --field-description=FIELD-DESCRIPTION. The field description</li> <li> --is-required=IS-REQUIRED. Whether the field is required</li> <li> --show-machine-names[=SHOW-MACHINE-NAMES]. Show machine names instead of labels in option lists.</li> </ul>"},{"location":"commands/field_base-override-create/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/field_base-override-create/#aliases","title":"Aliases","text":"<ul> <li>bfoc</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/field_create/","title":"field:create","text":"<p> 11.0+</p> <p>Create a new field</p>"},{"location":"commands/field_create/#examples","title":"Examples","text":"<ul> <li><code>field:create</code>. Create a field by answering the prompts.</li> <li><code>field:create taxonomy_term tag</code>. Create a field and fill in the remaining information through prompts.</li> <li><code>field:create taxonomy_term tag --field-name=field_tag_label --field-label=Label --field-type=string --field-widget=string_textfield --is-required=1 --cardinality=2</code>. Create a field in a completely non-interactive way.</li> </ul>"},{"location":"commands/field_create/#arguments","title":"Arguments","text":"<ul> <li>[entityType]. The machine name of the entity type</li> <li>[bundle]. The machine name of the bundle</li> </ul>"},{"location":"commands/field_create/#options","title":"Options","text":"<ul> <li> --field-name=FIELD-NAME. A unique machine-readable name containing letters, numbers, and underscores.</li> <li> --field-label=FIELD-LABEL. The field label</li> <li> --field-description[=FIELD-DESCRIPTION]. Instructions to present to the user below this field on the editing form.</li> <li> --field-type=FIELD-TYPE. The field type</li> <li> --field-widget=FIELD-WIDGET. The field widget</li> <li> --is-required[=IS-REQUIRED]. Whether the field is required</li> <li> --is-translatable[=IS-TRANSLATABLE]. Whether the field is translatable</li> <li> --cardinality=CARDINALITY. The allowed number of values</li> <li> --target-type[=TARGET-TYPE]. The target entity type. Only necessary for entity reference fields.</li> <li> --target-bundle[=TARGET-BUNDLE]. The target bundle(s). Only necessary for entity reference fields.</li> <li> --show-machine-names[=SHOW-MACHINE-NAMES]. Show machine names instead of labels in option lists.</li> <li> --existing-field-name[=EXISTING-FIELD-NAME]. The name of an existing field you want to re-use. Only used in non-interactive context.</li> <li> --existing. Re-use an existing field.</li> </ul>"},{"location":"commands/field_create/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/field_create/#aliases","title":"Aliases","text":"<ul> <li>field-create</li> <li>fc</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/field_delete/","title":"field:delete","text":"<p> 11.0+</p> <p>Delete a field</p>"},{"location":"commands/field_delete/#examples","title":"Examples","text":"<ul> <li><code>field:delete</code>. Delete a field by answering the prompts.</li> <li><code>field-delete taxonomy_term tag</code>. Delete a field and fill in the remaining information through prompts.</li> <li><code>field-delete taxonomy_term tag --field-name=field_tag_label</code>. Delete a field in a non-interactive way.</li> <li><code>field-delete taxonomy_term --field-name=field_tag_label --all-bundles</code>. Delete a field from all bundles.</li> </ul>"},{"location":"commands/field_delete/#arguments","title":"Arguments","text":"<ul> <li>[entityType]. The machine name of the entity type.</li> <li>[bundle]. The machine name of the bundle.</li> </ul>"},{"location":"commands/field_delete/#options","title":"Options","text":"<ul> <li> --field-name=FIELD-NAME. The machine name of the field.</li> <li> --show-machine-names[=SHOW-MACHINE-NAMES]. Show machine names instead of labels in option lists.</li> <li> --all-bundles[=ALL-BUNDLES]. Whether to delete the field from all bundles.</li> </ul>"},{"location":"commands/field_delete/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/field_delete/#aliases","title":"Aliases","text":"<ul> <li>field-delete</li> <li>fd</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/field_formatters/","title":"field:formatters","text":"<p>Lists field formatters.</p>"},{"location":"commands/field_formatters/#examples","title":"Examples","text":"<ul> <li><code>drush field:formatters --field-type=entity_reference</code>. Lists field formatters applicable for entity reference fields.</li> </ul>"},{"location":"commands/field_formatters/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: yaml]</li> <li> --field-type=FIELD-TYPE. Applicable field type.</li> <li> --fields=FIELDS. Available fields: ID (id), Label (label), Default Settings (default_settings), Field types (field_types), Settings (settings), Class (class), Provider (provider) [default: id label default_settings field_types]</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/field_formatters/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/field_formatters/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/field_info/","title":"field:info","text":"<p> 11.0+</p> <p>List all configurable fields of an entity bundle</p>"},{"location":"commands/field_info/#examples","title":"Examples","text":"<ul> <li><code>field:info taxonomy_term tag</code>. List all fields.</li> <li><code>field:info</code>. List all fields and fill in the remaining information through prompts.</li> </ul>"},{"location":"commands/field_info/#arguments","title":"Arguments","text":"<ul> <li>[entityType]. The machine name of the entity type.</li> <li>[bundle]. The machine name of the bundle.</li> </ul>"},{"location":"commands/field_info/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --show-machine-names. Show machine names instead of labels in option lists.</li> <li> --fields=FIELDS. Available fields: Label (label), Description (description), Field name (field_name), Field type (field_type), Required (required), Translatable (translatable), Cardinality (cardinality), Default value (default_value), Default value callback (default_value_callback), Allowed values (allowed_values), Allowed values function (allowed_values_function), Selection handler (handler), Target bundles (target_bundles)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/field_info/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/field_info/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/field_info/#aliases","title":"Aliases","text":"<ul> <li>field-info</li> <li>fi</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/field_types/","title":"field:types","text":"<p>Lists field types.</p>"},{"location":"commands/field_types/#examples","title":"Examples","text":"<ul> <li><code>drush field:types</code>. List all registered field types.</li> </ul>"},{"location":"commands/field_types/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: yaml]</li> <li> --fields=FIELDS. Available fields: ID (id), Label (label), Default Widget (default_widget), Default Formatter (default_formatter), Settings (settings)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/field_types/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/field_types/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/field_widgets/","title":"field:widgets","text":"<p>Lists field widgets.</p>"},{"location":"commands/field_widgets/#examples","title":"Examples","text":"<ul> <li><code>drush field:widgets --field-type=entity_reference</code>. Lists field widgets applicable for entity reference fields.</li> </ul>"},{"location":"commands/field_widgets/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: yaml]</li> <li> --field-type=FIELD-TYPE. Applicable field type.</li> <li> --fields=FIELDS. Available fields: ID (id), Label (label), Default Settings (default_settings), Field types (field_types), Settings (settings), Class (class), Provider (provider) [default: id label default_settings field_types]</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/field_widgets/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/field_widgets/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/generate/","title":"generate","text":"<p>Generate boilerplate code for modules/plugins/services etc.</p> <p>Drush asks questions so that the generated code is as polished as possible. After generating, Drush lists the files that were created.</p> <p>See https://github.com/Chi-teck/drupal-code-generator for a README and bug reports.</p>"},{"location":"commands/generate/#examples","title":"Examples","text":"<ul> <li><code>drush generate</code>. Pick from available generators and then run it.</li> <li><code>drush generate drush-command-file</code>. Generate a Drush commandfile for your module.</li> <li><code>drush generate controller --answer=Example --answer=example</code>. Generate a controller class and pre-fill the first two questions in the wizard.</li> <li><code>drush generate controller -vvv --dry-run</code>. Learn all the potential answers so you can re-run with several --answer options.</li> </ul>"},{"location":"commands/generate/#arguments","title":"Arguments","text":"<ul> <li>[generator]. A generator name. Omit to pick from available Generators.</li> </ul>"},{"location":"commands/generate/#options","title":"Options","text":"<ul> <li> --replace. </li> <li> --working-dir=WORKING-DIR. Absolute path to working directory.</li> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"commands/generate/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/generate/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"commands/generate/#aliases","title":"Aliases","text":"<ul> <li>gen</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/help/","title":"help","text":"<p>Display usage details for a command.</p>"},{"location":"commands/help/#examples","title":"Examples","text":"<ul> <li><code>drush help pm:uninstall</code>. Show help for a command.</li> <li><code>drush help pmu</code>. Show help for a command using an alias.</li> <li><code>drush help --format=xml</code>. Show all available commands in XML format.</li> <li><code>drush help --format=json</code>. All available commands, in JSON format.</li> </ul>"},{"location":"commands/help/#arguments","title":"Arguments","text":"<ul> <li>[command_name]. A command name</li> </ul>"},{"location":"commands/help/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,string,tsv,var_dump,var_export,xml,yaml [default: helpcli]</li> <li> --include-field-labels. </li> <li> --table-style[=TABLE-STYLE].  [default: compact]</li> </ul>"},{"location":"commands/help/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/help/#topics","title":"Topics","text":"<ul> <li>README.md (docs:readme)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/image_derive/","title":"image:derive","text":"<p>Create an image derivative.</p>"},{"location":"commands/image_derive/#examples","title":"Examples","text":"<ul> <li><code>drush image:derive thumbnail core/themes/bartik/screenshot.png</code>. Save thumbnail sized derivative of logo image.</li> </ul>"},{"location":"commands/image_derive/#arguments","title":"Arguments","text":"<ul> <li>style_name. An image style machine name.</li> <li>source. Path to a source image. Optionally prepend stream wrapper scheme. Relative paths calculated from Drupal root.</li> </ul>"},{"location":"commands/image_derive/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/image_derive/#aliases","title":"Aliases","text":"<ul> <li>id</li> <li>image-derive</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/image_flush/","title":"image:flush","text":"<p>Flush all derived images for a given style.</p>"},{"location":"commands/image_flush/#examples","title":"Examples","text":"<ul> <li><code>drush image:flush</code>. Pick an image style and then delete its derivatives.</li> <li><code>drush image:flush thumbnail,large</code>. Delete all thumbnail and large derivatives.</li> <li><code>drush image:flush --all</code>. Flush all derived images. They will be regenerated on demand.</li> </ul>"},{"location":"commands/image_flush/#arguments","title":"Arguments","text":"<ul> <li>style_names. A comma delimited list of image style machine names. If not provided, user may choose from a list of names.</li> </ul>"},{"location":"commands/image_flush/#options","title":"Options","text":"<ul> <li> --all. Flush all derived images</li> </ul>"},{"location":"commands/image_flush/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/image_flush/#aliases","title":"Aliases","text":"<ul> <li>if</li> <li>image-flush</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/jn_get/","title":"jn:get","text":"<p>Execute a JSONAPI request.</p>"},{"location":"commands/jn_get/#examples","title":"Examples","text":"<ul> <li><code>drush jn:get jsonapi/node/article</code>. Get a list of articles back as JSON.</li> <li><code>drush jn:get jsonapi/node/article | jq</code>. Pretty print JSON by piping to jq. See https://stedolan.github.io/jq/ for lots more jq features.</li> </ul>"},{"location":"commands/jn_get/#arguments","title":"Arguments","text":"<ul> <li>url. The JSONAPI URL to request.</li> </ul>"},{"location":"commands/jn_get/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: json]</li> <li> --fields=FIELDS. Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\".</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/jn_get/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/list/","title":"list","text":"<p>List available commands.</p>"},{"location":"commands/list/#examples","title":"Examples","text":"<ul> <li><code>drush list</code>. List all commands.</li> <li><code>drush list --filter=devel_generate</code>. Show only commands starting with devel-</li> <li><code>drush list --format=xml</code>. List all commands in Symfony compatible xml format.</li> </ul>"},{"location":"commands/list/#options","title":"Options","text":"<ul> <li> --format[=FORMAT].  [default: listcli]</li> <li> --raw. Show a simple table of command names and descriptions.</li> <li> --filter=FILTER. Restrict command list to those commands defined in the specified file. Omit value to choose from a list of names.</li> </ul>"},{"location":"commands/list/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/locale_check/","title":"locale:check","text":"<p>Checks for available translation updates.</p>"},{"location":"commands/locale_check/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/locale_check/#aliases","title":"Aliases","text":"<ul> <li>locale-check</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/locale_clear-status/","title":"locale:clear-status","text":"<p> 11.5+</p> <p>Clears the translation status.</p>"},{"location":"commands/locale_clear-status/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/locale_clear-status/#aliases","title":"Aliases","text":"<ul> <li>locale-clear-status</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/locale_export/","title":"locale:export","text":"<p>Exports to a gettext translation file.</p> <p>See Drupal Core: \\Drupal\\locale\\Form\\ExportForm::submitForm</p>"},{"location":"commands/locale_export/#examples","title":"Examples","text":"<ul> <li><code>drush locale:export nl &gt; nl.po</code>. Export the Dutch translations with all types.</li> <li><code>drush locale:export nl --types=customized,not-customized &gt; nl.po</code>. Export the Dutch customized and not customized translations.</li> <li><code>drush locale:export --template &gt; drupal.pot</code>. Export the source strings only as template file for translation.</li> </ul>"},{"location":"commands/locale_export/#arguments","title":"Arguments","text":"<ul> <li>[langcode]. The language code of the exported translations.</li> </ul>"},{"location":"commands/locale_export/#options","title":"Options","text":"<ul> <li> --template. POT file output of extracted source texts to be translated.</li> <li> --types=TYPES. A comma separated list of string types to include, defaults to all types. Recognized values: not-customized, customized, not-translated</li> </ul>"},{"location":"commands/locale_export/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/locale_export/#aliases","title":"Aliases","text":"<ul> <li>locale-export</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/locale_import-all/","title":"locale:import-all","text":"<p> 12.2+</p> <p>Imports multiple translation files from the defined directory.</p>"},{"location":"commands/locale_import-all/#examples","title":"Examples","text":"<ul> <li><code>drush locale:import-all /var/www/translations</code>. Import all translations from the defined directory (non-recursively). Supported filename patterns are: {project}-{version}.{langcode}.po, {prefix}.{langcode}.po or {langcode}.po.</li> <li><code>drush locale:import-all /var/www/translations/custom --type=customized --override=all</code>. Import all custom translations from the defined directory (non-recursively) and override any existing translation. Supported filename patterns are: {project}-{version}.{langcode}.po, {prefix}.{langcode}.po or {langcode}.po.</li> </ul>"},{"location":"commands/locale_import-all/#arguments","title":"Arguments","text":"<ul> <li>directory. The path to directory with translation files to import.</li> </ul>"},{"location":"commands/locale_import-all/#options","title":"Options","text":"<ul> <li> --type=TYPE. String types to include, defaults to not-customized. Recognized values: not-customized, customized</li> <li> --override=OVERRIDE. Whether and how imported strings will override existing translations. Defaults to the Import behavior configured in the admin interface. Recognized values: none, customized, not-customized, all</li> </ul>"},{"location":"commands/locale_import-all/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/locale_import-all/#aliases","title":"Aliases","text":"<ul> <li>locale-import-all</li> <li>locale:import:all</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/locale_import/","title":"locale:import","text":"<p>Imports to a gettext translation file.</p>"},{"location":"commands/locale_import/#examples","title":"Examples","text":"<ul> <li><code>drush locale-import nl drupal-8.4.2.nl.po</code>. Import the Dutch drupal core translation.</li> <li><code>drush locale-import --type=customized nl drupal-8.4.2.nl.po</code>. Import the Dutch drupal core translation. Treat imported strings as custom translations.</li> <li><code>drush locale-import --override=none nl drupal-8.4.2.nl.po</code>. Import the Dutch drupal core translation. Don't overwrite existing translations. Only append new translations.</li> <li><code>drush locale-import --override=not-customized nl drupal-8.4.2.nl.po</code>. Import the Dutch drupal core translation. Only override non-customized translations, customized translations are kept.</li> <li><code>drush locale-import nl custom-translations.po --type=customized --override=all</code>. Import customized Dutch translations and override any existing translation.</li> </ul>"},{"location":"commands/locale_import/#arguments","title":"Arguments","text":"<ul> <li>langcode. The language code of the imported translations.</li> <li>file. Path and file name of the gettext file. Relative paths calculated from Drupal root.</li> </ul>"},{"location":"commands/locale_import/#options","title":"Options","text":"<ul> <li> --type[=TYPE]. String types to include, defaults to all types. Recognized values: not-customized, customized, not-translated [default: not-customized]</li> <li> --override=OVERRIDE. Whether and how imported strings will override existing translations. Defaults to the Import behavior configured in the admin interface. Recognized values: none, customized, not-customized, all</li> <li> --autocreate-language. Create the language in addition to import.</li> </ul>"},{"location":"commands/locale_import/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/locale_import/#aliases","title":"Aliases","text":"<ul> <li>locale-import</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/locale_update/","title":"locale:update","text":"<p>Imports the available translation updates.</p>"},{"location":"commands/locale_update/#options","title":"Options","text":"<ul> <li> --langcodes=LANGCODES. A comma-separated list of language codes to update. If omitted, all translations will be updated.</li> </ul>"},{"location":"commands/locale_update/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/locale_update/#aliases","title":"Aliases","text":"<ul> <li>locale-update</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/maint_get/","title":"maint:get","text":"<p> 11.5+</p> <p>Get maintenance mode. Returns 1 if enabled, 0 if not.</p> <p>Consider using maint:status instead when chaining commands.</p>"},{"location":"commands/maint_get/#examples","title":"Examples","text":"<ul> <li><code>drush maint:get</code>. Print value of maintenance mode in Drupal</li> </ul>"},{"location":"commands/maint_get/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/maint_get/#aliases","title":"Aliases","text":"<ul> <li>mget</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/maint_set/","title":"maint:set","text":"<p> 11.5+</p> <p>Set maintenance mode.</p>"},{"location":"commands/maint_set/#examples","title":"Examples","text":"<ul> <li><code>drush maint:set 1</code>. Put site into Maintenance mode.</li> <li><code>drush maint:set 0</code>. Remove site from Maintenance mode.</li> </ul>"},{"location":"commands/maint_set/#arguments","title":"Arguments","text":"<ul> <li>value. The value to assign to the state key</li> </ul>"},{"location":"commands/maint_set/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/maint_set/#aliases","title":"Aliases","text":"<ul> <li>mset</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/maint_status/","title":"maint:status","text":"<p> 11.5+</p> <p>Fail if maintenance mode is enabled.</p> <p>This commands fails with exit code of 3 when maintenance mode is on. This special exit code distinguishes from a failure to complete.</p>"},{"location":"commands/maint_status/#examples","title":"Examples","text":"<ul> <li><code>drush maint:status &amp;&amp; drush cron</code>. Only run cron when Drupal is not in maintenance mode.</li> </ul>"},{"location":"commands/maint_status/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/maint_status/#aliases","title":"Aliases","text":"<ul> <li>mstatus</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/migrate_fields-source/","title":"migrate:fields-source","text":"<p> 10.4+</p> <p>List the fields available for mapping in a source.</p>"},{"location":"commands/migrate_fields-source/#examples","title":"Examples","text":"<ul> <li><code>migrate:fields-source article</code>. List fields for the source in the article migration.</li> </ul>"},{"location":"commands/migrate_fields-source/#arguments","title":"Arguments","text":"<ul> <li>migrationId. The ID of the migration.</li> </ul>"},{"location":"commands/migrate_fields-source/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Field name (machine_name), Description (description) [default: machine_name description]</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/migrate_fields-source/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/migrate_fields-source/#topics","title":"Topics","text":"<ul> <li>Defining and running migrations. (docs:migrate)</li> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/migrate_fields-source/#aliases","title":"Aliases","text":"<ul> <li>mfs</li> <li>migrate-fields-source</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/migrate_import/","title":"migrate:import","text":"<p> 10.4+</p> <p>Perform one or more migration processes.</p>"},{"location":"commands/migrate_import/#examples","title":"Examples","text":"<ul> <li><code>migrate:import --all</code>. Perform all migrations</li> <li><code>migrate:import --all --no-progress</code>. Perform all migrations but avoid the progress bar</li> <li><code>migrate:import --tag=user,main_content</code>. Import all migrations tagged with user and main_content tags</li> <li><code>migrate:import classification,article</code>. Import new terms and nodes using migration classification and article</li> <li><code>migrate:import user --limit=2</code>. Import no more than 2 users using the user migration</li> <li><code>migrate:import user --idlist=5</code>. Import the user record with source ID 5</li> <li><code>migrate:import node_revision --idlist=1:2,2:3,3:5</code>. Import the node revision record with source IDs [1,2], [2,3], and [3,5]</li> <li><code>migrate:import user --limit=50 --feedback=20</code>. Import 50 users and show process message every 20th record</li> <li><code>migrate:import --all --delete</code>. Perform all migrations and delete the destination items that are missing from source</li> </ul>"},{"location":"commands/migrate_import/#arguments","title":"Arguments","text":"<ul> <li>[migrationIds]. Comma-separated list of migration IDs.</li> </ul>"},{"location":"commands/migrate_import/#options","title":"Options","text":"<ul> <li> --all. Process all migrations</li> <li> --tag=TAG. A comma-separated list of migration tags to import</li> <li> --limit=LIMIT. Limit on the number of items to process in each migration</li> <li> --feedback=FEEDBACK. Frequency of progress messages, in items processed</li> <li> --idlist=IDLIST. Comma-separated list of IDs to import. As an ID may have more than one column, concatenate the columns with the colon ':' separator</li> <li> --update. In addition to processing unprocessed items from the source, update previously-imported items with the current data</li> <li> --force. Force an operation to run, even if all dependencies are not satisfied</li> <li> --execute-dependencies. Execute all dependent migrations first</li> <li> --timestamp. Show progress ending timestamp in progress messages</li> <li> --total. Show total processed item number in progress messages</li> <li> --progress[=PROGRESS]. Show progress bar [default: 1]</li> <li> --delete. Delete destination records missed from the source. Not compatible with --limit and --idlist options, and high_water_property source configuration key.</li> <li> --no-progress. Negate --progress option.</li> </ul>"},{"location":"commands/migrate_import/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/migrate_import/#topics","title":"Topics","text":"<ul> <li>Defining and running migrations. (docs:migrate)</li> </ul>"},{"location":"commands/migrate_import/#aliases","title":"Aliases","text":"<ul> <li>mim</li> <li>migrate-import</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/migrate_messages/","title":"migrate:messages","text":"<p> 10.4+</p> <p>View any messages associated with a migration.</p>"},{"location":"commands/migrate_messages/#examples","title":"Examples","text":"<ul> <li><code>migrate:messages article</code>. Show all messages for the article migration</li> <li><code>migrate:messages node_revision --idlist=1:2,2:3,3:5</code>. Show messages related to node revision records with source IDs [1,2], [2,3], and [3,5].</li> <li><code>migrate:messages custom_node_revision --idlist=1:\"r:1\",2:\"r:3\"</code>. Show messages related to node revision records with source IDs [1,\"r:1\"], and [2,\"r:3\"].</li> </ul>"},{"location":"commands/migrate_messages/#arguments","title":"Arguments","text":"<ul> <li>migrationId. The ID of the migration.</li> </ul>"},{"location":"commands/migrate_messages/#options","title":"Options","text":"<ul> <li> --idlist=IDLIST. Comma-separated list of IDs to import. As an ID may have more than one column, concatenate the columns with the colon ':' separator</li> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Level (level), Source ID(s) (source_ids), Destination ID(s) (destination_ids), Message (message), Source IDs hash (hash) [default: level source_ids destination_ids message hash]</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/migrate_messages/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/migrate_messages/#topics","title":"Topics","text":"<ul> <li>Defining and running migrations. (docs:migrate)</li> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/migrate_messages/#aliases","title":"Aliases","text":"<ul> <li>mmsg</li> <li>migrate-messages</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/migrate_reset-status/","title":"migrate:reset-status","text":"<p> 10.4+</p> <p>Reset an active migration's status to idle.</p>"},{"location":"commands/migrate_reset-status/#arguments","title":"Arguments","text":"<ul> <li>migrationId. The ID of migration to reset.</li> </ul>"},{"location":"commands/migrate_reset-status/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/migrate_reset-status/#topics","title":"Topics","text":"<ul> <li>Defining and running migrations. (docs:migrate)</li> </ul>"},{"location":"commands/migrate_reset-status/#aliases","title":"Aliases","text":"<ul> <li>mrs</li> <li>migrate-reset-status</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/migrate_rollback/","title":"migrate:rollback","text":"<p> 10.4+</p> <p>Rollback one or more migrations.</p>"},{"location":"commands/migrate_rollback/#examples","title":"Examples","text":"<ul> <li><code>migrate:rollback --all</code>. Rollback all migrations</li> <li><code>migrate:rollback --all --no-progress</code>. Rollback all migrations but avoid the progress bar</li> <li><code>migrate:rollback --tag=user,main_content</code>. Rollback all migrations tagged with user and main_content tags</li> <li><code>migrate:rollback classification,article</code>. Rollback terms and nodes imported by classification and article migrations</li> <li><code>migrate:rollback user --idlist=5</code>. Rollback imported user record with source ID 5</li> </ul>"},{"location":"commands/migrate_rollback/#arguments","title":"Arguments","text":"<ul> <li>[migrationIds]. Comma-separated list of migration IDs.</li> </ul>"},{"location":"commands/migrate_rollback/#options","title":"Options","text":"<ul> <li> --all. Process all migrations</li> <li> --tag=TAG. A comma-separated list of migration tags to rollback</li> <li> --feedback=FEEDBACK. Frequency of progress messages, in items processed</li> <li> --idlist=IDLIST. Comma-separated list of IDs to rollback. As an ID may have more than one column, concatenate the columns with the colon ':' separator</li> <li> --progress[=PROGRESS]. Show progress bar [default: 1]</li> <li> --no-progress. Negate --progress option.</li> </ul>"},{"location":"commands/migrate_rollback/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/migrate_rollback/#topics","title":"Topics","text":"<ul> <li>Defining and running migrations. (docs:migrate)</li> </ul>"},{"location":"commands/migrate_rollback/#aliases","title":"Aliases","text":"<ul> <li>mr</li> <li>migrate-rollback</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/migrate_status/","title":"migrate:status","text":"<p> 10.4+</p> <p>List all migrations with current status.</p>"},{"location":"commands/migrate_status/#examples","title":"Examples","text":"<ul> <li><code>migrate:status</code>. Retrieve status for all migrations</li> <li><code>migrate:status --tag</code>. Retrieve status for all migrations, grouped by tag</li> <li><code>migrate:status --tag=user,main_content</code>. Retrieve status for all migrations tagged with user or main_content</li> <li><code>migrate:status classification,article</code>. Retrieve status for specific migrations</li> <li><code>migrate:status --field=id</code>. Retrieve a raw list of migration IDs.</li> <li><code>ms --fields=id,status --format=json</code>. Retrieve a Json serialized list of migrations, each item containing only the migration ID and its status.</li> </ul>"},{"location":"commands/migrate_status/#arguments","title":"Arguments","text":"<ul> <li>[migrationIds]. Restrict to a comma-separated list of migrations. Optional.</li> </ul>"},{"location":"commands/migrate_status/#options","title":"Options","text":"<ul> <li> --tag=TAG. A comma-separated list of migration tags to list. If only --tag is provided, all tagged migrations will be listed, grouped by tags.</li> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Migration ID (id), Status (status), Total (total), Imported (imported), Needing update (needing_update), Unprocessed (unprocessed), Last Imported (last_imported) [default: id status total imported unprocessed last_imported]</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/migrate_status/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/migrate_status/#topics","title":"Topics","text":"<ul> <li>Defining and running migrations. (docs:migrate)</li> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/migrate_status/#aliases","title":"Aliases","text":"<ul> <li>ms</li> <li>migrate-status</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/migrate_stop/","title":"migrate:stop","text":"<p> 10.4+</p> <p>Stop an active migration operation.</p>"},{"location":"commands/migrate_stop/#arguments","title":"Arguments","text":"<ul> <li>migrationId. The ID of migration to stop.</li> </ul>"},{"location":"commands/migrate_stop/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/migrate_stop/#topics","title":"Topics","text":"<ul> <li>Defining and running migrations. (docs:migrate)</li> </ul>"},{"location":"commands/migrate_stop/#aliases","title":"Aliases","text":"<ul> <li>mst</li> <li>migrate-stop</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/mk_docs/","title":"mk:docs","text":"<p>Build a Markdown document for each available Drush command/generator.</p> <p>This command is an early step when building the www.drush.org static site. Adapt it to build a similar site listing the commands that are available on your site. Also see Drush's Github Actions workflow.</p>"},{"location":"commands/mk_docs/#examples","title":"Examples","text":"<ul> <li><code>drush mk:docs</code>. Build many .md files in the docs/commands and docs/generators directories.</li> </ul>"},{"location":"commands/mk_docs/#arguments","title":"Arguments","text":"<ul> <li>command. The command to execute</li> </ul>"},{"location":"commands/mk_docs/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/php_cli/","title":"php:cli","text":"<p>Open an interactive shell on a Drupal site.</p>"},{"location":"commands/php_cli/#examples","title":"Examples","text":"<ul> <li><code>$node = Node::load(1)</code>. Entity classes are available without their namespace. For example, Node::load(1) works instead of Drupal\\Node\\entity\\Node::load(1).</li> <li><code>$paragraph = Paragraph::loadRevision(1)</code>. Also, a loadRevision static method is made available for easier load of revisions.</li> </ul>"},{"location":"commands/php_cli/#options","title":"Options","text":"<ul> <li> --version-history. Use command history based on Drupal version. Default is per site.</li> <li> --cwd=CWD. A directory to change to before launching the shell. Default is the project root directory</li> </ul>"},{"location":"commands/php_cli/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/php_cli/#topics","title":"Topics","text":"<ul> <li>Drush's PHP Shell. (docs:repl)</li> </ul>"},{"location":"commands/php_cli/#aliases","title":"Aliases","text":"<ul> <li>php</li> <li>core:cli</li> <li>core-cli</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/php_eval/","title":"php:eval","text":"<p>Evaluate arbitrary php code after bootstrapping Drupal (if available).</p>"},{"location":"commands/php_eval/#examples","title":"Examples","text":"<ul> <li><code>drush php:eval '$node = \\Drupal ode\\Entity\\Node::load(1); print $node-&gt;getTitle();'</code>. Loads node with nid 1 and then prints its title.</li> <li><code>drush php:eval \"\\Drupal::service('file_system')-&gt;copy('$HOME/Pictures/image.jpg', 'public://image.jpg');\"</code>. Copies a file whose path is determined by an environment's variable. Use of double quotes so the variable $HOME gets replaced by its value.</li> <li><code>drush php:eval \"node_access_rebuild();\"</code>. Rebuild node access permissions.</li> </ul>"},{"location":"commands/php_eval/#arguments","title":"Arguments","text":"<ul> <li>code. PHP code. If shell escaping gets too tedious, consider using the php:script command.</li> </ul>"},{"location":"commands/php_eval/#options","title":"Options","text":"<ul> <li> --format[=FORMAT].  [default: var_dump]</li> </ul>"},{"location":"commands/php_eval/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/php_eval/#aliases","title":"Aliases","text":"<ul> <li>eval</li> <li>ev</li> <li>php-eval</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/php_script/","title":"php:script","text":"<p>Run php a script after a full Drupal bootstrap.</p> <p>A useful alternative to eval command when your php is lengthy or you can't be bothered to figure out bash quoting. If you plan to share a script with others, consider making a full Drush command instead, since that's more self-documenting.  Drush provides commandline options to the script via a variable called $extra.</p>"},{"location":"commands/php_script/#examples","title":"Examples","text":"<ul> <li><code>drush php:script example --script-path=/path/to/scripts:/another/path</code>. Run a script named example.php from specified paths</li> <li><code>drush php:script -</code>. Run PHP code from standard input.</li> <li><code>drush php:script</code>. List all available scripts.</li> <li><code>drush php:script foo -- apple --cider</code>. Run foo.php script with argument apple and option cider. Note the -- separator.</li> </ul>"},{"location":"commands/php_script/#arguments","title":"Arguments","text":"<ul> <li>[extra].... </li> </ul>"},{"location":"commands/php_script/#options","title":"Options","text":"<ul> <li> --format[=FORMAT].  [default: var_export]</li> <li> --script-path=SCRIPT-PATH. Additional paths to search for scripts, separated by : (Unix-based systems) or ; (Windows).</li> </ul>"},{"location":"commands/php_script/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/php_script/#topics","title":"Topics","text":"<ul> <li>An example Drush script. (docs:script)</li> </ul>"},{"location":"commands/php_script/#aliases","title":"Aliases","text":"<ul> <li>scr</li> <li>php-script</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/pm_install/","title":"pm:install","text":"<p>Enable one or more modules.</p>"},{"location":"commands/pm_install/#examples","title":"Examples","text":"<ul> <li><code>drush pm:install --simulate content_moderation</code>. Display what modules would be installed but don't install them.</li> </ul>"},{"location":"commands/pm_install/#arguments","title":"Arguments","text":"<ul> <li>[modules].... A comma delimited list of modules.</li> </ul>"},{"location":"commands/pm_install/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/pm_install/#aliases","title":"Aliases","text":"<ul> <li>in</li> <li>install</li> <li>pm-install</li> <li>en</li> <li>pm-enable</li> <li>pm:enable</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/pm_list/","title":"pm:list","text":"<p>Show a list of available extensions (modules and themes).</p>"},{"location":"commands/pm_list/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --type[=TYPE]. Only show extensions having a given type. Choices: module, theme. [default: module,theme]</li> <li> --status[=STATUS]. Only show extensions having a given status. Choices: enabled or disabled. [default: enabled,disabled]</li> <li> --package=PACKAGE. Only show extensions having a given project packages (e.g. Development).</li> <li> --core. Only show extensions that are in Drupal core.</li> <li> --no-core. Only show extensions that are not provided by Drupal core.</li> <li> --fields=FIELDS. Available fields: Package (package), Project (project), Name (display_name), Name (name), Type (type), Path (path), Status (status), Version (version)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/pm_list/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/pm_list/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/pm_list/#aliases","title":"Aliases","text":"<ul> <li>pml</li> <li>pm-list</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/pm_uninstall/","title":"pm:uninstall","text":"<p>Uninstall one or more modules and their dependent modules.</p>"},{"location":"commands/pm_uninstall/#examples","title":"Examples","text":"<ul> <li><code>drush pm:uninstall --simulate field_ui</code>. Display what modules would be uninstalled but don't uninstall them.</li> </ul>"},{"location":"commands/pm_uninstall/#arguments","title":"Arguments","text":"<ul> <li>[modules].... A comma delimited list of modules.</li> </ul>"},{"location":"commands/pm_uninstall/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/pm_uninstall/#aliases","title":"Aliases","text":"<ul> <li>un</li> <li>pmu</li> <li>pm-uninstall</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/queue_delete/","title":"queue:delete","text":"<p>Delete all items in a specific queue.</p>"},{"location":"commands/queue_delete/#arguments","title":"Arguments","text":"<ul> <li>name. The name of the queue to delete.</li> </ul>"},{"location":"commands/queue_delete/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/queue_delete/#aliases","title":"Aliases","text":"<ul> <li>queue-delete</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/queue_list/","title":"queue:list","text":"<p>Returns a list of all defined queues.</p>"},{"location":"commands/queue_list/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Queue (queue), Items (items), Class (class)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/queue_list/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/queue_list/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/queue_list/#aliases","title":"Aliases","text":"<ul> <li>queue-list</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/queue_run/","title":"queue:run","text":"<p>Run a specific queue by name.</p>"},{"location":"commands/queue_run/#arguments","title":"Arguments","text":"<ul> <li>name. The name of the queue to run.</li> </ul>"},{"location":"commands/queue_run/#options","title":"Options","text":"<ul> <li> --time-limit=TIME-LIMIT. The maximum number of seconds allowed to run the queue.</li> <li> --items-limit=ITEMS-LIMIT. The maximum number of items allowed to run the queue.</li> <li> --lease-time=LEASE-TIME. The maximum number of seconds that an item remains claimed.</li> </ul>"},{"location":"commands/queue_run/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/queue_run/#aliases","title":"Aliases","text":"<ul> <li>queue-run</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/recipe/","title":"recipe","text":"<p>Applies a recipe to a site.</p> <p>See https://drupal.org/project/issues/drupal for bug reports and feature requests for this command.</p>"},{"location":"commands/recipe/#arguments","title":"Arguments","text":"<ul> <li>path. The path to the recipe's folder to apply</li> </ul>"},{"location":"commands/recipe/#options","title":"Options","text":"<ul> <li>-i, --input=INPUT. An input value to pass to the recipe or one of its dependencies, in the form <code>--input=RECIPE_NAME.INPUT_NAME=VALUE</code>.</li> </ul>"},{"location":"commands/recipe/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/role_create/","title":"role:create","text":"<p>Create a new role.</p>"},{"location":"commands/role_create/#examples","title":"Examples","text":"<ul> <li><code>drush role:create 'test_role' 'Test role'</code>. Create a new role with a machine name of 'test_role', and a human-readable name of 'Test role'.</li> </ul>"},{"location":"commands/role_create/#arguments","title":"Arguments","text":"<ul> <li>machine_name. The symbolic machine name for the role.</li> <li>[human_readable_name]. A descriptive name for the role.</li> </ul>"},{"location":"commands/role_create/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/role_create/#aliases","title":"Aliases","text":"<ul> <li>rcrt</li> <li>role-create</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/role_delete/","title":"role:delete","text":"<p>Delete a role.</p>"},{"location":"commands/role_delete/#examples","title":"Examples","text":"<ul> <li><code>drush role:delete 'test_role'</code>. Delete the role 'test_role'.</li> </ul>"},{"location":"commands/role_delete/#arguments","title":"Arguments","text":"<ul> <li>machine_name. The symbolic machine name for the role.</li> </ul>"},{"location":"commands/role_delete/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/role_delete/#aliases","title":"Aliases","text":"<ul> <li>rdel</li> <li>role-delete</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/role_list/","title":"role:list","text":"<p>Display roles and their permissions.</p>"},{"location":"commands/role_list/#examples","title":"Examples","text":"<ul> <li><code>drush role:list --filter='administer nodes'</code>. Display a list of roles that have the administer nodes permission assigned.</li> <li><code>drush role:list --filter='rid=anonymous'</code>. Display only the anonymous role.</li> </ul>"},{"location":"commands/role_list/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: yaml]</li> <li> --fields=FIELDS. Available fields: ID (rid), Role Label (label), Permissions (perms)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/role_list/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/role_list/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/role_list/#aliases","title":"Aliases","text":"<ul> <li>rls</li> <li>role-list</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/role_perm_add/","title":"role:perm:add","text":"<p>Grant specified permission(s) to a role.</p>"},{"location":"commands/role_perm_add/#examples","title":"Examples","text":"<ul> <li><code>drush role:perm:add anonymous 'post comments'</code>. Allow anon users to post comments.</li> <li><code>drush role:perm:add anonymous 'post comments,access content'</code>. Allow anon users to post comments and access content.</li> </ul>"},{"location":"commands/role_perm_add/#arguments","title":"Arguments","text":"<ul> <li>machine_name. The role to modify.</li> <li>permissions. The list of permission to grant, delimited by commas.</li> </ul>"},{"location":"commands/role_perm_add/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/role_perm_add/#aliases","title":"Aliases","text":"<ul> <li>rap</li> <li>role-add-perm</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/role_perm_remove/","title":"role:perm:remove","text":"<p>Remove specified permission(s) from a role.</p>"},{"location":"commands/role_perm_remove/#examples","title":"Examples","text":"<ul> <li><code>drush role:remove-perm anonymous</code>. Remove 2 permissions from anon users.</li> </ul>"},{"location":"commands/role_perm_remove/#arguments","title":"Arguments","text":"<ul> <li>machine_name. The role to modify.</li> <li>permissions. The list of permission to grant, delimited by commas.</li> </ul>"},{"location":"commands/role_perm_remove/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/role_perm_remove/#aliases","title":"Aliases","text":"<ul> <li>rmp</li> <li>role-remove-perm</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/runserver/","title":"runserver","text":"<p>Runs PHP's built-in http server for development.</p> <ul> <li>Don't use this for production, it is neither scalable nor secure for this use.</li> <li>If you run multiple servers simultaneously, you will need to assign each a unique port.</li> <li>Use Ctrl-C or equivalent to stop the server when complete.</li> </ul>"},{"location":"commands/runserver/#examples","title":"Examples","text":"<ul> <li><code>drush rs 8080</code>. Start a web server on 127.0.0.1, port 8080.</li> <li><code>drush rs 10.0.0.28:80</code>. Start runserver on 10.0.0.28, port 80.</li> <li><code>drush rs [::1]:80</code>. Start runserver on IPv6 localhost ::1, port 80.</li> <li><code>drush rs --dns localhost:8888/user</code>. Start runserver on localhost (using rDNS to determine binding IP), port 8888, and open /user in browser.</li> <li><code>drush rs /</code>. Start runserver on default IP/port (127.0.0.1, port 8888), and open / in browser.</li> <li><code>drush rs :9000/admin</code>. Start runserver on 127.0.0.1, port 9000, and open /admin in browser. Note that you need a colon when you specify port and path, but no IP.</li> <li><code>drush --quiet rs</code>. Silence logging the printing of web requests to the console.</li> </ul>"},{"location":"commands/runserver/#arguments","title":"Arguments","text":"<ul> <li>[uri]. IP address and port number to bind to and path to open in web browser. Format is addr:port/path. Only opens a browser if a path is specified.</li> </ul>"},{"location":"commands/runserver/#options","title":"Options","text":"<ul> <li> --default-server=DEFAULT-SERVER. A default addr:port/path to use for any values not specified as an argument.</li> <li> --browser[=BROWSER]. Open the URL in the default browser. Use --no-browser to avoid opening a browser. [default: 1]</li> <li> --dns. Resolve hostnames/IPs using DNS/rDNS (if possible) to determine binding IPs and/or human friendly hostnames for URLs and browser.</li> <li> --no-browser. Negate --browser option.</li> </ul>"},{"location":"commands/runserver/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/runserver/#aliases","title":"Aliases","text":"<ul> <li>rs</li> <li>serve</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/site_alias/","title":"site:alias","text":"<p>Show site alias details, or a list of available site aliases.</p>"},{"location":"commands/site_alias/#examples","title":"Examples","text":"<ul> <li><code>drush site:alias</code>. List all alias records known to drush.</li> <li><code>drush site:alias @dev</code>. Print an alias record for the alias dev.</li> </ul>"},{"location":"commands/site_alias/#arguments","title":"Arguments","text":"<ul> <li>[site]. Site alias or site specification.</li> </ul>"},{"location":"commands/site_alias/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: yaml]</li> <li> --fields=FIELDS. Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\".</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/site_alias/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/site_alias/#topics","title":"Topics","text":"<ul> <li>Creating site aliases for running Drush on remote sites. (docs:aliases)</li> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/site_alias/#aliases","title":"Aliases","text":"<ul> <li>sa</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/site_install/","title":"site:install","text":"<p>Install Drupal along with modules/themes/configuration/profile.</p>"},{"location":"commands/site_install/#examples","title":"Examples","text":"<ul> <li><code>drush si demo_umami --locale=da</code>. (Re)install using the Umami install profile. Set default language to Danish.</li> <li><code>drush si --db-url=mysql://user:pass@localhost:port/dbname?module=mysql#tableprefix</code>. Install on MySQL using the specified DB params.</li> <li><code>drush si --db-url=sqlite://sites/example.com/files/.ht.sqlite?module=sqlite#tableprefix</code>. Install on SQLite, using database file sites/example.com/files/.ht.sqlite</li> <li><code>drush si --db-url=sqlite://:memory:?module=sqlite</code>. Install using SQLite in-memory database, that is not persisted. Useful for testing.</li> <li><code>drush si --account-pass=mom</code>. Re-install with specified uid1 password.</li> <li><code>drush si --existing-config</code>. Install based on the yml files stored in the config export/import directory.</li> <li><code>drush si standard install_configure_form.enable_update_status_emails=NULL</code>. Disable email notification during install and later. If your server has no mail transfer agent, this gets rid of an error during install.</li> <li><code>drush si core/recipes/standard</code>. Install from the core Standard recipe.</li> </ul>"},{"location":"commands/site_install/#arguments","title":"Arguments","text":"<ul> <li>[recipeOrProfile].... An install profile name, or a path to a directory containing a recipe. Relative paths are searched relative to both the Drupal root and the cwd. Defaults to standard unless an install profile is marked as a distribution. Use minimal for a bare minimum installation. Additional info for the install profile may also be provided with additional arguments. Use the format [form name].[parameter name]</li> </ul>"},{"location":"commands/site_install/#options","title":"Options","text":"<ul> <li> --db-url=DB-URL. A Drupal 10 style database URL. Required for initial install, not re-install. If omitted and required, Drush prompts for this item.</li> <li> --db-prefix=DB-PREFIX. An optional table prefix to use for initial install.</li> <li> --db-su=DB-SU. Account to use when creating a new database. Must have Grant permission (mysql only). Optional.</li> <li> --db-su-pw=DB-SU-PW. Password for the db-su account. Optional.</li> <li> --account-name[=ACCOUNT-NAME]. uid1 name. [default: admin]</li> <li> --account-mail[=ACCOUNT-MAIL]. uid1 email. [default: admin@example.com]</li> <li> --site-mail[=SITE-MAIL]. From: for system mailings. [default: admin@example.com]</li> <li> --account-pass=ACCOUNT-PASS. uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in drush.yml.</li> <li> --locale[=LOCALE]. A short language code. Sets the default site language. Language files must already be present. [default: en]</li> <li> --site-name[=SITE-NAME]. Site name [default: Drush Site-Install]</li> <li> --site-pass=SITE-PASS. </li> <li> --sites-subdir=SITES-SUBDIR. Name of directory under sites which should be created.</li> <li> --config-dir=CONFIG-DIR. </li> <li> --existing-config. Configuration from sync directory should be imported during installation.</li> </ul>"},{"location":"commands/site_install/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/site_install/#aliases","title":"Aliases","text":"<ul> <li>si</li> <li>sin</li> <li>site-install</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/site_set/","title":"site:set","text":"<p>Set a site alias that will persist for the current session.</p> <p>Stores the site alias being used in the current session in a temporary file.</p>"},{"location":"commands/site_set/#examples","title":"Examples","text":"<ul> <li><code>drush site:set @dev</code>. Set the current session to use the @dev alias.</li> <li><code>drush site:set user@server/path/to/drupal#sitename</code>. Set the current session to use a remote site via site specification.</li> <li><code>drush site:set /path/to/drupal#sitename</code>. Set the current session to use a local site via site specification.</li> <li><code>drush site:set -</code>. Go back to the previously-set site (like <code>cd -</code>).</li> <li><code>drush site:set</code>. Without an argument, any existing site becomes unset.</li> </ul>"},{"location":"commands/site_set/#arguments","title":"Arguments","text":"<ul> <li>[site]. Site specification to use, or - for previous site. Omit this argument to unset.</li> </ul>"},{"location":"commands/site_set/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/site_set/#topics","title":"Topics","text":"<ul> <li>Creating site aliases for running Drush on remote sites. (docs:aliases)</li> </ul>"},{"location":"commands/site_set/#aliases","title":"Aliases","text":"<ul> <li>use</li> <li>site-set</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/site_ssh/","title":"site:ssh","text":"<p>Connect to a webserver via SSH, and optionally run a shell command.</p>"},{"location":"commands/site_ssh/#examples","title":"Examples","text":"<ul> <li><code>drush @mysite ssh</code>. Open an interactive shell on @mysite's server.</li> <li><code>drush @prod ssh \"ls /tmp\"</code>. Run ls /tmp on @prod site.</li> <li><code>drush @prod ssh \"git pull\"</code>. Run git pull on the Drupal root directory on the @prod site.</li> <li><code>drush ssh \"git pull\"</code>. Run git pull on the local Drupal root directory.</li> </ul>"},{"location":"commands/site_ssh/#arguments","title":"Arguments","text":"<ul> <li>[code].... Code which should run at remote host.</li> </ul>"},{"location":"commands/site_ssh/#options","title":"Options","text":"<ul> <li> --cd=CD. Directory to change to. Defaults to Drupal root.</li> <li> --ssh-options=SSH-OPTIONS. A string of extra options that will be passed to the ssh command (e.g. -p 100)</li> <li> --tty. Create a tty (e.g. to run an interactive program).</li> </ul>"},{"location":"commands/site_ssh/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/site_ssh/#topics","title":"Topics","text":"<ul> <li>Creating site aliases for running Drush on remote sites. (docs:aliases)</li> </ul>"},{"location":"commands/site_ssh/#aliases","title":"Aliases","text":"<ul> <li>ssh</li> <li>site-ssh</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/sql_cli/","title":"sql:cli","text":"<p>Open a SQL command-line interface using Drupal's credentials.</p>"},{"location":"commands/sql_cli/#examples","title":"Examples","text":"<ul> <li><code>drush sql:cli</code>. Open a SQL command-line interface using Drupal's credentials.</li> <li><code>drush sql:cli --extra=--progress-reports</code>. Open a SQL CLI and skip reading table information.</li> <li><code>drush sql:cli &lt; example.sql</code>. Import sql statements from a file into the current database.</li> </ul>"},{"location":"commands/sql_cli/#options","title":"Options","text":"<ul> <li> --extra=EXTRA. Add custom options to the connect string (e.g. --extra=--skip-column-names)</li> <li> --database[=DATABASE]. The DB connection key if using multiple connections in settings.php. [default: default]</li> <li> --db-url=DB-URL. A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname</li> <li> --target[=TARGET]. The name of a target within the specified database connection. [default: default]</li> <li> --show-passwords. Show password on the CLI. Useful for debugging.</li> </ul>"},{"location":"commands/sql_cli/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/sql_cli/#topics","title":"Topics","text":"<ul> <li>Example policy file. (docs:policy)</li> </ul>"},{"location":"commands/sql_cli/#aliases","title":"Aliases","text":"<ul> <li>sqlc</li> <li>sql-cli</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/sql_connect/","title":"sql:connect","text":"<p>A string for connecting to the DB.</p>"},{"location":"commands/sql_connect/#examples","title":"Examples","text":"<ul> <li><code>$(drush sql:connect) &lt; example.sql</code>. Bash: Import SQL statements from a file into the current database.</li> <li><code>eval (drush sql:connect) &lt; example.sql</code>. Fish: Import SQL statements from a file into the current database.</li> </ul>"},{"location":"commands/sql_connect/#options","title":"Options","text":"<ul> <li> --extra=EXTRA. Add custom options to the connect string (e.g. --extra=--skip-column-names)</li> <li> --database[=DATABASE]. The DB connection key if using multiple connections in settings.php. [default: default]</li> <li> --db-url=DB-URL. A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname</li> <li> --target[=TARGET]. The name of a target within the specified database connection. [default: default]</li> <li> --show-passwords. Show password on the CLI. Useful for debugging.</li> </ul>"},{"location":"commands/sql_connect/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/sql_connect/#aliases","title":"Aliases","text":"<ul> <li>sql-connect</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/sql_create/","title":"sql:create","text":"<p>Create a database.</p>"},{"location":"commands/sql_create/#examples","title":"Examples","text":"<ul> <li><code>drush sql:create</code>. Create the database for the current site.</li> <li><code>drush @site.test sql:create</code>. Create the database as specified for @site.test.</li> <li><code>drush sql:create --db-su=root --db-su-pw=rootpassword --db-url=\"mysql://drupal_db_user:drupal_db_password@127.0.0.1/drupal_db\"</code>. Create the database as specified in the db-url option.</li> </ul>"},{"location":"commands/sql_create/#options","title":"Options","text":"<ul> <li> --db-su=DB-SU. Account to use when creating a new database.</li> <li> --db-su-pw=DB-SU-PW. Password for the db-su account.</li> <li> --database[=DATABASE]. The DB connection key if using multiple connections in settings.php. [default: default]</li> <li> --db-url=DB-URL. A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname</li> <li> --target[=TARGET]. The name of a target within the specified database connection. [default: default]</li> <li> --show-passwords. Show password on the CLI. Useful for debugging.</li> </ul>"},{"location":"commands/sql_create/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/sql_create/#aliases","title":"Aliases","text":"<ul> <li>sql-create</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/sql_drop/","title":"sql:drop","text":"<p>Drop all tables in a given database.</p>"},{"location":"commands/sql_drop/#options","title":"Options","text":"<ul> <li> --database[=DATABASE]. The DB connection key if using multiple connections in settings.php. [default: default]</li> <li> --db-url=DB-URL. A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname</li> <li> --target[=TARGET]. The name of a target within the specified database connection. [default: default]</li> <li> --show-passwords. Show password on the CLI. Useful for debugging.</li> </ul>"},{"location":"commands/sql_drop/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/sql_drop/#topics","title":"Topics","text":"<ul> <li>Example policy file. (docs:policy)</li> </ul>"},{"location":"commands/sql_drop/#aliases","title":"Aliases","text":"<ul> <li>sql-drop</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/sql_dump/","title":"sql:dump","text":"<p>Exports the Drupal DB as SQL using mysqldump or equivalent.</p> <p>--create-db is used by sql-sync, since including the DROP TABLE statements interferes with the import when the database is created.</p>"},{"location":"commands/sql_dump/#examples","title":"Examples","text":"<ul> <li><code>drush sql:dump --result-file=../18.sql</code>. Save SQL dump to the directory above Drupal root.</li> <li><code>drush sql:dump --skip-tables-key=common</code>. Skip standard tables. See Drush configuration</li> <li><code>drush sql:dump --extra-dump=--no-data</code>. Pass extra option to mysqldump command.</li> </ul>"},{"location":"commands/sql_dump/#options","title":"Options","text":"<ul> <li> --result-file=RESULT-FILE. Save to a file. The file should be relative to Drupal root. If --result-file is provided with the value 'auto', a date-based filename will be created under ~/drush-backups directory.</li> <li> --create-db. Omit DROP TABLE statements. Used by Postgres and Oracle only.</li> <li> --data-only. Dump data without statements to create any of the schema.</li> <li> --ordered-dump. Order by primary key and add line breaks for efficient diffs. Slows down the dump. Mysql only.</li> <li> --gzip. Compress the dump using the gzip program which must be in your $PATH.</li> <li> --extra=EXTRA. Add custom arguments/options when connecting to database (used internally to list tables).</li> <li> --extra-dump=EXTRA-DUMP. Add custom arguments/options to the dumping of the database (e.g. mysqldump command).</li> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: null]</li> <li> --database[=DATABASE]. The DB connection key if using multiple connections in settings.php. [default: default]</li> <li> --db-url=DB-URL. A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname</li> <li> --target[=TARGET]. The name of a target within the specified database connection. [default: default]</li> <li> --show-passwords. Show password on the CLI. Useful for debugging.</li> <li> --skip-tables-key=SKIP-TABLES-KEY. A key in the $skip_tables array. @see Site aliases</li> <li> --structure-tables-key=STRUCTURE-TABLES-KEY. A key in the $structure_tables array. @see Site aliases</li> <li> --tables-key=TABLES-KEY. A key in the $tables array.</li> <li> --skip-tables-list=SKIP-TABLES-LIST. A comma-separated list of tables to exclude completely.</li> <li> --structure-tables-list=STRUCTURE-TABLES-LIST. A comma-separated list of tables to include for structure, but not data.</li> <li> --tables-list=TABLES-LIST. A comma-separated list of tables to transfer.</li> <li> --fields=FIELDS. Available fields: Path (path)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/sql_dump/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/sql_dump/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/sql_dump/#aliases","title":"Aliases","text":"<ul> <li>sql-dump</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/sql_query/","title":"sql:query","text":"<p>Execute a query against a database.</p>"},{"location":"commands/sql_query/#examples","title":"Examples","text":"<ul> <li><code>drush sql:query \"SELECT * FROM users WHERE uid=1\"</code>. Browse user record. Table prefixes, if used, must be added to table names by hand.</li> <li><code>drush sql:query --db-prefix \"SELECT * FROM {users}\"</code>. Browse user record. Table prefixes are honored.  Caution: All curly-braces will be stripped.</li> <li><code>$(drush sql:connect) &lt; example.sql</code>. Import sql statements from a file into the current database.</li> <li><code>drush sql:query --file=example.sql</code>. Alternate way to import sql statements from a file.</li> <li><code>drush php:eval --format=json \"return \\Drupal::service('database')-&gt;query('SELECT * FROM users LIMIT 5')-&gt;fetchAll()\"</code>. Get data back in JSON format. See https://github.com/drush-ops/drush/issues/3071#issuecomment-347929777.</li> <li><code>$(drush sql:connect) -e \"SELECT * FROM users LIMIT 5;\"</code>. Results are formatted in a pretty table with borders and column headers.</li> </ul>"},{"location":"commands/sql_query/#arguments","title":"Arguments","text":"<ul> <li>[query]. An SQL query. Ignored if --file is provided.</li> </ul>"},{"location":"commands/sql_query/#options","title":"Options","text":"<ul> <li> --result-file[=RESULT-FILE]. Save to a file. The file should be relative to Drupal root.</li> <li> --file=FILE. Path to a file containing the SQL to be run. Gzip files are accepted.</li> <li> --file-delete. Delete the --file after running it.</li> <li> --extra=EXTRA. Add custom options to the connect string (e.g. --extra=--skip-column-names)</li> <li> --db-prefix. Enable replacement of braces in your query.</li> <li> --database[=DATABASE]. The DB connection key if using multiple connections in settings.php. [default: default]</li> <li> --db-url=DB-URL. A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname</li> <li> --target[=TARGET]. The name of a target within the specified database connection. [default: default]</li> <li> --show-passwords. Show password on the CLI. Useful for debugging.</li> </ul>"},{"location":"commands/sql_query/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/sql_query/#aliases","title":"Aliases","text":"<ul> <li>sqlq</li> <li>sql-query</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/sql_sanitize/","title":"sql:sanitize","text":"<p>Sanitize the database by removing or obfuscating user data.</p> <p>Commandfiles may add custom operations by implementing:</p> <pre><code>- `#[CLI\\Hook(type: HookManager::ON_EVENT, target: SanitizeCommands::CONFIRMS)]`. Display summary to user before confirmation.\n- `#[CLI\\Hook(type: HookManager::POST_COMMAND_HOOK, target: SanitizeCommands::SANITIZE)]`. Run queries or call APIs to perform sanitizing\n</code></pre> <p>Several working commandfiles may be found at https://github.com/drush-ops/drush/tree/13.x/src/Commands/sql/sanitize</p>"},{"location":"commands/sql_sanitize/#examples","title":"Examples","text":"<ul> <li><code>drush sql:sanitize --sanitize-password=no</code>. Sanitize database without modifying any passwords.</li> <li><code>drush sql:sanitize --allowlist-fields=field_biography,field_phone_number</code>. Sanitizes database but exempts two user fields from modification.</li> </ul>"},{"location":"commands/sql_sanitize/#options","title":"Options","text":"<ul> <li> --sanitize-email[=SANITIZE-EMAIL]. The pattern for test email addresses in the sanitization operation, or no to keep email addresses unchanged. May contain replacement patterns %uid, %mail or %name. [default: user+%uid@localhost.localdomain]</li> <li> --sanitize-password[=SANITIZE-PASSWORD]. By default, passwords are randomized. Specify no to disable that. Specify any other value to set all passwords to that value.</li> <li> --ignored-roles[=IGNORED-ROLES]. A comma delimited list of roles. Users with at least one of the roles will be exempt from sanitization.</li> <li> --allowlist-fields[=ALLOWLIST-FIELDS]. A comma delimited list of fields exempt from sanitization.</li> </ul>"},{"location":"commands/sql_sanitize/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/sql_sanitize/#topics","title":"Topics","text":"<ul> <li>Drush hooks. (docs:hooks)</li> </ul>"},{"location":"commands/sql_sanitize/#aliases","title":"Aliases","text":"<ul> <li>sqlsan</li> <li>sql-sanitize</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/sql_sync/","title":"sql:sync","text":"<p>Copy DB data from a source site to a target site. Transfers data via rsync.</p>"},{"location":"commands/sql_sync/#examples","title":"Examples","text":"<ul> <li><code>drush sql:sync @source @self</code>. Copy the database from the site with the alias 'source' to the local site.</li> <li><code>drush sql:sync @self @target</code>. Copy the database from the local site to the site with the alias 'target'.</li> <li><code>drush sql:sync #prod #dev</code>. Copy the database from the site in /sites/prod to the site in /sites/dev (multisite installation).</li> </ul>"},{"location":"commands/sql_sync/#arguments","title":"Arguments","text":"<ul> <li>source. A site-alias or site specification whose database you want to copy from.</li> <li>target. A site-alias or site specification whose database you want to replace.</li> </ul>"},{"location":"commands/sql_sync/#options","title":"Options","text":"<ul> <li> --no-dump. Do not dump the sql database; always use an existing dump file.</li> <li> --no-sync. Do not rsync the database dump file from source to target.</li> <li> --runner=RUNNER. Where to run the rsync command; defaults to the local site. Can also be source or target.</li> <li> --create-db. Create a new database before importing the database dump on the target machine.</li> <li> --db-su=DB-SU. Account to use when creating a new database (e.g. root).</li> <li> --db-su-pw=DB-SU-PW. Password for the db-su account.</li> <li> --target-dump=TARGET-DUMP. The path for storing the sql-dump on target machine.</li> <li> --source-dump[=SOURCE-DUMP]. The path for retrieving the sql-dump on source machine.</li> <li> --extra-dump=EXTRA-DUMP. Add custom arguments/options to the dumping of the database (e.g. mysqldump command).</li> <li> --skip-tables-key=SKIP-TABLES-KEY. A key in the $skip_tables array. @see Site aliases</li> <li> --structure-tables-key=STRUCTURE-TABLES-KEY. A key in the $structure_tables array. @see Site aliases</li> <li> --tables-key=TABLES-KEY. A key in the $tables array.</li> <li> --skip-tables-list=SKIP-TABLES-LIST. A comma-separated list of tables to exclude completely.</li> <li> --structure-tables-list=STRUCTURE-TABLES-LIST. A comma-separated list of tables to include for structure, but not data.</li> <li> --tables-list=TABLES-LIST. A comma-separated list of tables to transfer.</li> </ul>"},{"location":"commands/sql_sync/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/sql_sync/#topics","title":"Topics","text":"<ul> <li>Creating site aliases for running Drush on remote sites. (docs:aliases)</li> <li>Example policy file. (docs:policy)</li> <li>Drush configuration. (docs:configuration)</li> <li>Extend sql-sync to allow transfer of the sql dump file via http. (docs:example-sync-via-http)</li> </ul>"},{"location":"commands/sql_sync/#aliases","title":"Aliases","text":"<ul> <li>sql-sync</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/state_delete/","title":"state:delete","text":"<p>Delete a state entry.</p>"},{"location":"commands/state_delete/#examples","title":"Examples","text":"<ul> <li><code>drush state:del system.cron_last</code>. Delete state entry for system.cron_last.</li> </ul>"},{"location":"commands/state_delete/#arguments","title":"Arguments","text":"<ul> <li>key. The state key, for example system.cron_last.</li> </ul>"},{"location":"commands/state_delete/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/state_delete/#aliases","title":"Aliases","text":"<ul> <li>sdel</li> <li>state-delete</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/state_get/","title":"state:get","text":"<p>Display a state value.</p>"},{"location":"commands/state_get/#examples","title":"Examples","text":"<ul> <li><code>drush state:get system.cron_last</code>. Displays last cron run timestamp</li> <li><code>drush state:get drupal_css_cache_files --format=yaml</code>. Displays an array of css files in yaml format.</li> </ul>"},{"location":"commands/state_get/#arguments","title":"Arguments","text":"<ul> <li>key. The key name.</li> </ul>"},{"location":"commands/state_get/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: string]</li> <li> --fields=FIELDS. Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\".</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/state_get/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/state_get/#aliases","title":"Aliases","text":"<ul> <li>sget</li> <li>state-get</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/state_set/","title":"state:set","text":"<p>Set a state value.</p>"},{"location":"commands/state_set/#examples","title":"Examples","text":"<ul> <li><code>drush sset system.maintenance_mode 1 --input-format=integer</code>. Put site into Maintenance mode.</li> <li><code>drush state:set system.cron_last 1406682882 --input-format=integer</code>. Sets a timestamp for last cron run.</li> <li><code>php -r \"print json_encode(array('drupal', 'simpletest'));\"  | drush state-set --input-format=json foo.name -</code>. Set a key to a complex value (e.g. array)</li> <li><code>drush state:set twig_debug TRUE</code>. Enable the Twig debug mode (since Drupal 10.1)</li> <li><code>drush state:set twig_autoreload TRUE</code>. Enable Twig auto reload (since Drupal 10.1)</li> <li><code>drush state:set twig_cache_disable TRUE</code>. Disable the Twig, page, render and dynamic page caches (since Drupal 10.1)</li> <li><code>drush state:set disable_rendered_output_cache_bins TRUE</code>. Disables render cache, dynamic page cache, and page cache. (since Drupal 10.1)</li> </ul>"},{"location":"commands/state_set/#arguments","title":"Arguments","text":"<ul> <li>key. The state key, for example: system.cron_last.</li> <li>value. The value to assign to the state key. Use - to read from Stdin.</li> </ul>"},{"location":"commands/state_set/#options","title":"Options","text":"<ul> <li> --input-format[=INPUT-FORMAT]. Type for the value. Other recognized values: string, integer, float, boolean, json, yaml. [default: auto]</li> </ul>"},{"location":"commands/state_set/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/state_set/#aliases","title":"Aliases","text":"<ul> <li>sset</li> <li>state-set</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/theme_install/","title":"theme:install","text":"<p>Install one or more themes.</p>"},{"location":"commands/theme_install/#arguments","title":"Arguments","text":"<ul> <li>[themes].... A comma delimited list of themes.</li> </ul>"},{"location":"commands/theme_install/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/theme_install/#aliases","title":"Aliases","text":"<ul> <li>thin</li> <li>theme:enable</li> <li>then</li> <li>theme-enable</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/theme_uninstall/","title":"theme:uninstall","text":"<p>Uninstall themes.</p>"},{"location":"commands/theme_uninstall/#arguments","title":"Arguments","text":"<ul> <li>[themes].... A comma delimited list of themes.</li> </ul>"},{"location":"commands/theme_uninstall/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/theme_uninstall/#aliases","title":"Aliases","text":"<ul> <li>theme:un</li> <li>thun</li> <li>theme-uninstall</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/twig_compile/","title":"twig:compile","text":"<p>Compile all Twig template(s).</p>"},{"location":"commands/twig_compile/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/twig_compile/#aliases","title":"Aliases","text":"<ul> <li>twigc</li> <li>twig-compile</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/twig_debug/","title":"twig:debug","text":"<p> 12.1+</p> <p>Enables Twig debug and disables caching Twig templates.</p>"},{"location":"commands/twig_debug/#arguments","title":"Arguments","text":"<ul> <li>mode. Debug mode. Recognized values: on, off.</li> </ul>"},{"location":"commands/twig_debug/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/twig_debug/#aliases","title":"Aliases","text":"<ul> <li>twig-debug</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/twig_unused/","title":"twig:unused","text":"<p>Find potentially unused Twig templates.</p> <p>Immediately before running this command, web crawl your entire web site. Or use your Production PHPStorage dir for comparison.</p>"},{"location":"commands/twig_unused/#examples","title":"Examples","text":"<ul> <li><code>drush twig:unused --field=template /var/www/mass.local/docroot/modules/custom,/var/www/mass.local/docroot/themes/custom</code>. Output a simple list of potentially unused templates.</li> </ul>"},{"location":"commands/twig_unused/#arguments","title":"Arguments","text":"<ul> <li>searchpaths. A comma delimited list of paths to recursively search</li> </ul>"},{"location":"commands/twig_unused/#options","title":"Options","text":"<ul> <li> --format=FORMAT. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Template (template), Compiled (compiled)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/twig_unused/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/twig_unused/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/updatedb/","title":"updatedb","text":"<p>Apply any database updates required (as with running update.php).</p>"},{"location":"commands/updatedb/#options","title":"Options","text":"<ul> <li> --cache-clear[=CACHE-CLEAR]. Clear caches upon completion. [default: 1]</li> <li> --no-cache-clear. Negate --cache-clear option.</li> </ul>"},{"location":"commands/updatedb/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/updatedb/#topics","title":"Topics","text":"<ul> <li>Deploy command for Drupal. (docs:deploy)</li> </ul>"},{"location":"commands/updatedb/#aliases","title":"Aliases","text":"<ul> <li>updb</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/updatedb_status/","title":"updatedb:status","text":"<p>List any pending database updates.</p>"},{"location":"commands/updatedb_status/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Module (module), Update ID (update_id), Description (description), Type (type)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/updatedb_status/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/updatedb_status/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/updatedb_status/#aliases","title":"Aliases","text":"<ul> <li>updbst</li> <li>updatedb-status</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_block/","title":"user:block","text":"<p>Block the specified user(s).</p>"},{"location":"commands/user_block/#examples","title":"Examples","text":"<ul> <li><code>drush user:block user3</code>. Block the user whose name is user3</li> <li><code>drush user:cancel user3 --delete-content</code>. Delete the user whose name is user3 and delete her content.</li> <li><code>drush user:cancel user3 --reassign-content</code>. Delete the user whose name is user3 and reassign her content to the anonymous user.</li> </ul>"},{"location":"commands/user_block/#arguments","title":"Arguments","text":"<ul> <li>[names]. A comma delimited list of user names.</li> </ul>"},{"location":"commands/user_block/#options","title":"Options","text":"<ul> <li> --uid=UID. A comma delimited list of user ids to lookup (an alternative to names).</li> <li> --mail=MAIL. A comma delimited list of emails to lookup (an alternative to names).</li> </ul>"},{"location":"commands/user_block/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_block/#aliases","title":"Aliases","text":"<ul> <li>ublk</li> <li>user-block</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_cancel/","title":"user:cancel","text":"<p>Block or delete user account(s) with the specified name(s).</p> <ul> <li>Existing content may be deleted or reassigned to the Anonymous user. See options.</li> <li>By default only nodes are deleted or reassigned. Custom entity types need own code to support cancellation. See https://www.drupal.org/project/drupal/issues/3043725 for updates.</li> </ul>"},{"location":"commands/user_cancel/#examples","title":"Examples","text":"<ul> <li><code>drush user:cancel username</code>. Block the user account with the name username.</li> <li><code>drush user:cancel --delete-content username</code>. Delete the user account with the name username and delete all content created by that user.</li> <li><code>drush user:cancel --reassign-content username</code>. Delete the user account with the name username and assign all her content to the anonymous user.</li> </ul>"},{"location":"commands/user_cancel/#arguments","title":"Arguments","text":"<ul> <li>[names]. A comma delimited list of user names.</li> </ul>"},{"location":"commands/user_cancel/#options","title":"Options","text":"<ul> <li> --delete-content. Delete the user, and delete all content created by that user.</li> <li> --reassign-content. Delete the user and make its content belong to the anonymous user.</li> <li> --uid=UID. A comma delimited list of user ids to lookup (an alternative to names).</li> <li> --mail=MAIL. A comma delimited list of emails to lookup (an alternative to names).</li> </ul>"},{"location":"commands/user_cancel/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_cancel/#aliases","title":"Aliases","text":"<ul> <li>ucan</li> <li>user-cancel</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_create/","title":"user:create","text":"<p>Create a user account.</p>"},{"location":"commands/user_create/#examples","title":"Examples","text":"<ul> <li><code>drush user:create newuser --mail='person@example.com' --password='letmein'</code>. Create a new user account with the name newuser, the email address person@example.com, and the password letmein</li> </ul>"},{"location":"commands/user_create/#arguments","title":"Arguments","text":"<ul> <li>name. The name of the account to add</li> </ul>"},{"location":"commands/user_create/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --password=PASSWORD. The password for the new account</li> <li> --mail=MAIL. The email address for the new account</li> <li> --fields=FIELDS. Available fields: User ID (uid), User name (name), Password (pass), User mail (mail), User theme (theme), Signature (signature), Signature format (signature_format), User created (user_created), Created (created), User last access (user_access), Last access (access), User last login (user_login), Last login (login), User status (user_status), Status (status), Time zone (timezone), User picture (picture), Initial user mail (init), User roles (roles), Group Audience (group_audience), Language code (langcode), Uuid (uuid)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/user_create/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_create/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/user_create/#aliases","title":"Aliases","text":"<ul> <li>ucrt</li> <li>user-create</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_information/","title":"user:information","text":"<p>Print information about the specified user(s).</p>"},{"location":"commands/user_information/#examples","title":"Examples","text":"<ul> <li><code>drush user:information someguy,somegal</code>. Display information about the someguy and somegal user accounts.</li> <li><code>drush user:information --mail=someguy@somegal.com</code>. Display information for a given email account.</li> <li><code>drush user:information --uid=5</code>. Display information for a given user id.</li> <li><code>drush uinf --uid=$(drush sqlq \"SELECT GROUP_CONCAT(entity_id) FROM user__roles WHERE roles_target_id = 'administrator'\")</code>. Display information for all administrators.</li> </ul>"},{"location":"commands/user_information/#arguments","title":"Arguments","text":"<ul> <li>[names]. A comma delimited list of user names.</li> </ul>"},{"location":"commands/user_information/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --uid=UID. A comma delimited list of user ids to lookup (an alternative to names).</li> <li> --mail=MAIL. A comma delimited list of emails to lookup (an alternative to names).</li> <li> --fields=FIELDS. Available fields: User ID (uid), User name (name), Password (pass), User mail (mail), User theme (theme), Signature (signature), Signature format (signature_format), User created (user_created), Created (created), User last access (user_access), Last access (access), User last login (user_login), Last login (login), User status (user_status), Status (status), Time zone (timezone), User picture (picture), Initial user mail (init), User roles (roles), Group Audience (group_audience), Language code (langcode), Uuid (uuid)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/user_information/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_information/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/user_information/#aliases","title":"Aliases","text":"<ul> <li>uinf</li> <li>user-information</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_login/","title":"user:login","text":"<p>Display a one time login link for user ID 1, or another user.</p>"},{"location":"commands/user_login/#examples","title":"Examples","text":"<ul> <li><code>drush user:login</code>. Open browser to homepage, logged in as uid=1.</li> <li><code>drush user:login --name=ryan node/add/blog</code>. Open browser (if configured or detected) for a one-time login link for username ryan that redirects to node/add/blog.</li> <li><code>drush user:login --uid=123</code>. Open browser and login as user with uid \"123\".</li> <li><code>drush user:login --mail=foo@bar.com</code>. Open browser and login as user with mail \"foo@bar.com\".</li> </ul>"},{"location":"commands/user_login/#arguments","title":"Arguments","text":"<ul> <li>[path]. Optional path to redirect to after logging in.</li> </ul>"},{"location":"commands/user_login/#options","title":"Options","text":"<ul> <li> --name[=NAME]. A user name to log in as.</li> <li> --uid[=UID]. A user ID to log in as.</li> <li> --mail[=MAIL]. A user email to log in as.</li> <li> --browser[=BROWSER]. Open the URL in the default browser. Use --no-browser to avoid opening a browser. [default: 1]</li> <li> --redirect-port=REDIRECT-PORT. A custom port for redirecting to (e.g., when running within a Vagrant environment)</li> <li> --no-browser. Negate --browser option.</li> </ul>"},{"location":"commands/user_login/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_login/#aliases","title":"Aliases","text":"<ul> <li>uli</li> <li>user-login</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_password/","title":"user:password","text":"<p>Set the password for the user account with the specified name.</p>"},{"location":"commands/user_password/#examples","title":"Examples","text":"<ul> <li><code>drush user:password someuser 'correct horse battery staple'</code>. Set the password for the username someuser. See https://xkcd.com/936</li> </ul>"},{"location":"commands/user_password/#arguments","title":"Arguments","text":"<ul> <li>name. The name of the account to modify.</li> <li>password. The new password for the account.</li> </ul>"},{"location":"commands/user_password/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_password/#aliases","title":"Aliases","text":"<ul> <li>upwd</li> <li>user-password</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_role_add/","title":"user:role:add","text":"<p>Add a role to the specified user accounts.</p>"},{"location":"commands/user_role_add/#examples","title":"Examples","text":"<ul> <li><code>drush user:role:add 'editor' user3</code>. Add the editor role to user3</li> </ul>"},{"location":"commands/user_role_add/#arguments","title":"Arguments","text":"<ul> <li>role. The machine name of the role to add.</li> <li>[names]. A comma delimited list of user names.</li> </ul>"},{"location":"commands/user_role_add/#options","title":"Options","text":"<ul> <li> --uid=UID. A comma delimited list of user ids to lookup (an alternative to names).</li> <li> --mail=MAIL. A comma delimited list of emails to lookup (an alternative to names).</li> </ul>"},{"location":"commands/user_role_add/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_role_add/#aliases","title":"Aliases","text":"<ul> <li>urol</li> <li>user-add-role</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_role_remove/","title":"user:role:remove","text":"<p>Remove a role from the specified user accounts.</p>"},{"location":"commands/user_role_remove/#examples","title":"Examples","text":"<ul> <li><code>drush user:role:remove 'power_user' user3</code>. Remove the power_user role from user3</li> </ul>"},{"location":"commands/user_role_remove/#arguments","title":"Arguments","text":"<ul> <li>role. The machine name of the role to add.</li> <li>[names]. A comma delimited list of user names.</li> </ul>"},{"location":"commands/user_role_remove/#options","title":"Options","text":"<ul> <li> --uid=UID. A comma delimited list of user ids to lookup (an alternative to names).</li> <li> --mail=MAIL. A comma delimited list of emails to lookup (an alternative to names).</li> </ul>"},{"location":"commands/user_role_remove/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_role_remove/#aliases","title":"Aliases","text":"<ul> <li>urrol</li> <li>user-remove-role</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/user_unblock/","title":"user:unblock","text":"<p>Unblock the specified user(s).</p>"},{"location":"commands/user_unblock/#examples","title":"Examples","text":"<ul> <li><code>drush user:unblock user3</code>. Unblock the user whose name is user3</li> </ul>"},{"location":"commands/user_unblock/#arguments","title":"Arguments","text":"<ul> <li>[names]. A comma delimited list of user names.</li> </ul>"},{"location":"commands/user_unblock/#options","title":"Options","text":"<ul> <li> --uid=UID. A comma delimited list of user ids to lookup (an alternative to names).</li> <li> --mail=MAIL. A comma delimited list of emails to lookup (an alternative to names).</li> </ul>"},{"location":"commands/user_unblock/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/user_unblock/#aliases","title":"Aliases","text":"<ul> <li>uublk</li> <li>user-unblock</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/version/","title":"version","text":"<p>Show Drush version.</p>"},{"location":"commands/version/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Drush version (drush-version)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/version/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/version/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/views_dev/","title":"views:dev","text":"<p>Set several Views settings to more developer-oriented values.</p>"},{"location":"commands/views_dev/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/views_dev/#aliases","title":"Aliases","text":"<ul> <li>vd</li> <li>views-dev</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/views_disable/","title":"views:disable","text":"<p>Disable the specified views.</p>"},{"location":"commands/views_disable/#examples","title":"Examples","text":"<ul> <li><code>drush vdis frontpage taxonomy_term</code>. Disable the frontpage and taxonomy_term views.</li> </ul>"},{"location":"commands/views_disable/#arguments","title":"Arguments","text":"<ul> <li>views. A comma delimited list of view names.</li> </ul>"},{"location":"commands/views_disable/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/views_disable/#aliases","title":"Aliases","text":"<ul> <li>vdis</li> <li>views-disable</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/views_enable/","title":"views:enable","text":"<p>Enable the specified views.</p>"},{"location":"commands/views_enable/#examples","title":"Examples","text":"<ul> <li><code>drush ven frontpage,taxonomy_term</code>. Enable the frontpage and taxonomy_term views.</li> </ul>"},{"location":"commands/views_enable/#arguments","title":"Arguments","text":"<ul> <li>views. A comma delimited list of view names.</li> </ul>"},{"location":"commands/views_enable/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/views_enable/#aliases","title":"Aliases","text":"<ul> <li>ven</li> <li>views-enable</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/views_execute/","title":"views:execute","text":"<p>Execute a view and show a count of the results, or the rendered HTML.</p>"},{"location":"commands/views_execute/#examples","title":"Examples","text":"<ul> <li><code>drush views:execute my_view</code>. Show the rendered HTML for the default display for the my_view View.</li> <li><code>drush views:execute my_view page_1 3 --count</code>. Show a count of my_view:page_1 where the first contextual filter value is 3.</li> <li><code>drush views:execute my_view page_1 3,foo</code>. Show the rendered HTML of my_view:page_1 where the first two contextual filter values are 3 and 'foo' respectively.</li> </ul>"},{"location":"commands/views_execute/#arguments","title":"Arguments","text":"<ul> <li>view_name. The name of the view to execute.</li> <li>[display]. The display ID to execute. If none specified, the default display will be used.</li> <li>[view_args]. A comma delimited list of values, corresponding to contextual filters.</li> </ul>"},{"location":"commands/views_execute/#options","title":"Options","text":"<ul> <li> --count[=COUNT]. Display a count of the results instead of each row.</li> <li> --show-admin-links. Show contextual admin links in the rendered markup.</li> </ul>"},{"location":"commands/views_execute/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/views_execute/#aliases","title":"Aliases","text":"<ul> <li>vex</li> <li>views-execute</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/views_list/","title":"views:list","text":"<p>Get a list of all views in the system.</p>"},{"location":"commands/views_list/#examples","title":"Examples","text":"<ul> <li><code>drush vl</code>. Show a list of all available views.</li> <li><code>drush vl --name=blog</code>. Show a list of views which names contain 'blog'.</li> <li><code>drush vl --tags=tag1,tag2</code>. Show a list of views tagged with 'tag1' or 'tag2'.</li> <li><code>drush vl --status=enabled</code>. Show a list of enabled views.</li> </ul>"},{"location":"commands/views_list/#options","title":"Options","text":"<ul> <li> --name=NAME. </li> <li> --tags=TAGS. A comma-separated list of views tags by which to filter the results.</li> <li> --status=STATUS. Filter views by status. Choices: enabled, disabled.</li> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --fields=FIELDS. Available fields: Machine name (machine-name), Name (label), Description (description), Status (status), Tag (tag)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/views_list/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/views_list/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/views_list/#aliases","title":"Aliases","text":"<ul> <li>vl</li> <li>views-list</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/watchdog_delete/","title":"watchdog:delete","text":"<p>Delete watchdog log records.</p>"},{"location":"commands/watchdog_delete/#examples","title":"Examples","text":"<ul> <li><code>drush watchdog:delete all</code>. Delete all messages.</li> <li><code>drush watchdog:delete 64</code>. Delete messages with id 64.</li> <li><code>drush watchdog:delete \"cron run succesful\"</code>. Delete messages containing the string \"cron run succesful\".</li> <li><code>drush watchdog:delete --severity=Notice</code>. Delete all messages with a severity of notice.</li> <li><code>drush watchdog:delete --type=cron</code>. Delete all messages of type cron.</li> </ul>"},{"location":"commands/watchdog_delete/#arguments","title":"Arguments","text":"<ul> <li>[substring]. Delete all log records with this text in the messages.</li> </ul>"},{"location":"commands/watchdog_delete/#options","title":"Options","text":"<ul> <li> --severity=SEVERITY. Delete messages of a given severity level.</li> <li> --type=TYPE. Delete messages of a given type.</li> </ul>"},{"location":"commands/watchdog_delete/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/watchdog_delete/#aliases","title":"Aliases","text":"<ul> <li>wd-del</li> <li>wd-delete</li> <li>wd</li> <li>watchdog-delete</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/watchdog_list/","title":"watchdog:list","text":"<p>Interactively filter the watchdog message listing.</p>"},{"location":"commands/watchdog_list/#examples","title":"Examples","text":"<ul> <li><code>drush watchdog:list</code>. Prompt for message type or severity, then run watchdog:show.</li> </ul>"},{"location":"commands/watchdog_list/#arguments","title":"Arguments","text":"<ul> <li>[substring]. A substring to look search in error messages.</li> </ul>"},{"location":"commands/watchdog_list/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --count[=COUNT]. The number of messages to show. [default: 10]</li> <li> --extended. Return extended information about each message.</li> <li> --severity. Restrict to messages of a given severity level (numeric or string).</li> <li> --type. Restrict to messages of a given type.</li> <li> --fields=FIELDS. Available fields: ID (wid), Type (type), Message (message), Severity (severity), Location (location), Hostname (hostname), Date (date), Username (username)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/watchdog_list/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/watchdog_list/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/watchdog_list/#aliases","title":"Aliases","text":"<ul> <li>wd-list,watchdog-list</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/watchdog_show-one/","title":"watchdog:show-one","text":"<p>Show one log record by ID.</p>"},{"location":"commands/watchdog_show-one/#arguments","title":"Arguments","text":"<ul> <li>id. Watchdog Id</li> </ul>"},{"location":"commands/watchdog_show-one/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: yaml]</li> <li> --fields=FIELDS. Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\".</li> <li> --field=FIELD. Select just one field, and force format to string.</li> </ul>"},{"location":"commands/watchdog_show-one/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/watchdog_show-one/#aliases","title":"Aliases","text":"<ul> <li>wd-one</li> <li>watchdog-show-one</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/watchdog_show/","title":"watchdog:show","text":"<p>Show watchdog messages.</p>"},{"location":"commands/watchdog_show/#examples","title":"Examples","text":"<ul> <li><code>drush watchdog:show</code>. Show a listing of most recent 10 messages.</li> <li><code>drush watchdog:show \"cron run successful\"</code>. Show a listing of most recent 10 messages containing the string cron run successful.</li> <li><code>drush watchdog:show --count=46</code>. Show a listing of most recent 46 messages.</li> <li><code>drush watchdog:show --severity=Notice</code>. Show a listing of most recent 10 messages with a severity of notice.</li> <li><code>drush watchdog:show --severity-min=Warning</code>. Show a listing of most recent 10 messages with a severity of warning or higher.</li> <li><code>drush watchdog:show --type=php</code>. Show a listing of most recent 10 messages of type php</li> </ul>"},{"location":"commands/watchdog_show/#arguments","title":"Arguments","text":"<ul> <li>[substring]. A substring to look search in error messages.</li> </ul>"},{"location":"commands/watchdog_show/#options","title":"Options","text":"<ul> <li> --format[=FORMAT]. Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table]</li> <li> --count[=COUNT]. The number of messages to show. [default: 10]</li> <li> --severity=SEVERITY. Restrict to messages of a given severity level (numeric or string).</li> <li> --severity-min=SEVERITY-MIN. Restrict to messages of a given severity level and higher.</li> <li> --type=TYPE. Restrict to messages of a given type.</li> <li> --extended. Return extended information about each message.</li> <li> --fields=FIELDS. Available fields: ID (wid), Type (type), Message (message), Severity (severity), Location (location), Hostname (hostname), Date (date), Username (username),  Uid (uid)</li> <li> --field=FIELD. Select just one field, and force format to string.</li> <li> --filter[=FILTER]. Filter output based on provided expression</li> </ul>"},{"location":"commands/watchdog_show/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/watchdog_show/#topics","title":"Topics","text":"<ul> <li>Output formatters and filters: control the command output (docs:output-formats-filters)</li> </ul>"},{"location":"commands/watchdog_show/#aliases","title":"Aliases","text":"<ul> <li>wd-show</li> <li>ws</li> <li>watchdog-show</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/watchdog_tail/","title":"watchdog:tail","text":"<p> 10.6+</p> <p>Tail watchdog messages.</p>"},{"location":"commands/watchdog_tail/#examples","title":"Examples","text":"<ul> <li><code>drush watchdog:tail</code>. Continuously tail watchdog messages.</li> <li><code>drush watchdog:tail \"cron run successful\"</code>. Continuously tail watchdog messages, filtering on the string cron run successful.</li> <li><code>drush watchdog:tail --severity=Notice</code>. Continuously tail watchdog messages, filtering severity of notice.</li> <li><code>drush watchdog:tail --severity-min=Warning</code>. Continuously tail watchdog messages, filtering for a severity of warning or higher.</li> <li><code>drush watchdog:tail --type=php</code>. Continuously tail watchdog messages, filtering on type equals php.</li> </ul>"},{"location":"commands/watchdog_tail/#arguments","title":"Arguments","text":"<ul> <li>[substring]. A substring to look search in error messages.</li> </ul>"},{"location":"commands/watchdog_tail/#options","title":"Options","text":"<ul> <li> --severity=SEVERITY. Restrict to messages of a given severity level (numeric or string).</li> <li> --severity-min=SEVERITY-MIN. Restrict to messages of a given severity level and higher.</li> <li> --type=TYPE. Restrict to messages of a given type.</li> <li> --extended. Return extended information about each message.</li> </ul>"},{"location":"commands/watchdog_tail/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/watchdog_tail/#aliases","title":"Aliases","text":"<ul> <li>wd-tail</li> <li>wt</li> <li>watchdog-tail</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/yaml_get_value/","title":"yaml:get:value","text":"<p> 12.0+</p> <p>Get a value for a specific key in a YAML file.</p> <p>See https://github.com/grasmash/yaml-cli for a README and bug reports.</p>"},{"location":"commands/yaml_get_value/#arguments","title":"Arguments","text":"<ul> <li>filename. The filename of the YAML file</li> <li>key. The key for the value to get, in dot notation.</li> </ul>"},{"location":"commands/yaml_get_value/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/yaml_get_value/#aliases","title":"Aliases","text":"<ul> <li>y:get:value</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/yaml_lint/","title":"yaml:lint","text":"<p> 12.0+</p> <p>Validates that a given YAML file has valid syntax.</p> <p>See https://github.com/grasmash/yaml-cli for a README and bug reports.</p>"},{"location":"commands/yaml_lint/#arguments","title":"Arguments","text":"<ul> <li>filename. The filename of the YAML file</li> </ul>"},{"location":"commands/yaml_lint/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/yaml_lint/#aliases","title":"Aliases","text":"<ul> <li>y:lint</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/yaml_unset_key/","title":"yaml:unset:key","text":"<p> 12.0+</p> <p>Unset a specific key in a YAML file.</p> <p>See https://github.com/grasmash/yaml-cli for a README and bug reports.</p>"},{"location":"commands/yaml_unset_key/#arguments","title":"Arguments","text":"<ul> <li>filename. The filename of the YAML file</li> <li>key. The key to unset, in dot notation</li> </ul>"},{"location":"commands/yaml_unset_key/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/yaml_unset_key/#aliases","title":"Aliases","text":"<ul> <li>y:unset:key</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/yaml_update_key/","title":"yaml:update:key","text":"<p> 12.0+</p> <p>Update a specific key in a YAML file.</p> <p>See https://github.com/grasmash/yaml-cli for a README and bug reports.</p>"},{"location":"commands/yaml_update_key/#arguments","title":"Arguments","text":"<ul> <li>filename. The filename of the YAML file</li> <li>key. The original key, in dot notation</li> <li>new-key. The new key, in dot notation</li> </ul>"},{"location":"commands/yaml_update_key/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/yaml_update_key/#aliases","title":"Aliases","text":"<ul> <li>y:update:key</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/yaml_update_value/","title":"yaml:update:value","text":"<p> 12.0+</p> <p>Update the value for a specific key in a YAML file.</p> <p>See https://github.com/grasmash/yaml-cli for a README and bug reports.</p>"},{"location":"commands/yaml_update_value/#arguments","title":"Arguments","text":"<ul> <li>filename. The filename of the YAML file</li> <li>key. The key for the value to set, in dot notation</li> <li>value. The new value</li> </ul>"},{"location":"commands/yaml_update_value/#options","title":"Options","text":"<ul> <li>-t, --type=TYPE. Set the variable type for the value. Accepted types are int, integer, bool, boolean, str, and string.</li> </ul>"},{"location":"commands/yaml_update_value/#global-options","title":"Global Options","text":"<ul> <li> -v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li> -y, --yes. Auto-accept the default for all user prompts. Equivalent to --no-interaction.</li> <li> -l, --uri=URI. A base URL for building links and selecting a multi-site. Defaults to https://default.</li> <li>To see all global options, run <code>drush topic</code> and pick the first choice.</li> </ul>"},{"location":"commands/yaml_update_value/#aliases","title":"Aliases","text":"<ul> <li>y:update:value</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"contribute/CONTRIBUTING/","title":"Guidelines","text":"<p>Drush is built by people like you! Please join us.</p>"},{"location":"contribute/CONTRIBUTING/#git-and-pull-requests","title":"Git and Pull requests","text":"<ul> <li>Contributions are submitted, reviewed, and accepted using GitHub pull requests.</li> <li>The latest changes are in the <code>13.x</code> branch. PR's should initially target this branch.</li> <li>See the test-specific README.md for instructions on running the test suite. Test before you push. Get familiar with Unish, our test suite. Optionally run tests in the provided Docker containers.</li> <li>We maintain branches named 13.x, 12.x, etc. These are release branches. From these branches, we make new tags for patch and minor versions.</li> </ul>"},{"location":"contribute/CONTRIBUTING/#development-environment","title":"Development Environment","text":"<ul> <li>You may choose to use the DDEV for a standardized development environment.</li> <li>See <code>composer run-script -l</code> for a list of helper scripts.</li> </ul>"},{"location":"contribute/CONTRIBUTING/#coding-style","title":"Coding style","text":"<ul> <li>Do write comments. You don't have to comment every line, but if you come up with something that's a bit complex/weird, just leave a comment. Bear in mind that you will probably leave the project at some point and that other people will read your code. Undocumented huge amounts of code are nearly worthless!</li> <li>We use PSR-12.</li> <li>Keep it compatible. Do not introduce changes to the public API, or configurations too casually. Don't make incompatible changes without good reasons!</li> <li>Run <code>composer cs</code> to check the project for coding style issues and run <code>composer cbf</code> to fix them automatically where possible. These scripts use <code>PHP_CodeSniffer</code> in background.</li> </ul>"},{"location":"contribute/CONTRIBUTING/#documentation","title":"Documentation","text":"<ul> <li>The docs are on our web site. You may also read these from within Drush, with the <code>drush topic</code> command.</li> <li>Documentation should be kept up-to-date. This means, whenever you add a new API method, add a new hook or change the database model, pack the relevant changes to the docs in the same pull request.</li> </ul>"},{"location":"contribute/unish/","title":"Unish","text":"<p>Drush's test suite (aka Unish) is based on PHPUnit. In order to maintain high quality, our tests are run on every push. See CircleCi.</p>"},{"location":"contribute/unish/#usage","title":"Usage","text":"<ol> <li><code>git clone https://github.com/drush-ops/drush.git</code></li> <li><code>cd drush</code></li> <li><code>composer install</code></li> <li>Review the configuration settings in tests/phpunit.xml.dist. If customization is needed, copy phpunit.xml.dist to phpunit.xml and edit away.</li> <li>Run all test suites: <code>composer test</code></li> </ol>"},{"location":"contribute/unish/#ddev","title":"DDEV","text":"<p> 11.0+</p> <p>Drush's own tests may be run within provided Docker containers via DDEV</p> <ul> <li>Start containers: <code>ddev start</code></li> <li>Run a test: <code>ddev exec drupal composer functional -- --filter testUserRole</code></li> <li>See the DDEV's XDebug docs for help on enabling Xdebug.</li> </ul>"},{"location":"contribute/unish/#advanced-usage","title":"Advanced usage","text":"<ul> <li>Run only one test suite<ul> <li><code>composer unit</code></li> <li><code>composer integration</code></li> <li><code>composer functional</code></li> </ul> </li> <li>Run only tests matching a regex: <code>composer functional -- --filter testUserRole</code></li> <li>Skip slow tests (usually those with network usage): <code>composer functional -- --exclude-group slow</code></li> <li>XML results: <code>composer functional -- --log-junit results.xml</code></li> <li>Ad-hoc testing with the SUT<ul> <li><code>composer sut:si</code>. See composer.json for details.</li> <li><code>UNISH_DIRTY=1 composer functional -- --filter testUserRole</code></li> <li><code>./drush @sut.dev status</code></li> </ul> </li> </ul>"},{"location":"contribute/unish/#about-the-test-suites","title":"About the Test Suites","text":"<ul> <li>Unit tests operate on functions that take values and return results without creating side effects. No database connection is required to run these tests, and no Drupal site is set up.</li> <li>Integration tests set up a test dependency injection container and operate by calling the Symfony Application APIs directly. A Drupal site called the System Under Test is set up and used for the tests. The SUT is set up and installed only once, and then is re-used for all tests. Integration tests therefore cannot make destructive changes to the SUT database. Also, Drupal is bootstrapped only once (always using the standard Drupal kernel, never the install or update kernel). This means that all commands run at <code>@bootstrap full</code>, and it is not possible to test loading different Drush configuration files and so on. It is not possible to test argument / option parsing. The shutdown and error handlers are not installed, so PHP deprecation warnings will be evidenced in the integration tests.</li> <li>Functional tests operate by <code>exec</code>ing the Drush executable. All functional tests therefore run in their own separate processes. The Drupal System Under Test is set up every time it is needed by any functional test. It is therefore okay if a functional test changes the state of the SUT. The codebase is re-used, so no destructive changes should be made to the code.</li> </ul>"},{"location":"contribute/unish/#drush-test-traits","title":"Drush Test Traits","text":"<p>Drush provides test traits that may be used to test your own Drush extensions. Adding the traits varies slightly depending how you package your Drush extension.</p> <ul> <li>An extension that ships inside a contributed module - DevelCommandsTest for an example. More examples are SchedulerDrushTest and Views Bulk Operations. Remember to add <code>drush/drush</code> to your module's composer.json (<code>require-dev</code> section).</li> <li>A standalone Drush extension or one that ships outside of a module - example drush extension</li> </ul> <p>Once you successfully have <code>use Drush\\TestTraits\\DrushTestTrait</code> in your test class, you are able to write simple tests that call your extension's commands and makes assertions against the output. <pre><code>    public function testMyCommand()\n    {\n        $this-&gt;drush('my:command', ['param'], ['flag' =&gt; 'value']);\n        $this-&gt;assertOutputEquals('The parameter is \"param\" and the \"flag\" option is \"value\"');\n    }\n</code></pre></p>"},{"location":"examples/ArtCommands.php/","title":"ArtCommands.php","text":"<pre><code>&lt;?php\n\nnamespace Drush\\Commands;\n\nuse Consolidation\\AnnotatedCommand\\AnnotationData;\nuse Consolidation\\AnnotatedCommand\\CommandData;\nuse Consolidation\\AnnotatedCommand\\Events\\CustomEventAwareInterface;\nuse Consolidation\\AnnotatedCommand\\Events\\CustomEventAwareTrait;\nuse Consolidation\\AnnotatedCommand\\Hooks\\HookManager;\nuse Consolidation\\OutputFormatters\\StructuredData\\RowsOfFields;\nuse Drush\\Attributes as CLI;\nuse Symfony\\Component\\Console\\Input\\InputInterface;\nuse Symfony\\Component\\Console\\Output\\OutputInterface;\n\n/**\n * Run these commands using the --include option - e.g. `drush --include=/path/to/drush/examples art sandwich`\n *\n * See [Drush Test Traits](https://github.com/drush-ops/drush/blob/13.x/docs/contribute/unish.md#about-the-test-suites) for info on testing Drush commands.\n */\n\nclass ArtCommands extends DrushCommands implements CustomEventAwareInterface\n{\n    use CustomEventAwareTrait;\n\n    /** @var string[] */\n    protected ?array $arts;\n\n    /**\n     * Show a fabulous picture.\n     */\n    #[CLI\\Command(name: 'artwork:show', aliases: ['arts'])]\n    #[CLI\\Argument(name: 'art', description: 'The name of the art to display')]\n    #[CLI\\Usage(name: 'drush art sandwich', description: 'Show a marvelous picture of a sandwich with pickles.')]\n    public function art($art = '')\n    {\n        $data = $this-&gt;getArt();\n        $name = $data[$art]['name'];\n        $description = $data[$art]['description'];\n        $path = $data[$art]['path'];\n        $msg = dt(\n            'Okay. Here is {art}: {description}',\n            ['art' =&gt; $name, 'description' =&gt; $description]\n        );\n        $this-&gt;output()-&gt;writeln(\"\\n\" . $msg . \"\\n\");\n        $this-&gt;printFile($path);\n    }\n\n    /**\n     * Show a table of information about available art.\n     */\n    #[CLI\\Command(name: 'artwork:list', aliases: ['artls'])]\n    #[CLI\\FieldLabels(labels: ['name' =&gt; 'Name', 'description' =&gt; 'Description', 'path' =&gt; 'Path'])]\n    #[CLI\\DefaultTableFields(fields: ['name', 'description'])]\n    #[CLI\\FilterDefaultField(field: 'name')]\n    public function listArt($options = ['format' =&gt; 'table']): RowsOfFields\n    {\n        $data = $this-&gt;getArt();\n        return new RowsOfFields($data);\n    }\n\n    /**\n     * Commandfiles may also add topics.  These will appear in\n     * the list of topics when `drush topic` is executed.\n     * To view the topic below, run `drush --include=/full/path/to/examples topic`\n     */\n\n    /**\n     * Ruminations on the true meaning and philosophy of artwork.\n     */\n    #[CLI\\Command(name: 'artwork:explain')]\n    #[CLI\\Topics(isTopic: true, path: __DIR__ . '/art-topic.md')]\n    #[CLI\\Help(hidden: true)]\n    public function ruminate(): void\n    {\n        self::printFile($this-&gt;commandData);\n    }\n\n    /**\n     * Return the available built-in art. Any Drush commandfile may provide\n     * more art by implementing a 'drush-art' on-event hook. This on-event\n     * hook is defined in the 'findArt' method below.\n     */\n    #[CLI\\Hook(type: HookManager::ON_EVENT, target: 'drush-art')]\n    public function builtInArt()\n    {\n        return [\n            'drush' =&gt; [\n                'name' =&gt; 'Drush',\n                'description' =&gt; 'The Drush logo.',\n                'path' =&gt; __DIR__ . '/art/drush-nocolor.txt',\n            ],\n            'sandwich' =&gt; [\n                'name' =&gt; 'Sandwich',\n                'description' =&gt; 'A tasty meal with bread often consumed at lunchtime.',\n                'path' =&gt; __DIR__ . '/art/sandwich-nocolor.txt',\n            ],\n        ];\n    }\n\n    #[CLI\\Hook(type: HookManager::INTERACT, target: 'artwork:show')]\n    public function interact(InputInterface $input, OutputInterface $output, AnnotationData $annotationData)\n    {\n        // If the user did not specify any artwork, then prompt for one.\n        $art = $input-&gt;getArgument('art');\n        if (empty($art)) {\n            $data = $this-&gt;getArt();\n            $selections = $this-&gt;convertArtListToKeyValue($data);\n            $selection = $this-&gt;io()-&gt;select('Select art to display', $selections);\n            $input-&gt;setArgument('art', $selection);\n        }\n    }\n\n    #[CLI\\Hook(type: HookManager::ARGUMENT_VALIDATOR, target: 'artwork:show')]\n    public function artValidate(CommandData $commandData)\n    {\n        $art = $commandData-&gt;input()-&gt;getArgument('art');\n        $data = $this-&gt;getArt();\n        if (!isset($data[$art])) {\n            throw new \\Exception(dt('I do not have any art called \"{name}\".', ['name' =&gt; $art]));\n        }\n    }\n\n    /**\n     * Get a list of available artwork. Cache result for future fast access.\n     */\n    protected function getArt(): array\n    {\n        if (!isset($this-&gt;arts)) {\n            $this-&gt;arts = $this-&gt;findArt();\n        }\n        return $this-&gt;arts;\n    }\n\n    /**\n     * Use custom defined on-event hook 'drush-art' to find available artwork.\n     */\n    protected function findArt()\n    {\n        $arts = [];\n        $handlers = $this-&gt;getCustomEventHandlers('drush-art');\n        foreach ($handlers as $handler) {\n            $handlerResult = $handler();\n            $arts = array_merge($arts, $handlerResult);\n        }\n        return $arts;\n    }\n\n    /**\n     * Given a list of artwork, convert to a 'key' =&gt; 'Name: Description' array.\n     */\n    protected function convertArtListToKeyValue(array $data): array\n    {\n        $result = [];\n        foreach ($data as $key =&gt; $item) {\n            $result[$key] = $item['name'] . ': ' . $item['description'];\n        }\n        return $result;\n    }\n}\n</code></pre>"},{"location":"examples/PolicyCommands.php/","title":"PolicyCommands.php","text":"<pre><code>&lt;?php\n\nnamespace Drush\\Commands;\n\nuse Consolidation\\AnnotatedCommand\\CommandData;\nuse Consolidation\\AnnotatedCommand\\Hooks\\HookManager;\nuse Drush\\Attributes as CLI;\nuse Drush\\Commands\\core\\RsyncCommands;\nuse Drush\\Commands\\core\\UpdateDBCommands;\nuse Drush\\Commands\\sql\\SqlSyncCommands;\n\n/**\n * Load this commandfile using the --include option - e.g. `drush --include=/path/to/drush/examples`\n *\n * See [Drush Test Traits](https://github.com/drush-ops/drush/blob/13.x/docs/contribute/unish.md#about-the-test-suites) for info on testing Drush commands.\n */\n\nclass PolicyCommands extends DrushCommands\n{\n    /**\n     * Prevent catastrophic braino. Note that this file has to be local to the\n     * machine that initiates the sql:sync command.\n     *\n     * @throws \\Exception\n     */\n    #[CLI\\Hook(type: HookManager::ARGUMENT_VALIDATOR, target: SqlSyncCommands::SYNC)]\n    public function sqlSyncValidate(CommandData $commandData)\n    {\n        if ($commandData-&gt;input()-&gt;getArgument('target') == '@prod') {\n            throw new \\Exception(dt('Per !file, you may never overwrite the production database.', ['!file' =&gt; __FILE__]));\n        }\n    }\n\n    /**\n     * Limit rsync operations to production site.\n     */\n    #[CLI\\Hook(type: HookManager::ARGUMENT_VALIDATOR, target: RsyncCommands::RSYNC)]\n    public function rsyncValidate(CommandData $commandData)\n    {\n        if (preg_match(\"/^@prod/\", $commandData-&gt;input()-&gt;getArgument('target'))) {\n            throw new \\Exception(dt('Per !file, you may never rsync to the production site.', ['!file' =&gt; __FILE__]));\n        }\n    }\n\n    /**\n     * Unauthorized may not execute updates.\n     */\n    #[CLI\\Hook(type: HookManager::ARGUMENT_VALIDATOR, target: UpdateDBCommands::UPDATEDB)]\n    public function validateUpdateDb(CommandData $commandData)\n    {\n        if (!$commandData-&gt;input()-&gt;getOption('secret') == 'mysecret') {\n            throw new \\Exception(dt('UpdateDb command requires a secret token per site policy.'));\n        }\n    }\n\n    #[CLI\\Hook(type: HookManager::OPTION_HOOK, target: UpdateDBCommands::UPDATEDB)]\n    #[CLI\\Option(name: 'secret', description: 'A required token else user may not run updatedb command.')]\n    public function optionsetUpdateDb($options = ['secret' =&gt; self::REQ])\n    {\n    }\n}\n</code></pre>"},{"location":"examples/SiteAliasAlterCommands.php/","title":"SiteAliasAlterCommands.php","text":"<pre><code>&lt;?php\n\nnamespace Drush\\Commands;\n\nuse Consolidation\\AnnotatedCommand\\AnnotationData;\nuse Consolidation\\AnnotatedCommand\\Hooks\\HookManager;\nuse Consolidation\\SiteAlias\\SiteAliasManagerInterface;\nuse Drush\\Attributes as CLI;\nuse Drush\\Boot\\DrupalBootLevels;\nuse Symfony\\Component\\Console\\Input\\InputInterface;\n\n/**\n * Load this example by using the --include option - e.g. `drush --include=/path/to/drush/examples`\n */\n#[CLI\\Bootstrap(DrupalBootLevels::NONE)]\nclass SiteAliasAlterCommands extends DrushCommands\n{\n    use AutowireTrait;\n\n    public function __construct(\n        private readonly SiteAliasManagerInterface $siteAliasManager\n    ) {\n        parent::__construct();\n    }\n\n    /**\n     * A few example alterations to site aliases.\n     */\n    #[CLI\\Hook(type: HookManager::PRE_INITIALIZE, target: '*')]\n    public function alter(InputInterface $input, AnnotationData $annotationData)\n    {\n        $self = $this-&gt;siteAliasManager-&gt;getSelf();\n        if ($self-&gt;isRemote()) {\n            // Always pass along ssh keys.\n            if (!$self-&gt;has('ssh.options')) {\n                // Don't edit the alias - edit the general config service instead.\n                $this-&gt;getConfig()-&gt;set('ssh.options', '-o ForwardAgent=yes');\n            }\n\n            // Change the SSH user.\n            $input-&gt;setOption('remote-user', 'mw2');\n\n            // Test to see if specific environment really exists in wildcard\n            // aliases, but only if the target is a specific host.\n            $host = $self-&gt;get('host');\n            if (preg_match('#\\.myserver.com$#', $host)) {\n                $ip = gethostbyname($host);\n                // If the return value of gethostbyname equals its input parameter,\n                // that indicates failure.\n                if ($host == $ip) {\n                    $aliasName = $self-&gt;name();\n                    throw new \\Exception(\"The alias $aliasName refers to an environment that does not exist.\");\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"examples/SyncViaHttpCommands.php/","title":"SyncViaHttpCommands.php","text":"<pre><code>&lt;?php\n\nnamespace Drush\\Commands;\n\nuse Consolidation\\AnnotatedCommand\\CommandData;\nuse Consolidation\\AnnotatedCommand\\Hooks\\HookManager;\nuse Drush\\Attributes as CLI;\nuse Drush\\Commands\\DrushCommands;\nuse Drush\\Commands\\sql\\SqlSyncCommands;\nuse Drush\\Drush;\nuse Drush\\Exec\\ExecTrait;\nuse Symfony\\Component\\Filesystem\\Filesystem;\n\n/**\n * Load this commandfile using the --include option - e.g. `drush --include=/path/to/drush/examples`\n */\n\nclass SyncViaHttpCommands extends DrushCommands\n{\n  /**\n   * When a hook extends a command with additional options, it must\n   * implement declare those option(s) in a @hook option like this one.  Doing so will add\n   * the option to the help text for the modified command, and will also\n   * allow the new option to be specified on the command line.  Without\n   * this, Drush will fail with an error when a user attempts to use\n   * an unknown option.\n   */\n    #[CLI\\Hook(type: HookManager::OPTION_HOOK, target: SqlSyncCommands::SYNC)]\n    #[CLI\\Option(name: 'http-sync', description: 'Copy the database via http instead of rsync.  Value is the url that the existing database dump can be found at.')]\n    #[CLI\\Option(name: 'http-sync-user', description: 'Username for the protected directory containing the sql dump.')]\n    #[CLI\\Option(name: 'http-sync-password', description: 'Password for the same directory.')]\n    public function optionsetSqlSync()\n    {\n    }\n\n    /**\n     * During the pre hook, determine if the http-sync option has been\n     * specified.  If it has been, then disable the normal ssh + rsync\n     * dump-and-transfer that sql-sync usually does, and transfer the\n     * database dump via an http download.\n     */\n    #[CLI\\Hook(type: HookManager::PRE_COMMAND_HOOK, target: SqlSyncCommands::SYNC)]\n    public function preSqlSync(CommandData $commandData)\n    {\n        $sql_dump_download_url = $commandData-&gt;input()-&gt;getOption('http-sync');\n        if (!empty($sql_dump_download_url)) {\n            $user = $commandData-&gt;input()-&gt;getOption('http-sync-user');\n            $password = $commandData-&gt;input()-&gt;getOption('http-sync-password');\n            $source_dump_file = $this-&gt;downloadFile($sql_dump_download_url, $user, $password);\n            $commandData-&gt;input()-&gt;setOption('target-dump', $source_dump_file);\n            $commandData-&gt;input()-&gt;setOption('no-dump', true);\n            $commandData-&gt;input()-&gt;setOption('no-sync', true);\n        }\n    }\n\n    /**\n     * Downloads a file.\n     *\n     * Optionally uses user authentication, using either wget or curl, as available.\n     */\n    protected function downloadFile($url, $user = false, $password = false, $destination = false, $overwrite = true)\n    {\n        static $use_wget;\n        if ($use_wget === null) {\n            $use_wget = ExecTrait::programExists('wget');\n        }\n\n        $destination_tmp = drush_tempnam('download_file');\n        if ($use_wget) {\n            $args = ['wget', '-q', '--timeout=30'];\n            if ($user &amp;&amp; $password) {\n                $args = array_merge($args, [\"--user=$user\", \"--password=$password\", '-O', $destination_tmp, $url]);\n            } else {\n                $args = array_merge($args, ['-O', $destination_tmp, $url]);\n            }\n        } else {\n            $args = ['curl', '-s', '-L', '--connect-timeout 30'];\n            if ($user &amp;&amp; $password) {\n                $args = array_merge($args, ['--user', \"$user:$password\", '-o', $destination_tmp, $url]);\n            } else {\n                $args = array_merge($args, ['-o', $destination_tmp, $url]);\n            }\n        }\n        $process = Drush::process($args);\n        $process-&gt;mustRun();\n\n        if (!Drush::simulate()) {\n            if (!drush_file_not_empty($destination_tmp) &amp;&amp; $file = @file_get_contents($url)) {\n                @file_put_contents($destination_tmp, $file);\n            }\n            if (!drush_file_not_empty($destination_tmp)) {\n                // Download failed.\n                throw new \\Exception(dt(\"The URL !url could not be downloaded.\", ['!url' =&gt; $url]));\n            }\n        }\n        if ($destination) {\n            $fs = new Filesystem();\n            $fs-&gt;rename($destination_tmp, $destination, $overwrite);\n            return $destination;\n        }\n        return $destination_tmp;\n    }\n}\n</code></pre>"},{"location":"examples/XkcdCommands.php/","title":"XkcdCommands.php","text":"<pre><code>&lt;?php\n\nnamespace Drush\\Commands;\n\nuse Drush\\Attributes as CLI;\nuse Drush\\Exec\\ExecTrait;\n\n/**\n * Run these commands using the --include option - e.g. `drush --include=/path/to/drush/examples xkcd`\n *\n * For an example of a Drush extension with tests for Drush:\n * - https://github.com/drush-ops/example-drush-extension\n */\n\nclass XkcdCommands extends DrushCommands\n{\n    use ExecTrait;\n\n    /**\n     * Retrieve and display xkcd cartoons.\n     */\n    #[CLI\\Command(name: 'xkcd:fetch', aliases: ['xkcd'])]\n    #[CLI\\Option(name: 'search', description: 'Optional argument to retrieve the cartoons matching an index number, keyword search or \"random\". If omitted the latest cartoon will be retrieved.')]\n    #[CLI\\Option(name: 'image-viewer', description: 'Command to use to view images (e.g. xv, firefox). Defaults to \"display\" (from ImageMagick).')]\n    #[CLI\\Option(name: 'google-custom-search-api-key', description: 'Google Custom Search API Key, available from https://code.google.com/apis/console/. Default key limited to 100 queries/day globally.')]\n    #[CLI\\Usage(name: 'drush xkcd', description: 'Retrieve and display the latest cartoon.')]\n    #[CLI\\Usage(name: 'drush xkcd sandwich', description: 'Retrieve and display cartoons about sandwiches.')]\n    #[CLI\\Usage(name: 'drush xkcd 123 --image-viewer=eog', description: 'Retrieve and display cartoon #123 in eog.')]\n    #[CLI\\Usage(name: 'drush xkcd random --image-viewer=firefox', description: 'Retrieve and display a random cartoon in Firefox.')]\n    public function fetch($search = null, $options = ['image-viewer' =&gt; 'open', 'google-custom-search-api-key' =&gt; 'AIzaSyDpE01VDNNT73s6CEeJRdSg5jukoG244ek'])\n    {\n        $this-&gt;doFetch($search, $options);\n    }\n\n    /**\n     * @param $search\n     * @param array $options\n     * @throws \\Exception\n     */\n    protected function doFetch($search, array $options): void\n    {\n        if (empty($search)) {\n            $this-&gt;startBrowser('http://xkcd.com');\n        } elseif (is_numeric($search)) {\n            $this-&gt;startBrowser('http://xkcd.com/' . $search);\n        } elseif ($search == 'random') {\n            $xkcd_response = @json_decode(file_get_contents('http://xkcd.com/info.0.json'));\n            if (!empty($xkcd_response-&gt;num)) {\n                $this-&gt;startBrowser('http://xkcd.com/' . rand(1, $xkcd_response-&gt;num));\n            }\n        } else {\n            // This uses an API key with a limited number of searches per.\n            $search_response = @json_decode(file_get_contents('https://www.googleapis.com/customsearch/v1?key=' . $options['google-custom-search-api-key'] . '&amp;cx=012652707207066138651:zudjtuwe28q&amp;q=' . $search));\n            if (!empty($search_response-&gt;items)) {\n                foreach ($search_response-&gt;items as $item) {\n                    $this-&gt;startBrowser($item-&gt;link);\n                }\n            } else {\n                throw new \\Exception(dt('The search failed or produced no results.'));\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"examples/example.drush.yml/","title":"drush.yml","text":"<pre><code>#\n# A minimalist Drush config file.\n# See https://www.drush.org/latest/using-drush-configuration/ for lots more documentation.\n#\n\n# Preflight configuration.\ndrush:\ninclude:\n- '${env.HOME}/.drush/commands'\n- /usr/share/drush/commands\npaths:\nconfig:\n# Load additional config files. Is silently skipped if not found. Filename must be drush.yml\n- ${env.HOME}/.drush/config/drush.yml\nalias-path:\n- '${env.HOME}/.drush/sites'\n- /etc/drush/sites\n\n# Global options.\noptions:\n# Specify the base_url that should be used when generating links.\n# uri: 'http://example.com/subdir'\n\n# Command-specific options.\ncommand:\nsql:\ndump:\noptions:\n# Uncomment to omit cache and similar tables (including during a sql:sync).\n#       structure-tables-key: common\n\n# Non-options.\nssh:\n# Specify options to pass to ssh.  The default is to prohibit\n# password authentication, and is included here, so you may add additional\n# parameters without losing the default configuration.\noptions: '-o PasswordAuthentication=no'\n# This string is valid for Bash shell. Override in case you need something different. See https://github.com/drush-ops/drush/issues/3816.\npipefail: 'set -o pipefail; '\n</code></pre>"},{"location":"examples/example.prompt.sh/","title":"prompt.sh","text":"<pre><code># -*- mode: shell-script; mode: flyspell-prog; ispell-local-dictionary: \"american\" -*-\n#\n# Example PS1 prompt.\n#\n# Note: This file does a lot, and is designed for Bash. If you want to show the\n# currently set alias in your prompt, use the first 2 values below as an example.\n\n# This section can be used for the POWERLEVEL9K theme for Oh My Zsh.\n#FILE=\"${TMPDIR:-/tmp/}/drush-env-${USER}/drush-drupal-site-$$\"\n#POWERLEVEL9K_CUSTOM_DRUSH=\"[ -r $FILE ] &amp;&amp; cat $FILE\"\n#POWERLEVEL9K_CUSTOM_DRUSH_BACKGROUND=\"green\"\n#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs custom_drush)\n\n#\n# Note that your Bash session must already have the __git_ps1 function available.\n# Typically this is provided by git-prompt.sh, see instructions for downloading\n# and including this file here:\n# https://github.com/git/git/blob/10.x/contrib/completion/git-prompt.sh\n#\n# Features:\n#\n# Displays Git repository and Drush alias status in your prompt.\n\n__drush_ps1() {\nf=\"${TMPDIR:-/tmp/}/drush-env-${USER}/drush-drupal-site-$$\"\nif [ -f $f ]\nthen\n__DRUPAL_SITE=$(cat \"$f\")\nelse\n__DRUPAL_SITE=\"$DRUPAL_SITE\"\nfi\n\n# Set DRUSH_PS1_SHOWCOLORHINTS to a non-empty value and define a\n# __drush_ps1_colorize_alias() function for color hints in your Drush PS1\n# prompt. See example.prompt.sh for an example implementation.\nif [ -n \"${__DRUPAL_SITE-}\" ] &amp;&amp; [ -n \"${DRUSH_PS1_SHOWCOLORHINTS-}\" ]; then\n__drush_ps1_colorize_alias\n  fi\n\n[[ -n \"$__DRUPAL_SITE\" ]] &amp;&amp; printf \"${1:- (%s)}\" \"$__DRUPAL_SITE\"\n}\n\nif [ -n \"$(type -t __git_ps1)\" ] &amp;&amp; [ \"$(type -t __git_ps1)\" = function ] &amp;&amp; [ \"$(type -t __drush_ps1)\" ] &amp;&amp; [ \"$(type -t __drush_ps1)\" = function ]; then\n\n# This line enables color hints in your Drush prompt. Modify the below\n# __drush_ps1_colorize_alias() to customize your color theme.\nDRUSH_PS1_SHOWCOLORHINTS=true\n\n# Git offers various prompt customization options as well as seen in\n# https://github.com/git/git/blob/10.x/contrib/completion/git-prompt.sh.\n# Adjust the following lines to enable the corresponding features:\n#\nGIT_PS1_SHOWDIRTYSTATE=true\nGIT_PS1_SHOWUPSTREAM=auto\n  # GIT_PS1_SHOWSTASHSTATE=true\n# GIT_PS1_SHOWUNTRACKEDFILES=true\nGIT_PS1_SHOWCOLORHINTS=true\n\n# The following line sets your bash prompt according to this example:\n#\n#   username@hostname ~/working-directory (git-branch)[@drush-alias] $\n#\n# See http://ss64.com/bash/syntax-prompt.html for customization options.\nexport PROMPT_COMMAND='__git_ps1 \"\\u@\\h \\w\" \"$(__drush_ps1 \"[%s]\") \\\\\\$ \"'\n\n# PROMPT_COMMAND is used in the example above rather than PS1 because neither\n# Git nor Drush color hints are compatible with PS1. If you don't want color\n# hints, however, and prefer to use PS1, you can still do so by commenting out\n# the PROMPT_COMMAND line above and uncommenting the PS1 line below:\n#\n# export PS1='\\u@\\h \\w$(__git_ps1 \" (%s)\")$(__drush_ps1 \"[%s]\")\\$ '\n\n__drush_ps1_colorize_alias() {\nif [[ -n ${ZSH_VERSION-} ]]; then\nlocal COLOR_BLUE='%F{blue}'\nlocal COLOR_CYAN='%F{cyan}'\nlocal COLOR_GREEN='%F{green}'\nlocal COLOR_MAGENTA='%F{magenta}'\nlocal COLOR_RED='%F{red}'\nlocal COLOR_WHITE='%F{white}'\nlocal COLOR_YELLOW='%F{yellow}'\nlocal COLOR_NONE='%f'\nelse\n# Using \\[ and \\] around colors is necessary to prevent issues with\n# command line editing/browsing/completion.\nlocal COLOR_BLUE='\\[\\e[94m\\]'\nlocal COLOR_CYAN='\\[\\e[36m\\]'\nlocal COLOR_GREEN='\\[\\e[32m\\]'\nlocal COLOR_MAGENTA='\\[\\e[35m\\]'\nlocal COLOR_RED='\\[\\e[91m\\]'\nlocal COLOR_WHITE='\\[\\e[37m\\]'\nlocal COLOR_YELLOW='\\[\\e[93m\\]'\nlocal COLOR_NONE='\\[\\e[0m\\]'\nfi\n\n# Customize your color theme below.\ncase \"$__DRUPAL_SITE\" in\n*.live|*.prod) local ENV_COLOR=\"$COLOR_RED\" ;;\n*.stage|*.test) local ENV_COLOR=\"$COLOR_YELLOW\" ;;\n*.local) local ENV_COLOR=\"$COLOR_GREEN\" ;;\n*) local ENV_COLOR=\"$COLOR_BLUE\" ;;\nesac\n\n__DRUPAL_SITE=\"${ENV_COLOR}${__DRUPAL_SITE}${COLOR_NONE}\"\n}\n\nfi\n</code></pre>"},{"location":"examples/example.site.yml/","title":"site.yml","text":"<pre><code>#\n# A minimalist Drush site alias file.\n# See https://www.drush.org/latest/site-aliases/ for lots more documentation.\n#\n# File: self.site.yml\nlive:\nhost: www.domain.com\nuser: www-admin\nroot: /other/path/to/drupal\nuri: http://www.example.com\nssh:\noptions: '-p 100'\npaths:\ndrush-script: '/path/to/drush'\nenv-vars:\nPATH: /bin:/usr/bin:/home/www-admin/.composer/vendor/bin\nDRUPAL_ENV: live\ncommand:\nsite:\ninstall:\noptions:\nadmin-password: 'secret-secret'\nstage:\nhost: stage.domain.com\nuser: www-admin\nroot: /other/path/to/drupal\nuri: http://stage.example.com\n</code></pre>"},{"location":"examples/git-bisect.example.sh/","title":"git-bisect.sh","text":"<pre><code>#!/usr/bin/env sh\n\n#\n# Git bisect is a helpful way to discover which commit an error\n# occurred in.  This example file gives simple instructions for\n# using git bisect with Drush to quickly find erroneous commits\n# in Drush commands or Drupal modules, presuming that you can\n# trigger the error condition via Drush (e.g. using `drush php-eval`).\n#\n# Follow these simple steps:\n#\n#   $ git bisect start\n#   $ git bisect bad              # Tell git that the current commit does not work\n#   $ git bisect good bcadd5a     # Tell drush that the commithash 12345 worked fine\n#   $ git bisect run mytestscript.sh\n#\n# 'git bisect run' will continue to call 'git bisect good' and 'git bisect bad',\n# based on whether the script's exit code was 0 or 1, respectively.\n#\n# Replace 'mytestscript.sh' in the example above with a custom script that you\n# write yourself.  Use the example script at the end of this document as a\n# guide.  Replace the example command with one that calls the Drush command\n# that you would like to test, and replace the 'grep' string with a value\n# that appears when the error exists in the commit, but does not appear when\n# commit is okay.\n#\n# If you are using Drush to test Drupal or an external Drush module, use:\n#\n#   $ git bisect run drush mycommand --strict=2\n#\n# This presumes that there is one or more '[warning]' or '[error]'\n# messages emitted when there is a problem, and no warnings or errors\n# when the commit is okay.  Omit '--strict=2' to ignore warnings, and\n# signal failure only when 'error' messages are emitted.\n#\n# If you need to test for an error condition explicitly, to find errors\n# that do not return any warning or error log messages on their own, you\n# can use the Drush php-eval command to force an error when `myfunction()`\n# returns FALSE. Replace 'myfunction()' with the name of an appropriate\n# function in your module that can be used to detect the error condition\n# you are looking for.\n#\n#   $ git bisect run drush ev 'if(!myfunction()) { return drush_set_error(\"ERR\"); }'\n#\ndrush mycommand --myoption 2&gt;&amp;1 | grep -q 'string that indicates there was a problem'\nif [ $? == 0 ] ; then\nexit 1\nelse\nexit 0\nfi\n</code></pre>"},{"location":"examples/helloworld.script/","title":"Helloworld.script","text":"<pre><code>&lt;?php\n\n//\n// This example demonstrates how to write a drush\n// script. These scripts are run with the php:script command.\n//\nuse Drush\\Drush;\n\n$this-&gt;output()-&gt;writeln(\"Hello world!\");\n$this-&gt;output()-&gt;writeln(\"The extra options/arguments to this command were:\");\n$this-&gt;output()-&gt;writeln(print_r($extra, true));\n\n//\n// We can check which site was bootstrapped via\n// the '@self' alias, which is defined only if\n// there is a bootstrapped site.\n//\n$self = Drush::aliasManager()-&gt;getSelf();;\nif (!$self-&gt;hasRoot()) {\n  $this-&gt;output()-&gt;writeln('No bootstrapped site.');\n}\nelse {\n  $this-&gt;output()-&gt;writeln('The following site is bootstrapped:');\n  $this-&gt;output()-&gt;writeln(print_r($self-&gt;legacyRecord(), true));\n}\n</code></pre>"},{"location":"generators/all/","title":"All generators","text":"<p>Tip</p> <p>Press the / key to Search for a command. Or use your browser's Find in Page feature.</p> <ul> <li>composer</li> <li>controller</li> <li>field</li> <li>hook</li> <li>install-file</li> <li>javascript</li> <li>layout</li> <li>module</li> <li>phpstorm-meta</li> <li>readme</li> <li>render-element</li> <li>service-provider</li> <li>single-directory-component</li> <li>drush:alias-file</li> <li>drush:command-file</li> <li>drush:generator</li> <li>drush:symfony-command</li> <li>entity:bundle-class</li> <li>entity:configuration</li> <li>entity:content</li> <li>form:config</li> <li>form:confirm</li> <li>form:simple</li> <li>misc:apache-virtual-host</li> <li>misc:nginx-virtual-host</li> <li>plugin:action</li> <li>plugin:block</li> <li>plugin:ckeditor</li> <li>plugin:condition</li> <li>plugin:constraint</li> <li>plugin:entity-reference-selection</li> <li>plugin:field:formatter</li> <li>plugin:field:type</li> <li>plugin:field:widget</li> <li>plugin:filter</li> <li>plugin:manager</li> <li>plugin:menu-link</li> <li>plugin:migrate:destination</li> <li>plugin:migrate:process</li> <li>plugin:migrate:source</li> <li>plugin:queue-worker</li> <li>plugin:rest-resource</li> <li>plugin:views:argument-default</li> <li>plugin:views:field</li> <li>plugin:views:style</li> <li>service:access-checker</li> <li>service:breadcrumb-builder</li> <li>service:cache-context</li> <li>service:custom</li> <li>service:event-subscriber</li> <li>service:logger</li> <li>service:middleware</li> <li>service:param-converter</li> <li>service:path-processor</li> <li>service:request-policy</li> <li>service:response-policy</li> <li>service:route-subscriber</li> <li>service:theme-negotiator</li> <li>service:twig-extension</li> <li>service:uninstall-validator</li> <li>test:browser</li> <li>test:kernel</li> <li>test:nightwatch</li> <li>test:unit</li> <li>test:webdriver</li> <li>theme</li> <li>theme:settings</li> <li>yml:breakpoints</li> <li>yml:links:action</li> <li>yml:links:contextual</li> <li>yml:links:menu</li> <li>yml:links:task</li> <li>yml:migration</li> <li>yml:module-libraries</li> <li>yml:permissions</li> <li>yml:routing</li> <li>yml:services</li> <li>yml:theme-libraries</li> </ul>"},{"location":"generators/composer/","title":"composer","text":"<p>Generates a composer.json file</p>"},{"location":"generators/composer/#examples","title":"Examples","text":"<ul> <li><code>drush generate composer</code>. Generates a composer.json file</li> </ul>"},{"location":"generators/composer/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/composer/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/composer/#aliases","title":"Aliases","text":"<ul> <li>composer.json</li> </ul>"},{"location":"generators/controller/","title":"controller","text":"<p>Generates a controller</p>"},{"location":"generators/controller/#examples","title":"Examples","text":"<ul> <li><code>drush generate controller</code>. Generates a controller</li> </ul>"},{"location":"generators/controller/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/controller/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/drush_alias-file/","title":"drush:alias-file","text":"<p>Generates a Drush site alias file.</p>"},{"location":"generators/drush_alias-file/#examples","title":"Examples","text":"<ul> <li><code>drush generate drush:alias-file</code>. Generates a Drush site alias file.</li> </ul>"},{"location":"generators/drush_alias-file/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/drush_alias-file/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/drush_alias-file/#aliases","title":"Aliases","text":"<ul> <li>daf</li> </ul>"},{"location":"generators/drush_command-file/","title":"drush:command-file","text":"<p>Generates a Drush command file.</p>"},{"location":"generators/drush_command-file/#examples","title":"Examples","text":"<ul> <li><code>drush generate drush:command-file</code>. Generates a Drush command file.</li> </ul>"},{"location":"generators/drush_command-file/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/drush_command-file/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/drush_command-file/#aliases","title":"Aliases","text":"<ul> <li>dcf</li> </ul>"},{"location":"generators/drush_generator/","title":"drush:generator","text":"<p>Generates a Drush generator.</p>"},{"location":"generators/drush_generator/#examples","title":"Examples","text":"<ul> <li><code>drush generate drush:generator</code>. Generates a Drush generator.</li> </ul>"},{"location":"generators/drush_generator/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/drush_generator/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/drush_generator/#aliases","title":"Aliases","text":"<ul> <li>dg</li> </ul>"},{"location":"generators/drush_symfony-command/","title":"drush:symfony-command","text":"<p>Generates Symfony console command</p>"},{"location":"generators/drush_symfony-command/#examples","title":"Examples","text":"<ul> <li><code>drush generate drush:symfony-command</code>. Generates Symfony console command</li> </ul>"},{"location":"generators/drush_symfony-command/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/drush_symfony-command/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/drush_symfony-command/#aliases","title":"Aliases","text":"<ul> <li>symfony-command</li> </ul>"},{"location":"generators/entity_bundle-class/","title":"entity:bundle-class","text":"<p> 11.0+</p> <p>Generate a bundle class for a content entity.</p>"},{"location":"generators/entity_bundle-class/#examples","title":"Examples","text":"<ul> <li><code>drush generate entity:bundle-class</code>. Generate a bundle class for a content entity.</li> </ul>"},{"location":"generators/entity_bundle-class/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/entity_bundle-class/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/entity_bundle-class/#aliases","title":"Aliases","text":"<ul> <li>bundle-class</li> </ul>"},{"location":"generators/entity_configuration/","title":"entity:configuration","text":"<p>Generates configuration entity</p>"},{"location":"generators/entity_configuration/#examples","title":"Examples","text":"<ul> <li><code>drush generate entity:configuration</code>. Generates configuration entity</li> </ul>"},{"location":"generators/entity_configuration/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/entity_configuration/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/entity_configuration/#aliases","title":"Aliases","text":"<ul> <li>config-entity</li> </ul>"},{"location":"generators/entity_content/","title":"entity:content","text":"<p>Generates content entity</p>"},{"location":"generators/entity_content/#examples","title":"Examples","text":"<ul> <li><code>drush generate entity:content</code>. Generates content entity</li> </ul>"},{"location":"generators/entity_content/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/entity_content/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/entity_content/#aliases","title":"Aliases","text":"<ul> <li>content-entity</li> </ul>"},{"location":"generators/field/","title":"field","text":"<p>Generates a field</p>"},{"location":"generators/field/#examples","title":"Examples","text":"<ul> <li><code>drush generate field</code>. Generates a field</li> </ul>"},{"location":"generators/field/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/field/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/form_config/","title":"form:config","text":"<p>Generates a configuration form</p>"},{"location":"generators/form_config/#examples","title":"Examples","text":"<ul> <li><code>drush generate form:config</code>. Generates a configuration form</li> </ul>"},{"location":"generators/form_config/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/form_config/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/form_config/#aliases","title":"Aliases","text":"<ul> <li>config-form</li> </ul>"},{"location":"generators/form_confirm/","title":"form:confirm","text":"<p>Generates a confirmation form</p>"},{"location":"generators/form_confirm/#examples","title":"Examples","text":"<ul> <li><code>drush generate form:confirm</code>. Generates a confirmation form</li> </ul>"},{"location":"generators/form_confirm/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/form_confirm/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/form_confirm/#aliases","title":"Aliases","text":"<ul> <li>confirm-form</li> </ul>"},{"location":"generators/form_simple/","title":"form:simple","text":"<p>Generates simple form</p>"},{"location":"generators/form_simple/#examples","title":"Examples","text":"<ul> <li><code>drush generate form:simple</code>. Generates simple form</li> </ul>"},{"location":"generators/form_simple/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/form_simple/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/form_simple/#aliases","title":"Aliases","text":"<ul> <li>form</li> </ul>"},{"location":"generators/hook/","title":"hook","text":"<p>Generates a hook</p>"},{"location":"generators/hook/#examples","title":"Examples","text":"<ul> <li><code>drush generate hook</code>. Generates a hook</li> </ul>"},{"location":"generators/hook/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/hook/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/install-file/","title":"install-file","text":"<p>Generates an install file</p>"},{"location":"generators/install-file/#examples","title":"Examples","text":"<ul> <li><code>drush generate install-file</code>. Generates an install file</li> </ul>"},{"location":"generators/install-file/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/install-file/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/javascript/","title":"javascript","text":"<p>Generates Drupal JavaScript file</p>"},{"location":"generators/javascript/#examples","title":"Examples","text":"<ul> <li><code>drush generate javascript</code>. Generates Drupal JavaScript file</li> </ul>"},{"location":"generators/javascript/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/javascript/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/layout/","title":"layout","text":"<p>Generates a layout</p>"},{"location":"generators/layout/#examples","title":"Examples","text":"<ul> <li><code>drush generate layout</code>. Generates a layout</li> </ul>"},{"location":"generators/layout/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/layout/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/misc_apache-virtual-host/","title":"misc:apache-virtual-host","text":"<p>Generates an Apache site configuration file</p>"},{"location":"generators/misc_apache-virtual-host/#examples","title":"Examples","text":"<ul> <li><code>drush generate misc:apache-virtual-host</code>. Generates an Apache site configuration file</li> </ul>"},{"location":"generators/misc_apache-virtual-host/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/misc_apache-virtual-host/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/misc_apache-virtual-host/#aliases","title":"Aliases","text":"<ul> <li>apache-virtual-host</li> </ul>"},{"location":"generators/misc_nginx-virtual-host/","title":"misc:nginx-virtual-host","text":"<p>Generates an Nginx site configuration file</p>"},{"location":"generators/misc_nginx-virtual-host/#examples","title":"Examples","text":"<ul> <li><code>drush generate misc:nginx-virtual-host</code>. Generates an Nginx site configuration file</li> </ul>"},{"location":"generators/misc_nginx-virtual-host/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/misc_nginx-virtual-host/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/misc_nginx-virtual-host/#aliases","title":"Aliases","text":"<ul> <li>nginx-virtual-host</li> </ul>"},{"location":"generators/module/","title":"module","text":"<p>Generates Drupal module</p>"},{"location":"generators/module/#examples","title":"Examples","text":"<ul> <li><code>drush generate module</code>. Generates Drupal module</li> </ul>"},{"location":"generators/module/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/module/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/phpstorm-meta/","title":"phpstorm-meta","text":"<p>Generates PhpStorm metadata</p>"},{"location":"generators/phpstorm-meta/#examples","title":"Examples","text":"<ul> <li><code>drush generate phpstorm-meta</code>. Generates PhpStorm metadata</li> </ul>"},{"location":"generators/phpstorm-meta/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/phpstorm-meta/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_action/","title":"plugin:action","text":"<p>Generates action plugin</p>"},{"location":"generators/plugin_action/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:action</code>. Generates action plugin</li> </ul>"},{"location":"generators/plugin_action/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_action/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_action/#aliases","title":"Aliases","text":"<ul> <li>action</li> </ul>"},{"location":"generators/plugin_block/","title":"plugin:block","text":"<p>Generates block plugin</p>"},{"location":"generators/plugin_block/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:block</code>. Generates block plugin</li> </ul>"},{"location":"generators/plugin_block/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_block/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_block/#aliases","title":"Aliases","text":"<ul> <li>block</li> </ul>"},{"location":"generators/plugin_ckeditor/","title":"plugin:ckeditor","text":"<p>Generates CKEditor plugin</p>"},{"location":"generators/plugin_ckeditor/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:ckeditor</code>. Generates CKEditor plugin</li> </ul>"},{"location":"generators/plugin_ckeditor/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_ckeditor/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_ckeditor/#aliases","title":"Aliases","text":"<ul> <li>ckeditor</li> <li>ckeditor-plugin</li> </ul>"},{"location":"generators/plugin_condition/","title":"plugin:condition","text":"<p>Generates condition plugin</p>"},{"location":"generators/plugin_condition/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:condition</code>. Generates condition plugin</li> </ul>"},{"location":"generators/plugin_condition/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_condition/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_condition/#aliases","title":"Aliases","text":"<ul> <li>condition</li> </ul>"},{"location":"generators/plugin_constraint/","title":"plugin:constraint","text":"<p>Generates constraint plugin</p>"},{"location":"generators/plugin_constraint/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:constraint</code>. Generates constraint plugin</li> </ul>"},{"location":"generators/plugin_constraint/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_constraint/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_constraint/#aliases","title":"Aliases","text":"<ul> <li>constraint</li> </ul>"},{"location":"generators/plugin_entity-reference-selection/","title":"plugin:entity-reference-selection","text":"<p>Generates entity reference selection plugin</p>"},{"location":"generators/plugin_entity-reference-selection/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:entity-reference-selection</code>. Generates entity reference selection plugin</li> </ul>"},{"location":"generators/plugin_entity-reference-selection/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_entity-reference-selection/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_entity-reference-selection/#aliases","title":"Aliases","text":"<ul> <li>entity-reference-selection</li> </ul>"},{"location":"generators/plugin_field_formatter/","title":"plugin:field:formatter","text":"<p>Generates field formatter plugin</p>"},{"location":"generators/plugin_field_formatter/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:field:formatter</code>. Generates field formatter plugin</li> </ul>"},{"location":"generators/plugin_field_formatter/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_field_formatter/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_field_formatter/#aliases","title":"Aliases","text":"<ul> <li>field-formatter</li> </ul>"},{"location":"generators/plugin_field_type/","title":"plugin:field:type","text":"<p>Generates field type plugin</p>"},{"location":"generators/plugin_field_type/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:field:type</code>. Generates field type plugin</li> </ul>"},{"location":"generators/plugin_field_type/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_field_type/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_field_type/#aliases","title":"Aliases","text":"<ul> <li>field-type</li> </ul>"},{"location":"generators/plugin_field_widget/","title":"plugin:field:widget","text":"<p>Generates field widget plugin</p>"},{"location":"generators/plugin_field_widget/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:field:widget</code>. Generates field widget plugin</li> </ul>"},{"location":"generators/plugin_field_widget/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_field_widget/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_field_widget/#aliases","title":"Aliases","text":"<ul> <li>field-widget</li> </ul>"},{"location":"generators/plugin_filter/","title":"plugin:filter","text":"<p>Generates filter plugin</p>"},{"location":"generators/plugin_filter/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:filter</code>. Generates filter plugin</li> </ul>"},{"location":"generators/plugin_filter/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_filter/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_filter/#aliases","title":"Aliases","text":"<ul> <li>filter</li> </ul>"},{"location":"generators/plugin_manager/","title":"plugin:manager","text":"<p>Generates plugin manager</p>"},{"location":"generators/plugin_manager/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:manager</code>. Generates plugin manager</li> </ul>"},{"location":"generators/plugin_manager/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_manager/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_manager/#aliases","title":"Aliases","text":"<ul> <li>plugin-manager</li> </ul>"},{"location":"generators/plugin_menu-link/","title":"plugin:menu-link","text":"<p>Generates menu-link plugin</p>"},{"location":"generators/plugin_menu-link/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:menu-link</code>. Generates menu-link plugin</li> </ul>"},{"location":"generators/plugin_menu-link/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_menu-link/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_menu-link/#aliases","title":"Aliases","text":"<ul> <li>menu-link</li> </ul>"},{"location":"generators/plugin_migrate_destination/","title":"plugin:migrate:destination","text":"<p>Generates migrate destination plugin</p>"},{"location":"generators/plugin_migrate_destination/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:migrate:destination</code>. Generates migrate destination plugin</li> </ul>"},{"location":"generators/plugin_migrate_destination/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_migrate_destination/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_migrate_destination/#aliases","title":"Aliases","text":"<ul> <li>migrate-destination</li> </ul>"},{"location":"generators/plugin_migrate_process/","title":"plugin:migrate:process","text":"<p>Generates migrate process plugin</p>"},{"location":"generators/plugin_migrate_process/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:migrate:process</code>. Generates migrate process plugin</li> </ul>"},{"location":"generators/plugin_migrate_process/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_migrate_process/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_migrate_process/#aliases","title":"Aliases","text":"<ul> <li>migrate-process</li> </ul>"},{"location":"generators/plugin_migrate_source/","title":"plugin:migrate:source","text":"<p>Generates migrate source plugin</p>"},{"location":"generators/plugin_migrate_source/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:migrate:source</code>. Generates migrate source plugin</li> </ul>"},{"location":"generators/plugin_migrate_source/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_migrate_source/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_migrate_source/#aliases","title":"Aliases","text":"<ul> <li>migrate-source</li> </ul>"},{"location":"generators/plugin_queue-worker/","title":"plugin:queue-worker","text":"<p>Generates queue worker plugin</p>"},{"location":"generators/plugin_queue-worker/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:queue-worker</code>. Generates queue worker plugin</li> </ul>"},{"location":"generators/plugin_queue-worker/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_queue-worker/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_queue-worker/#aliases","title":"Aliases","text":"<ul> <li>queue-worker</li> </ul>"},{"location":"generators/plugin_rest-resource/","title":"plugin:rest-resource","text":"<p>Generates rest resource plugin</p>"},{"location":"generators/plugin_rest-resource/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:rest-resource</code>. Generates rest resource plugin</li> </ul>"},{"location":"generators/plugin_rest-resource/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_rest-resource/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_rest-resource/#aliases","title":"Aliases","text":"<ul> <li>rest-resource</li> </ul>"},{"location":"generators/plugin_views_argument-default/","title":"plugin:views:argument-default","text":"<p>Generates views default argument plugin</p>"},{"location":"generators/plugin_views_argument-default/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:views:argument-default</code>. Generates views default argument plugin</li> </ul>"},{"location":"generators/plugin_views_argument-default/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_views_argument-default/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_views_argument-default/#aliases","title":"Aliases","text":"<ul> <li>views-argument-default</li> </ul>"},{"location":"generators/plugin_views_field/","title":"plugin:views:field","text":"<p>Generates views field plugin</p>"},{"location":"generators/plugin_views_field/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:views:field</code>. Generates views field plugin</li> </ul>"},{"location":"generators/plugin_views_field/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_views_field/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_views_field/#aliases","title":"Aliases","text":"<ul> <li>views-field</li> </ul>"},{"location":"generators/plugin_views_style/","title":"plugin:views:style","text":"<p>Generates views style plugin</p>"},{"location":"generators/plugin_views_style/#examples","title":"Examples","text":"<ul> <li><code>drush generate plugin:views:style</code>. Generates views style plugin</li> </ul>"},{"location":"generators/plugin_views_style/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/plugin_views_style/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/plugin_views_style/#aliases","title":"Aliases","text":"<ul> <li>views-style</li> </ul>"},{"location":"generators/readme/","title":"readme","text":"<p>Generates README file</p>"},{"location":"generators/readme/#examples","title":"Examples","text":"<ul> <li><code>drush generate readme</code>. Generates README file</li> </ul>"},{"location":"generators/readme/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/readme/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/render-element/","title":"render-element","text":"<p>Generates Drupal render element</p>"},{"location":"generators/render-element/#examples","title":"Examples","text":"<ul> <li><code>drush generate render-element</code>. Generates Drupal render element</li> </ul>"},{"location":"generators/render-element/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/render-element/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service-provider/","title":"service-provider","text":"<p>Generates a service provider</p>"},{"location":"generators/service-provider/#examples","title":"Examples","text":"<ul> <li><code>drush generate service-provider</code>. Generates a service provider</li> </ul>"},{"location":"generators/service-provider/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service-provider/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_access-checker/","title":"service:access-checker","text":"<p>Generates an access checker service</p>"},{"location":"generators/service_access-checker/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:access-checker</code>. Generates an access checker service</li> </ul>"},{"location":"generators/service_access-checker/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_access-checker/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_access-checker/#aliases","title":"Aliases","text":"<ul> <li>access-checker</li> </ul>"},{"location":"generators/service_breadcrumb-builder/","title":"service:breadcrumb-builder","text":"<p>Generates a breadcrumb builder service</p>"},{"location":"generators/service_breadcrumb-builder/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:breadcrumb-builder</code>. Generates a breadcrumb builder service</li> </ul>"},{"location":"generators/service_breadcrumb-builder/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_breadcrumb-builder/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_breadcrumb-builder/#aliases","title":"Aliases","text":"<ul> <li>breadcrumb-builder</li> </ul>"},{"location":"generators/service_cache-context/","title":"service:cache-context","text":"<p>Generates a cache context service</p>"},{"location":"generators/service_cache-context/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:cache-context</code>. Generates a cache context service</li> </ul>"},{"location":"generators/service_cache-context/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_cache-context/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_cache-context/#aliases","title":"Aliases","text":"<ul> <li>cache-context</li> </ul>"},{"location":"generators/service_custom/","title":"service:custom","text":"<p>Generates a custom Drupal service</p>"},{"location":"generators/service_custom/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:custom</code>. Generates a custom Drupal service</li> </ul>"},{"location":"generators/service_custom/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_custom/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_custom/#aliases","title":"Aliases","text":"<ul> <li>custom-service</li> </ul>"},{"location":"generators/service_event-subscriber/","title":"service:event-subscriber","text":"<p>Generates an event subscriber</p>"},{"location":"generators/service_event-subscriber/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:event-subscriber</code>. Generates an event subscriber</li> </ul>"},{"location":"generators/service_event-subscriber/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_event-subscriber/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_event-subscriber/#aliases","title":"Aliases","text":"<ul> <li>event-subscriber</li> </ul>"},{"location":"generators/service_logger/","title":"service:logger","text":"<p>Generates a logger service</p>"},{"location":"generators/service_logger/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:logger</code>. Generates a logger service</li> </ul>"},{"location":"generators/service_logger/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_logger/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_logger/#aliases","title":"Aliases","text":"<ul> <li>logger</li> </ul>"},{"location":"generators/service_middleware/","title":"service:middleware","text":"<p>Generates a middleware</p>"},{"location":"generators/service_middleware/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:middleware</code>. Generates a middleware</li> </ul>"},{"location":"generators/service_middleware/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_middleware/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_middleware/#aliases","title":"Aliases","text":"<ul> <li>middleware</li> </ul>"},{"location":"generators/service_param-converter/","title":"service:param-converter","text":"<p>Generates a param converter service</p>"},{"location":"generators/service_param-converter/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:param-converter</code>. Generates a param converter service</li> </ul>"},{"location":"generators/service_param-converter/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_param-converter/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_param-converter/#aliases","title":"Aliases","text":"<ul> <li>param-converter</li> </ul>"},{"location":"generators/service_path-processor/","title":"service:path-processor","text":"<p>Generates a path processor service</p>"},{"location":"generators/service_path-processor/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:path-processor</code>. Generates a path processor service</li> </ul>"},{"location":"generators/service_path-processor/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_path-processor/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_path-processor/#aliases","title":"Aliases","text":"<ul> <li>path-processor</li> </ul>"},{"location":"generators/service_request-policy/","title":"service:request-policy","text":"<p>Generates a request policy service</p>"},{"location":"generators/service_request-policy/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:request-policy</code>. Generates a request policy service</li> </ul>"},{"location":"generators/service_request-policy/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_request-policy/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_request-policy/#aliases","title":"Aliases","text":"<ul> <li>request-policy</li> </ul>"},{"location":"generators/service_response-policy/","title":"service:response-policy","text":"<p>Generates a response policy service</p>"},{"location":"generators/service_response-policy/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:response-policy</code>. Generates a response policy service</li> </ul>"},{"location":"generators/service_response-policy/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_response-policy/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_response-policy/#aliases","title":"Aliases","text":"<ul> <li>response-policy</li> </ul>"},{"location":"generators/service_route-subscriber/","title":"service:route-subscriber","text":"<p>Generates a route subscriber</p>"},{"location":"generators/service_route-subscriber/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:route-subscriber</code>. Generates a route subscriber</li> </ul>"},{"location":"generators/service_route-subscriber/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_route-subscriber/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_route-subscriber/#aliases","title":"Aliases","text":"<ul> <li>route-subscriber</li> </ul>"},{"location":"generators/service_theme-negotiator/","title":"service:theme-negotiator","text":"<p>Generates a theme negotiator</p>"},{"location":"generators/service_theme-negotiator/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:theme-negotiator</code>. Generates a theme negotiator</li> </ul>"},{"location":"generators/service_theme-negotiator/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_theme-negotiator/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_theme-negotiator/#aliases","title":"Aliases","text":"<ul> <li>theme-negotiator</li> </ul>"},{"location":"generators/service_twig-extension/","title":"service:twig-extension","text":"<p>Generates Twig extension service</p>"},{"location":"generators/service_twig-extension/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:twig-extension</code>. Generates Twig extension service</li> </ul>"},{"location":"generators/service_twig-extension/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_twig-extension/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_twig-extension/#aliases","title":"Aliases","text":"<ul> <li>twig-extension</li> </ul>"},{"location":"generators/service_uninstall-validator/","title":"service:uninstall-validator","text":"<p>Generates a uninstall validator service</p>"},{"location":"generators/service_uninstall-validator/#examples","title":"Examples","text":"<ul> <li><code>drush generate service:uninstall-validator</code>. Generates a uninstall validator service</li> </ul>"},{"location":"generators/service_uninstall-validator/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/service_uninstall-validator/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/service_uninstall-validator/#aliases","title":"Aliases","text":"<ul> <li>uninstall-validator</li> </ul>"},{"location":"generators/single-directory-component/","title":"single-directory-component","text":"<p>Generates Drupal SDC theme component</p>"},{"location":"generators/single-directory-component/#examples","title":"Examples","text":"<ul> <li><code>drush generate single-directory-component</code>. Generates Drupal SDC theme component</li> </ul>"},{"location":"generators/single-directory-component/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/single-directory-component/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/single-directory-component/#aliases","title":"Aliases","text":"<ul> <li>sdc</li> </ul>"},{"location":"generators/test_browser/","title":"test:browser","text":"<p>Generates a browser based test</p>"},{"location":"generators/test_browser/#examples","title":"Examples","text":"<ul> <li><code>drush generate test:browser</code>. Generates a browser based test</li> </ul>"},{"location":"generators/test_browser/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/test_browser/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/test_browser/#aliases","title":"Aliases","text":"<ul> <li>browser-test</li> </ul>"},{"location":"generators/test_kernel/","title":"test:kernel","text":"<p>Generates a kernel based test</p>"},{"location":"generators/test_kernel/#examples","title":"Examples","text":"<ul> <li><code>drush generate test:kernel</code>. Generates a kernel based test</li> </ul>"},{"location":"generators/test_kernel/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/test_kernel/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/test_kernel/#aliases","title":"Aliases","text":"<ul> <li>kernel-test</li> </ul>"},{"location":"generators/test_nightwatch/","title":"test:nightwatch","text":"<p>Generates a nightwatch test</p>"},{"location":"generators/test_nightwatch/#examples","title":"Examples","text":"<ul> <li><code>drush generate test:nightwatch</code>. Generates a nightwatch test</li> </ul>"},{"location":"generators/test_nightwatch/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/test_nightwatch/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/test_nightwatch/#aliases","title":"Aliases","text":"<ul> <li>nightwatch-test</li> </ul>"},{"location":"generators/test_unit/","title":"test:unit","text":"<p>Generates a unit test</p>"},{"location":"generators/test_unit/#examples","title":"Examples","text":"<ul> <li><code>drush generate test:unit</code>. Generates a unit test</li> </ul>"},{"location":"generators/test_unit/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/test_unit/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/test_unit/#aliases","title":"Aliases","text":"<ul> <li>unit-test</li> </ul>"},{"location":"generators/test_webdriver/","title":"test:webdriver","text":"<p>Generates a test that supports JavaScript</p>"},{"location":"generators/test_webdriver/#examples","title":"Examples","text":"<ul> <li><code>drush generate test:webdriver</code>. Generates a test that supports JavaScript</li> </ul>"},{"location":"generators/test_webdriver/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/test_webdriver/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/test_webdriver/#aliases","title":"Aliases","text":"<ul> <li>webdriver-test</li> </ul>"},{"location":"generators/theme/","title":"theme","text":"<p>Generates Drupal theme</p>"},{"location":"generators/theme/#examples","title":"Examples","text":"<ul> <li><code>drush generate theme</code>. Generates Drupal theme</li> </ul>"},{"location":"generators/theme/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/theme/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/theme_settings/","title":"theme:settings","text":"<p>Generates Drupal theme-settings.php file</p>"},{"location":"generators/theme_settings/#examples","title":"Examples","text":"<ul> <li><code>drush generate theme:settings</code>. Generates Drupal theme-settings.php file</li> </ul>"},{"location":"generators/theme_settings/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/theme_settings/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_breakpoints/","title":"yml:breakpoints","text":"<p>Generates a breakpoints yml file</p>"},{"location":"generators/yml_breakpoints/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:breakpoints</code>. Generates a breakpoints yml file</li> </ul>"},{"location":"generators/yml_breakpoints/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_breakpoints/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_breakpoints/#aliases","title":"Aliases","text":"<ul> <li>breakpoints</li> </ul>"},{"location":"generators/yml_links_action/","title":"yml:links:action","text":"<p>Generates a links.action yml file</p>"},{"location":"generators/yml_links_action/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:links:action</code>. Generates a links.action yml file</li> </ul>"},{"location":"generators/yml_links_action/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_links_action/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_links_action/#aliases","title":"Aliases","text":"<ul> <li>action-links</li> </ul>"},{"location":"generators/yml_links_contextual/","title":"yml:links:contextual","text":"<p>Generates links.contextual yml file</p>"},{"location":"generators/yml_links_contextual/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:links:contextual</code>. Generates links.contextual yml file</li> </ul>"},{"location":"generators/yml_links_contextual/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_links_contextual/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_links_contextual/#aliases","title":"Aliases","text":"<ul> <li>contextual-links</li> </ul>"},{"location":"generators/yml_links_menu/","title":"yml:links:menu","text":"<p>Generates a links.menu yml file</p>"},{"location":"generators/yml_links_menu/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:links:menu</code>. Generates a links.menu yml file</li> </ul>"},{"location":"generators/yml_links_menu/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_links_menu/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_links_menu/#aliases","title":"Aliases","text":"<ul> <li>menu-links</li> </ul>"},{"location":"generators/yml_links_task/","title":"yml:links:task","text":"<p>Generates a links.task yml file</p>"},{"location":"generators/yml_links_task/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:links:task</code>. Generates a links.task yml file</li> </ul>"},{"location":"generators/yml_links_task/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_links_task/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_links_task/#aliases","title":"Aliases","text":"<ul> <li>task-links</li> </ul>"},{"location":"generators/yml_migration/","title":"yml:migration","text":"<p>Generates a migration yml file</p>"},{"location":"generators/yml_migration/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:migration</code>. Generates a migration yml file</li> </ul>"},{"location":"generators/yml_migration/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_migration/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_migration/#aliases","title":"Aliases","text":"<ul> <li>migration</li> <li>migration.yml</li> </ul>"},{"location":"generators/yml_module-libraries/","title":"yml:module-libraries","text":"<p>Generates module libraries yml file</p>"},{"location":"generators/yml_module-libraries/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:module-libraries</code>. Generates module libraries yml file</li> </ul>"},{"location":"generators/yml_module-libraries/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_module-libraries/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_module-libraries/#aliases","title":"Aliases","text":"<ul> <li>module-libraries</li> </ul>"},{"location":"generators/yml_permissions/","title":"yml:permissions","text":"<p>Generates a permissions yml file</p>"},{"location":"generators/yml_permissions/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:permissions</code>. Generates a permissions yml file</li> </ul>"},{"location":"generators/yml_permissions/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_permissions/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_permissions/#aliases","title":"Aliases","text":"<ul> <li>permissions</li> <li>permissions.yml</li> </ul>"},{"location":"generators/yml_routing/","title":"yml:routing","text":"<p>Generates a routing yml file</p>"},{"location":"generators/yml_routing/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:routing</code>. Generates a routing yml file</li> </ul>"},{"location":"generators/yml_routing/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_routing/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_routing/#aliases","title":"Aliases","text":"<ul> <li>routing</li> <li>routing.yml</li> </ul>"},{"location":"generators/yml_services/","title":"yml:services","text":"<p>Generates a services yml file</p>"},{"location":"generators/yml_services/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:services</code>. Generates a services yml file</li> </ul>"},{"location":"generators/yml_services/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_services/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_services/#aliases","title":"Aliases","text":"<ul> <li>services</li> <li>services.yml</li> </ul>"},{"location":"generators/yml_theme-libraries/","title":"yml:theme-libraries","text":"<p>Generates theme libraries yml file</p>"},{"location":"generators/yml_theme-libraries/#examples","title":"Examples","text":"<ul> <li><code>drush generate yml:theme-libraries</code>. Generates theme libraries yml file</li> </ul>"},{"location":"generators/yml_theme-libraries/#options","title":"Options","text":"<ul> <li> --answer=ANSWER. Answer to generator question.</li> <li> --destination=DESTINATION. Path to a base directory for file writing.</li> <li> --dry-run. Output the generated code but not save it to file system.</li> </ul>"},{"location":"generators/yml_theme-libraries/#topics","title":"Topics","text":"<ul> <li>Instructions on creating your own Drush Generators. (docs:generators)</li> </ul>"},{"location":"generators/yml_theme-libraries/#aliases","title":"Aliases","text":"<ul> <li>theme-libraries</li> </ul>"}]}